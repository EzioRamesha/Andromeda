namespace DataAccess.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class InitPhase2_4 : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("dbo.ClaimRegister", "ClaimDataId", "dbo.ClaimData");
            DropForeignKey("dbo.ClaimRegisterHistories", "ClaimDataId", "dbo.ClaimData");
            DropForeignKey("dbo.ClaimDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.ReferralRiDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.RiDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.SoaDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.DirectRetroStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.Remarks", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.RiDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.SoaDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.ClaimRegister", "OriginalClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ReferralClaims", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ClaimRegisterHistories", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.FinanceProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ReferralClaims", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.ClaimRegister", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.ClaimRegisterHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.RiDataWarehouseHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.PerLifeClaimData", "ClaimRegisterHistoryId", "dbo.ClaimRegisterHistories");
            DropForeignKey("dbo.InvoiceRegisterValuations", "InvoiceRegisterId", "dbo.InvoiceRegister");
            DropForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId", "dbo.Mfrs17ReportingDetails");
            DropForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories");
            DropForeignKey("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories");
            DropForeignKey("dbo.RetroRegisterFiles", "RetroRegisterId", "dbo.RetroRegister");
            DropForeignKey("dbo.SanctionBirthDates", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionComments", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionCountries", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionFormatNames", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionNames", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionIdentities", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionAddresses", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionFormatNames", "SanctionNameId", "dbo.SanctionNames");
            DropIndex("dbo.ClaimDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.ClaimDataBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.ClaimRegister", new[] { "ClaimDataId" });
            DropIndex("dbo.ClaimRegister", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.ClaimRegister", new[] { "OriginalClaimRegisterId" });
            DropIndex("dbo.ReferralClaims", new[] { "ClaimRegisterId" });
            DropIndex("dbo.ReferralClaims", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.ReferralRiDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "ClaimRegisterId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "ClaimDataId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "OriginalClaimRegisterId" });
            DropIndex("dbo.DirectRetroProvisioningTransactions", new[] { "ClaimRegisterId" });
            DropIndex("dbo.DirectRetroStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.Remarks", new[] { "StatusHistoryId" });
            DropIndex("dbo.FinanceProvisioningTransactions", new[] { "ClaimRegisterId" });
            DropIndex("dbo.InvoiceRegisterBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.InvoiceRegisterValuations", new[] { "InvoiceRegisterId" });
            DropIndex("dbo.Mfrs17CellMappings", new[] { "Mfrs17TreatyCode" });
            DropIndex("dbo.Mfrs17ReportingDetailRiDatas", new[] { "Mfrs17ReportingDetailId" });
            DropIndex("dbo.Mfrs17ReportingDetailRiDatas", new[] { "RiDataWarehouseHistoryId" });
            DropIndex("dbo.RiDataWarehouseHistories", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.PerLifeAggregationDetailData", new[] { "RiDataWarehouseHistoryId" });
            DropIndex("dbo.PerLifeClaimData", new[] { "ClaimRegisterHistoryId" });
            DropIndex("dbo.RetroRegisterBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.RetroRegisterFiles", new[] { "RetroRegisterId" });
            DropIndex("dbo.RiDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.RiDataBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.SanctionAddresses", new[] { "SanctionId" });
            DropIndex("dbo.SanctionBirthDates", new[] { "SanctionId" });
            DropIndex("dbo.SanctionComments", new[] { "SanctionId" });
            DropIndex("dbo.SanctionCountries", new[] { "SanctionId" });
            DropIndex("dbo.SanctionFormatNames", new[] { "SanctionId" });
            DropIndex("dbo.SanctionFormatNames", new[] { "SanctionNameId" });
            DropIndex("dbo.SanctionNames", new[] { "SanctionId" });
            DropIndex("dbo.SanctionIdentities", new[] { "SanctionId" });
            DropIndex("dbo.SoaDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.SoaDataBatchStatusFiles", new[] { "StatusHistoryId" });
            DropPrimaryKey("dbo.ClaimData");
            DropPrimaryKey("dbo.RawFiles");
            DropPrimaryKey("dbo.StatusHistories");
            DropPrimaryKey("dbo.ClaimRegister");
            DropPrimaryKey("dbo.RiDataWarehouse");
            DropPrimaryKey("dbo.ClaimRegisterHistories");
            DropPrimaryKey("dbo.Exports");
            DropPrimaryKey("dbo.FinanceProvisioningTransactions");
            DropPrimaryKey("dbo.InvoiceRegisterHistories");
            DropPrimaryKey("dbo.InvoiceRegister");
            DropPrimaryKey("dbo.InvoiceRegisterValuations");
            DropPrimaryKey("dbo.Mfrs17ReportingDetailRiDatas");
            DropPrimaryKey("dbo.Mfrs17ReportingDetails");
            DropPrimaryKey("dbo.RiDataWarehouseHistories");
            DropPrimaryKey("dbo.RetroRegister");
            DropPrimaryKey("dbo.RetroRegisterHistories");
            DropPrimaryKey("dbo.RiData");
            DropPrimaryKey("dbo.SanctionAddresses");
            DropPrimaryKey("dbo.Sanctions");
            DropPrimaryKey("dbo.SanctionBirthDates");
            DropPrimaryKey("dbo.SanctionComments");
            DropPrimaryKey("dbo.SanctionCountries");
            DropPrimaryKey("dbo.SanctionFormatNames");
            DropPrimaryKey("dbo.SanctionNames");
            DropPrimaryKey("dbo.SanctionIdentities");
            DropPrimaryKey("dbo.SanctionVerificationDetails");
            DropPrimaryKey("dbo.SoaData");
            DropPrimaryKey("dbo.SoaDataCompiledSummaries");
            DropPrimaryKey("dbo.SoaDataCompiledSummaryHistories");
            DropPrimaryKey("dbo.SoaDataHistories");
            DropPrimaryKey("dbo.UserTrails");
            AddColumn("dbo.AccountCodeMappings", "DebitCreditIndicatorPositive", c => c.Int());
            AddColumn("dbo.AccountCodeMappings", "DebitCreditIndicatorNegative", c => c.Int());
            AddColumn("dbo.AccountCodeMappings", "IsBalanceSheet", c => c.Boolean(nullable: false));
            AddColumn("dbo.InvoiceRegisterHistories", "Mfrs17CellName", c => c.String(maxLength: 50));
            AddColumn("dbo.InvoiceRegister", "Mfrs17CellName", c => c.String(maxLength: 50));
            AddColumn("dbo.Mfrs17CellMappings", "Mfrs17ContractCodeDetailId", c => c.Int());
            AddColumn("dbo.SoaDataCompiledSummaries", "Mfrs17CellName", c => c.String(maxLength: 50));
            AddColumn("dbo.SoaDataCompiledSummaryHistories", "Mfrs17CellName", c => c.String(maxLength: 50));
            AddColumn("dbo.SoaDataRiDataSummaries", "Mfrs17CellName", c => c.String(maxLength: 50));
            AlterColumn("dbo.AccountCodeMappings", "TreatyType", c => c.String());
            AlterColumn("dbo.AccountCodeMappings", "ClaimCode", c => c.String());
            AlterColumn("dbo.AccountCodeMappings", "BusinessOrigin", c => c.String());
            AlterColumn("dbo.AccountCodeMappings", "InvoiceField", c => c.String());
            AlterColumn("dbo.TreatyCodes", "AccountFor", c => c.String());
            AlterColumn("dbo.AnnuityFactors", "CedingPlanCode", c => c.String());
            AlterColumn("dbo.ClaimCodeMappings", "MlreEventCode", c => c.String());
            AlterColumn("dbo.ClaimCodeMappings", "MlreBenefitCode", c => c.String());
            AlterColumn("dbo.ClaimData", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.ClaimData", "Errors", c => c.String());
            AlterColumn("dbo.ClaimData", "CustomField", c => c.String());
            AlterColumn("dbo.ClaimDataBatches", "Configs", c => c.String());
            AlterColumn("dbo.ClaimDataBatches", "OverrideProperties", c => c.String());
            AlterColumn("dbo.ClaimDataConfigs", "Configs", c => c.String());
            AlterColumn("dbo.RiDataBatches", "Configs", c => c.String());
            AlterColumn("dbo.RiDataBatches", "OverrideProperties", c => c.String());
            AlterColumn("dbo.RiDataConfigs", "Configs", c => c.String());
            AlterColumn("dbo.ClaimDataFiles", "RawFileId", c => c.Long(nullable: false));
            AlterColumn("dbo.ClaimDataFiles", "Configs", c => c.String());
            AlterColumn("dbo.ClaimDataFiles", "OverrideProperties", c => c.String());
            AlterColumn("dbo.ClaimDataFiles", "Errors", c => c.String());
            AlterColumn("dbo.RawFiles", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.StatusHistories", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.ClaimRegister", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.ClaimRegister", "ClaimDataId", c => c.Long());
            AlterColumn("dbo.ClaimRegister", "RiDataWarehouseId", c => c.Long());
            AlterColumn("dbo.ClaimRegister", "OriginalClaimRegisterId", c => c.Long());
            AlterColumn("dbo.ClaimRegister", "Errors", c => c.String());
            AlterColumn("dbo.ClaimRegister", "ProvisionErrors", c => c.String());
            AlterColumn("dbo.ClaimRegister", "RedFlagWarnings", c => c.String());
            AlterColumn("dbo.ClaimRegister", "Checklist", c => c.String());
            AlterColumn("dbo.ReferralClaims", "ClaimRegisterId", c => c.Long());
            AlterColumn("dbo.ReferralClaims", "RiDataWarehouseId", c => c.Long());
            AlterColumn("dbo.ReferralClaims", "Checklist", c => c.String());
            AlterColumn("dbo.ReferralClaims", "Error", c => c.String());
            AlterColumn("dbo.ReferralRiDataFiles", "RawFileId", c => c.Long(nullable: false));
            AlterColumn("dbo.ReferralRiDataFiles", "Error", c => c.String());
            AlterColumn("dbo.RiDataWarehouse", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.RiDataWarehouse", "RateTable", c => c.String(maxLength: 128));
            AlterColumn("dbo.ClaimRegisterHistories", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.ClaimRegisterHistories", "ClaimRegisterId", c => c.Long(nullable: false));
            AlterColumn("dbo.ClaimRegisterHistories", "ClaimDataId", c => c.Long());
            AlterColumn("dbo.ClaimRegisterHistories", "RiDataWarehouseId", c => c.Long());
            AlterColumn("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId", c => c.Long());
            AlterColumn("dbo.ClaimRegisterHistories", "Errors", c => c.String());
            AlterColumn("dbo.ClaimRegisterHistories", "ProvisionErrors", c => c.String());
            AlterColumn("dbo.ClaimRegisterHistories", "RedFlagWarnings", c => c.String());
            AlterColumn("dbo.ClaimRegisterHistories", "Checklist", c => c.String());
            AlterColumn("dbo.DirectRetroConfigurations", "RetroParty", c => c.String(nullable: false));
            AlterColumn("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId", c => c.Long(nullable: false));
            AlterColumn("dbo.DirectRetroStatusFiles", "StatusHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.Remarks", "StatusHistoryId", c => c.Long());
            AlterColumn("dbo.Emails", "Data", c => c.String());
            AlterColumn("dbo.EventClaimCodeMappings", "CedingEventCode", c => c.String());
            AlterColumn("dbo.EventClaimCodeMappings", "CedingClaimType", c => c.String());
            AlterColumn("dbo.Exports", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.Exports", "Parameters", c => c.String());
            AlterColumn("dbo.FacMasterListings", "PolicyNumber", c => c.String());
            AlterColumn("dbo.FacMasterListings", "BenefitCode", c => c.String());
            AlterColumn("dbo.FinanceProvisioningTransactions", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.FinanceProvisioningTransactions", "ClaimRegisterId", c => c.Long(nullable: false));
            AlterColumn("dbo.InvoiceRegisterBatchFiles", "Errors", c => c.String());
            AlterColumn("dbo.InvoiceRegisterBatchRemarks", "Content", c => c.String());
            AlterColumn("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.InvoiceRegisterHistories", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.InvoiceRegisterHistories", "Remark", c => c.String());
            AlterColumn("dbo.InvoiceRegister", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.InvoiceRegister", "Remark", c => c.String());
            AlterColumn("dbo.InvoiceRegisterValuations", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.InvoiceRegisterValuations", "InvoiceRegisterId", c => c.Long(nullable: false));
            AlterColumn("dbo.ItemCodeMappings", "TreatyType", c => c.String());
            AlterColumn("dbo.ItemCodeMappings", "TreatyCode", c => c.String());
            AlterColumn("dbo.Mfrs17CellMappings", "TreatyCode", c => c.String(nullable: false));
            AlterColumn("dbo.Mfrs17CellMappings", "CedingPlanCode", c => c.String());
            AlterColumn("dbo.Mfrs17CellMappings", "BenefitCode", c => c.String());
            AlterColumn("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId", c => c.Long(nullable: false));
            AlterColumn("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.Mfrs17ReportingDetails", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.RiDataWarehouseHistories", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.RiDataWarehouseHistories", "RiDataWarehouseId", c => c.Long(nullable: false));
            AlterColumn("dbo.RiDataWarehouseHistories", "RateTable", c => c.String(maxLength: 128));
            AlterColumn("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.PerLifeClaimData", "ClaimRegisterHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.PremiumSpreadTableDetails", "CedingPlanCode", c => c.String(nullable: false));
            AlterColumn("dbo.RateTables", "TreatyCode", c => c.String(nullable: false));
            AlterColumn("dbo.RateTables", "CedingPlanCode", c => c.String());
            AlterColumn("dbo.RateTables", "CedingTreatyCode", c => c.String());
            AlterColumn("dbo.RateTables", "CedingPlanCode2", c => c.String());
            AlterColumn("dbo.RateTables", "CedingBenefitTypeCode", c => c.String());
            AlterColumn("dbo.RateTables", "CedingBenefitRiskCode", c => c.String());
            AlterColumn("dbo.RateTables", "GroupPolicyNumber", c => c.String());
            AlterColumn("dbo.RetroRegisterBatchFiles", "Errors", c => c.String());
            AlterColumn("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.RetroRegisterFiles", "RetroRegisterId", c => c.Long(nullable: false));
            AlterColumn("dbo.RetroRegister", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.RetroRegister", "Remark", c => c.String());
            AlterColumn("dbo.RetroRegisterHistories", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.RetroRegisterHistories", "Remark", c => c.String());
            AlterColumn("dbo.RetroStatements", "AccountsFor", c => c.String());
            AlterColumn("dbo.RiData", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.RiData", "Errors", c => c.String());
            AlterColumn("dbo.RiData", "CustomField", c => c.String());
            AlterColumn("dbo.RiData", "RateTable", c => c.String(maxLength: 128));
            AlterColumn("dbo.RiDataFiles", "RawFileId", c => c.Long(nullable: false));
            AlterColumn("dbo.RiDataFiles", "Configs", c => c.String());
            AlterColumn("dbo.RiDataFiles", "OverrideProperties", c => c.String());
            AlterColumn("dbo.RiDataFiles", "Errors", c => c.String());
            AlterColumn("dbo.RiDataBatchStatusFiles", "StatusHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionAddresses", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionAddresses", "SanctionId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionAddresses", "Address", c => c.String());
            AlterColumn("dbo.Sanctions", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionBatches", "Errors", c => c.String());
            AlterColumn("dbo.SanctionBirthDates", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionBirthDates", "SanctionId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionComments", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionComments", "SanctionId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionComments", "Comment", c => c.String());
            AlterColumn("dbo.SanctionCountries", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionCountries", "SanctionId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionFormatNames", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionFormatNames", "SanctionId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionFormatNames", "SanctionNameId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionNames", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionNames", "SanctionId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionIdentities", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionIdentities", "SanctionId", c => c.Long(nullable: false));
            AlterColumn("dbo.SanctionVerificationDetails", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SanctionVerificationDetails", "SanctionRefNumber", c => c.String());
            AlterColumn("dbo.SanctionVerificationDetails", "SanctionIdNumber", c => c.String());
            AlterColumn("dbo.SanctionVerificationDetails", "SanctionAddress", c => c.String());
            AlterColumn("dbo.SanctionVerificationDetails", "Remark", c => c.String());
            AlterColumn("dbo.SanctionVerificationDetails", "PreviousDecisionRemark", c => c.String());
            AlterColumn("dbo.SanctionWhitelists", "Reason", c => c.String());
            AlterColumn("dbo.SoaData", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SoaData", "Errors", c => c.String());
            AlterColumn("dbo.SoaDataFiles", "RawFileId", c => c.Long(nullable: false));
            AlterColumn("dbo.SoaDataFiles", "Errors", c => c.String());
            AlterColumn("dbo.SoaDataBatchStatusFiles", "StatusHistoryId", c => c.Long(nullable: false));
            AlterColumn("dbo.SoaDataCompiledSummaries", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SoaDataCompiledSummaryHistories", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SoaDataHistories", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.SoaDataHistories", "Errors", c => c.String());
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingPlanCode", c => c.String(nullable: false));
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingBenefitTypeCode", c => c.String(nullable: false));
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingBenefitRiskCode", c => c.String());
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingTreatyCode", c => c.String());
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CampaignCode", c => c.String());
            AlterColumn("dbo.TreatyDiscountTableDetails", "CedingPlanCode", c => c.String(nullable: false));
            AlterColumn("dbo.UserTrails", "Id", c => c.Long(nullable: false, identity: true));
            AlterColumn("dbo.UserTrails", "Data", c => c.String());
            AddPrimaryKey("dbo.ClaimData", "Id");
            AddPrimaryKey("dbo.RawFiles", "Id");
            AddPrimaryKey("dbo.StatusHistories", "Id");
            AddPrimaryKey("dbo.ClaimRegister", "Id");
            AddPrimaryKey("dbo.RiDataWarehouse", "Id");
            AddPrimaryKey("dbo.ClaimRegisterHistories", "Id");
            AddPrimaryKey("dbo.Exports", "Id");
            AddPrimaryKey("dbo.FinanceProvisioningTransactions", "Id");
            AddPrimaryKey("dbo.InvoiceRegisterHistories", "Id");
            AddPrimaryKey("dbo.InvoiceRegister", "Id");
            AddPrimaryKey("dbo.InvoiceRegisterValuations", "Id");
            AddPrimaryKey("dbo.Mfrs17ReportingDetailRiDatas", new[] { "Mfrs17ReportingDetailId", "RiDataWarehouseHistoryId" });
            AddPrimaryKey("dbo.Mfrs17ReportingDetails", "Id");
            AddPrimaryKey("dbo.RiDataWarehouseHistories", "Id");
            AddPrimaryKey("dbo.RetroRegister", "Id");
            AddPrimaryKey("dbo.RetroRegisterHistories", "Id");
            AddPrimaryKey("dbo.RiData", "Id");
            AddPrimaryKey("dbo.SanctionAddresses", "Id");
            AddPrimaryKey("dbo.Sanctions", "Id");
            AddPrimaryKey("dbo.SanctionBirthDates", "Id");
            AddPrimaryKey("dbo.SanctionComments", "Id");
            AddPrimaryKey("dbo.SanctionCountries", "Id");
            AddPrimaryKey("dbo.SanctionFormatNames", "Id");
            AddPrimaryKey("dbo.SanctionNames", "Id");
            AddPrimaryKey("dbo.SanctionIdentities", "Id");
            AddPrimaryKey("dbo.SanctionVerificationDetails", "Id");
            AddPrimaryKey("dbo.SoaData", "Id");
            AddPrimaryKey("dbo.SoaDataCompiledSummaries", "Id");
            AddPrimaryKey("dbo.SoaDataCompiledSummaryHistories", "Id");
            AddPrimaryKey("dbo.SoaDataHistories", "Id");
            AddPrimaryKey("dbo.UserTrails", "Id");
            CreateIndex("dbo.AccountCodeMappings", "DebitCreditIndicatorPositive");
            CreateIndex("dbo.AccountCodeMappings", "DebitCreditIndicatorNegative");
            CreateIndex("dbo.AccountCodeMappings", "IsBalanceSheet");
            CreateIndex("dbo.ClaimDataFiles", "RawFileId");
            CreateIndex("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.ClaimRegister", "ClaimDataId");
            CreateIndex("dbo.ClaimRegister", "RiDataWarehouseId");
            CreateIndex("dbo.ClaimRegister", "OriginalClaimRegisterId");
            CreateIndex("dbo.ReferralClaims", "ClaimRegisterId");
            CreateIndex("dbo.ReferralClaims", "RiDataWarehouseId");
            CreateIndex("dbo.ReferralRiDataFiles", "RawFileId");
            CreateIndex("dbo.ClaimRegisterHistories", "ClaimRegisterId");
            CreateIndex("dbo.ClaimRegisterHistories", "ClaimDataId");
            CreateIndex("dbo.ClaimRegisterHistories", "RiDataWarehouseId");
            CreateIndex("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId");
            CreateIndex("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId");
            CreateIndex("dbo.DirectRetroStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.Remarks", "StatusHistoryId");
            CreateIndex("dbo.FinanceProvisioningTransactions", "ClaimRegisterId");
            CreateIndex("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.InvoiceRegisterValuations", "InvoiceRegisterId");
            CreateIndex("dbo.Mfrs17CellMappings", "Mfrs17ContractCodeDetailId");
            CreateIndex("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId");
            CreateIndex("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId");
            CreateIndex("dbo.RiDataWarehouseHistories", "RiDataWarehouseId");
            CreateIndex("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId");
            CreateIndex("dbo.PerLifeClaimData", "ClaimRegisterHistoryId");
            CreateIndex("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.RetroRegisterFiles", "RetroRegisterId");
            CreateIndex("dbo.RiDataFiles", "RawFileId");
            CreateIndex("dbo.RiDataBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.SanctionAddresses", "SanctionId");
            CreateIndex("dbo.SanctionBirthDates", "SanctionId");
            CreateIndex("dbo.SanctionComments", "SanctionId");
            CreateIndex("dbo.SanctionCountries", "SanctionId");
            CreateIndex("dbo.SanctionFormatNames", "SanctionId");
            CreateIndex("dbo.SanctionFormatNames", "SanctionNameId");
            CreateIndex("dbo.SanctionNames", "SanctionId");
            CreateIndex("dbo.SanctionIdentities", "SanctionId");
            CreateIndex("dbo.SoaDataFiles", "RawFileId");
            CreateIndex("dbo.SoaDataBatchStatusFiles", "StatusHistoryId");
            AddForeignKey("dbo.Mfrs17CellMappings", "Mfrs17ContractCodeDetailId", "dbo.Mfrs17ContractCodeDetails", "Id");
            AddForeignKey("dbo.ClaimRegister", "ClaimDataId", "dbo.ClaimData", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "ClaimDataId", "dbo.ClaimData", "Id");
            AddForeignKey("dbo.ClaimDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.ReferralRiDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.RiDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.SoaDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.DirectRetroStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.Remarks", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.RiDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.SoaDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.ClaimRegister", "OriginalClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ReferralClaims", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.FinanceProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ReferralClaims", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.ClaimRegister", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.RiDataWarehouseHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.PerLifeClaimData", "ClaimRegisterHistoryId", "dbo.ClaimRegisterHistories", "Id");
            AddForeignKey("dbo.InvoiceRegisterValuations", "InvoiceRegisterId", "dbo.InvoiceRegister", "Id");
            AddForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId", "dbo.Mfrs17ReportingDetails", "Id");
            AddForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories", "Id");
            AddForeignKey("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories", "Id");
            AddForeignKey("dbo.RetroRegisterFiles", "RetroRegisterId", "dbo.RetroRegister", "Id");
            AddForeignKey("dbo.SanctionBirthDates", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionComments", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionCountries", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionFormatNames", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionNames", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionIdentities", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionAddresses", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionFormatNames", "SanctionNameId", "dbo.SanctionNames", "Id", cascadeDelete: true);
            DropColumn("dbo.Mfrs17CellMappings", "Mfrs17TreatyCode");
        }
        
        public override void Down()
        {
            AddColumn("dbo.Mfrs17CellMappings", "Mfrs17TreatyCode", c => c.String(nullable: false, maxLength: 25));
            DropForeignKey("dbo.SanctionFormatNames", "SanctionNameId", "dbo.SanctionNames");
            DropForeignKey("dbo.SanctionAddresses", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionIdentities", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionNames", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionFormatNames", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionCountries", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionComments", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.SanctionBirthDates", "SanctionId", "dbo.Sanctions");
            DropForeignKey("dbo.RetroRegisterFiles", "RetroRegisterId", "dbo.RetroRegister");
            DropForeignKey("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories");
            DropForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories");
            DropForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId", "dbo.Mfrs17ReportingDetails");
            DropForeignKey("dbo.InvoiceRegisterValuations", "InvoiceRegisterId", "dbo.InvoiceRegister");
            DropForeignKey("dbo.PerLifeClaimData", "ClaimRegisterHistoryId", "dbo.ClaimRegisterHistories");
            DropForeignKey("dbo.RiDataWarehouseHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.ClaimRegisterHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.ClaimRegister", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.ReferralClaims", "RiDataWarehouseId", "dbo.RiDataWarehouse");
            DropForeignKey("dbo.FinanceProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ClaimRegisterHistories", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ReferralClaims", "ClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.ClaimRegister", "OriginalClaimRegisterId", "dbo.ClaimRegister");
            DropForeignKey("dbo.SoaDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.RiDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.Remarks", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.DirectRetroStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories");
            DropForeignKey("dbo.SoaDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.RiDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.ReferralRiDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.ClaimDataFiles", "RawFileId", "dbo.RawFiles");
            DropForeignKey("dbo.ClaimRegisterHistories", "ClaimDataId", "dbo.ClaimData");
            DropForeignKey("dbo.ClaimRegister", "ClaimDataId", "dbo.ClaimData");
            DropForeignKey("dbo.Mfrs17CellMappings", "Mfrs17ContractCodeDetailId", "dbo.Mfrs17ContractCodeDetails");
            DropIndex("dbo.SoaDataBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.SoaDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.SanctionIdentities", new[] { "SanctionId" });
            DropIndex("dbo.SanctionNames", new[] { "SanctionId" });
            DropIndex("dbo.SanctionFormatNames", new[] { "SanctionNameId" });
            DropIndex("dbo.SanctionFormatNames", new[] { "SanctionId" });
            DropIndex("dbo.SanctionCountries", new[] { "SanctionId" });
            DropIndex("dbo.SanctionComments", new[] { "SanctionId" });
            DropIndex("dbo.SanctionBirthDates", new[] { "SanctionId" });
            DropIndex("dbo.SanctionAddresses", new[] { "SanctionId" });
            DropIndex("dbo.RiDataBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.RiDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.RetroRegisterFiles", new[] { "RetroRegisterId" });
            DropIndex("dbo.RetroRegisterBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.PerLifeClaimData", new[] { "ClaimRegisterHistoryId" });
            DropIndex("dbo.PerLifeAggregationDetailData", new[] { "RiDataWarehouseHistoryId" });
            DropIndex("dbo.RiDataWarehouseHistories", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.Mfrs17ReportingDetailRiDatas", new[] { "RiDataWarehouseHistoryId" });
            DropIndex("dbo.Mfrs17ReportingDetailRiDatas", new[] { "Mfrs17ReportingDetailId" });
            DropIndex("dbo.Mfrs17CellMappings", new[] { "Mfrs17ContractCodeDetailId" });
            DropIndex("dbo.InvoiceRegisterValuations", new[] { "InvoiceRegisterId" });
            DropIndex("dbo.InvoiceRegisterBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.FinanceProvisioningTransactions", new[] { "ClaimRegisterId" });
            DropIndex("dbo.Remarks", new[] { "StatusHistoryId" });
            DropIndex("dbo.DirectRetroStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.DirectRetroProvisioningTransactions", new[] { "ClaimRegisterId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "OriginalClaimRegisterId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "ClaimDataId" });
            DropIndex("dbo.ClaimRegisterHistories", new[] { "ClaimRegisterId" });
            DropIndex("dbo.ReferralRiDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.ReferralClaims", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.ReferralClaims", new[] { "ClaimRegisterId" });
            DropIndex("dbo.ClaimRegister", new[] { "OriginalClaimRegisterId" });
            DropIndex("dbo.ClaimRegister", new[] { "RiDataWarehouseId" });
            DropIndex("dbo.ClaimRegister", new[] { "ClaimDataId" });
            DropIndex("dbo.ClaimDataBatchStatusFiles", new[] { "StatusHistoryId" });
            DropIndex("dbo.ClaimDataFiles", new[] { "RawFileId" });
            DropIndex("dbo.AccountCodeMappings", new[] { "IsBalanceSheet" });
            DropIndex("dbo.AccountCodeMappings", new[] { "DebitCreditIndicatorNegative" });
            DropIndex("dbo.AccountCodeMappings", new[] { "DebitCreditIndicatorPositive" });
            DropPrimaryKey("dbo.UserTrails");
            DropPrimaryKey("dbo.SoaDataHistories");
            DropPrimaryKey("dbo.SoaDataCompiledSummaryHistories");
            DropPrimaryKey("dbo.SoaDataCompiledSummaries");
            DropPrimaryKey("dbo.SoaData");
            DropPrimaryKey("dbo.SanctionVerificationDetails");
            DropPrimaryKey("dbo.SanctionIdentities");
            DropPrimaryKey("dbo.SanctionNames");
            DropPrimaryKey("dbo.SanctionFormatNames");
            DropPrimaryKey("dbo.SanctionCountries");
            DropPrimaryKey("dbo.SanctionComments");
            DropPrimaryKey("dbo.SanctionBirthDates");
            DropPrimaryKey("dbo.Sanctions");
            DropPrimaryKey("dbo.SanctionAddresses");
            DropPrimaryKey("dbo.RiData");
            DropPrimaryKey("dbo.RetroRegisterHistories");
            DropPrimaryKey("dbo.RetroRegister");
            DropPrimaryKey("dbo.RiDataWarehouseHistories");
            DropPrimaryKey("dbo.Mfrs17ReportingDetails");
            DropPrimaryKey("dbo.Mfrs17ReportingDetailRiDatas");
            DropPrimaryKey("dbo.InvoiceRegisterValuations");
            DropPrimaryKey("dbo.InvoiceRegister");
            DropPrimaryKey("dbo.InvoiceRegisterHistories");
            DropPrimaryKey("dbo.FinanceProvisioningTransactions");
            DropPrimaryKey("dbo.Exports");
            DropPrimaryKey("dbo.ClaimRegisterHistories");
            DropPrimaryKey("dbo.RiDataWarehouse");
            DropPrimaryKey("dbo.ClaimRegister");
            DropPrimaryKey("dbo.StatusHistories");
            DropPrimaryKey("dbo.RawFiles");
            DropPrimaryKey("dbo.ClaimData");
            AlterColumn("dbo.UserTrails", "Data", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.UserTrails", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.TreatyDiscountTableDetails", "CedingPlanCode", c => c.String(nullable: false, storeType: "ntext"));
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CampaignCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingTreatyCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingBenefitRiskCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingBenefitTypeCode", c => c.String(nullable: false, storeType: "ntext"));
            AlterColumn("dbo.TreatyBenefitCodeMappings", "CedingPlanCode", c => c.String(nullable: false, storeType: "ntext"));
            AlterColumn("dbo.SoaDataHistories", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SoaDataHistories", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SoaDataCompiledSummaryHistories", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SoaDataCompiledSummaries", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SoaDataBatchStatusFiles", "StatusHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.SoaDataFiles", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SoaDataFiles", "RawFileId", c => c.Int(nullable: false));
            AlterColumn("dbo.SoaData", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SoaData", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionWhitelists", "Reason", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionVerificationDetails", "PreviousDecisionRemark", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionVerificationDetails", "Remark", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionVerificationDetails", "SanctionAddress", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionVerificationDetails", "SanctionIdNumber", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionVerificationDetails", "SanctionRefNumber", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionVerificationDetails", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionIdentities", "SanctionId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionIdentities", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionNames", "SanctionId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionNames", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionFormatNames", "SanctionNameId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionFormatNames", "SanctionId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionFormatNames", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionCountries", "SanctionId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionCountries", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionComments", "Comment", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionComments", "SanctionId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionComments", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionBirthDates", "SanctionId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionBirthDates", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionBatches", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.Sanctions", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.SanctionAddresses", "Address", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.SanctionAddresses", "SanctionId", c => c.Int(nullable: false));
            AlterColumn("dbo.SanctionAddresses", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.RiDataBatchStatusFiles", "StatusHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.RiDataFiles", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RiDataFiles", "OverrideProperties", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RiDataFiles", "Configs", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RiDataFiles", "RawFileId", c => c.Int(nullable: false));
            AlterColumn("dbo.RiData", "RateTable", c => c.String(maxLength: 50));
            AlterColumn("dbo.RiData", "CustomField", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RiData", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RiData", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.RetroStatements", "AccountsFor", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RetroRegisterHistories", "Remark", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RetroRegisterHistories", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.RetroRegister", "Remark", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RetroRegister", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.RetroRegisterFiles", "RetroRegisterId", c => c.Int(nullable: false));
            AlterColumn("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.RetroRegisterBatchFiles", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RateTables", "GroupPolicyNumber", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RateTables", "CedingBenefitRiskCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RateTables", "CedingBenefitTypeCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RateTables", "CedingPlanCode2", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RateTables", "CedingTreatyCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RateTables", "CedingPlanCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RateTables", "TreatyCode", c => c.String(nullable: false, storeType: "ntext"));
            AlterColumn("dbo.PremiumSpreadTableDetails", "CedingPlanCode", c => c.String(nullable: false, storeType: "ntext"));
            AlterColumn("dbo.PerLifeClaimData", "ClaimRegisterHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.RiDataWarehouseHistories", "RateTable", c => c.String(maxLength: 50));
            AlterColumn("dbo.RiDataWarehouseHistories", "RiDataWarehouseId", c => c.Int(nullable: false));
            AlterColumn("dbo.RiDataWarehouseHistories", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.Mfrs17ReportingDetails", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId", c => c.Int(nullable: false));
            AlterColumn("dbo.Mfrs17CellMappings", "BenefitCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.Mfrs17CellMappings", "CedingPlanCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.Mfrs17CellMappings", "TreatyCode", c => c.String(nullable: false, storeType: "ntext"));
            AlterColumn("dbo.ItemCodeMappings", "TreatyCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ItemCodeMappings", "TreatyType", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.InvoiceRegisterValuations", "InvoiceRegisterId", c => c.Int(nullable: false));
            AlterColumn("dbo.InvoiceRegisterValuations", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.InvoiceRegister", "Remark", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.InvoiceRegister", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.InvoiceRegisterHistories", "Remark", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.InvoiceRegisterHistories", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.InvoiceRegisterBatchRemarks", "Content", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.InvoiceRegisterBatchFiles", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.FinanceProvisioningTransactions", "ClaimRegisterId", c => c.Int(nullable: false));
            AlterColumn("dbo.FinanceProvisioningTransactions", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.FacMasterListings", "BenefitCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.FacMasterListings", "PolicyNumber", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.Exports", "Parameters", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.Exports", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.EventClaimCodeMappings", "CedingClaimType", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.EventClaimCodeMappings", "CedingEventCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.Emails", "Data", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.Remarks", "StatusHistoryId", c => c.Int());
            AlterColumn("dbo.DirectRetroStatusFiles", "StatusHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId", c => c.Int(nullable: false));
            AlterColumn("dbo.DirectRetroConfigurations", "RetroParty", c => c.String(nullable: false, storeType: "ntext"));
            AlterColumn("dbo.ClaimRegisterHistories", "Checklist", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegisterHistories", "RedFlagWarnings", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegisterHistories", "ProvisionErrors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegisterHistories", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId", c => c.Int());
            AlterColumn("dbo.ClaimRegisterHistories", "RiDataWarehouseId", c => c.Int());
            AlterColumn("dbo.ClaimRegisterHistories", "ClaimDataId", c => c.Int());
            AlterColumn("dbo.ClaimRegisterHistories", "ClaimRegisterId", c => c.Int(nullable: false));
            AlterColumn("dbo.ClaimRegisterHistories", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.RiDataWarehouse", "RateTable", c => c.String(maxLength: 50));
            AlterColumn("dbo.RiDataWarehouse", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.ReferralRiDataFiles", "Error", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ReferralRiDataFiles", "RawFileId", c => c.Int(nullable: false));
            AlterColumn("dbo.ReferralClaims", "Error", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ReferralClaims", "Checklist", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ReferralClaims", "RiDataWarehouseId", c => c.Int());
            AlterColumn("dbo.ReferralClaims", "ClaimRegisterId", c => c.Int());
            AlterColumn("dbo.ClaimRegister", "Checklist", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegister", "RedFlagWarnings", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegister", "ProvisionErrors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegister", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimRegister", "OriginalClaimRegisterId", c => c.Int());
            AlterColumn("dbo.ClaimRegister", "RiDataWarehouseId", c => c.Int());
            AlterColumn("dbo.ClaimRegister", "ClaimDataId", c => c.Int());
            AlterColumn("dbo.ClaimRegister", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.StatusHistories", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId", c => c.Int(nullable: false));
            AlterColumn("dbo.RawFiles", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.ClaimDataFiles", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimDataFiles", "OverrideProperties", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimDataFiles", "Configs", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimDataFiles", "RawFileId", c => c.Int(nullable: false));
            AlterColumn("dbo.RiDataConfigs", "Configs", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RiDataBatches", "OverrideProperties", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.RiDataBatches", "Configs", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimDataConfigs", "Configs", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimDataBatches", "OverrideProperties", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimDataBatches", "Configs", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimData", "CustomField", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimData", "Errors", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimData", "Id", c => c.Int(nullable: false, identity: true));
            AlterColumn("dbo.ClaimCodeMappings", "MlreBenefitCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.ClaimCodeMappings", "MlreEventCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.AnnuityFactors", "CedingPlanCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.TreatyCodes", "AccountFor", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.AccountCodeMappings", "InvoiceField", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.AccountCodeMappings", "BusinessOrigin", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.AccountCodeMappings", "ClaimCode", c => c.String(storeType: "ntext"));
            AlterColumn("dbo.AccountCodeMappings", "TreatyType", c => c.String(storeType: "ntext"));
            DropColumn("dbo.SoaDataRiDataSummaries", "Mfrs17CellName");
            DropColumn("dbo.SoaDataCompiledSummaryHistories", "Mfrs17CellName");
            DropColumn("dbo.SoaDataCompiledSummaries", "Mfrs17CellName");
            DropColumn("dbo.Mfrs17CellMappings", "Mfrs17ContractCodeDetailId");
            DropColumn("dbo.InvoiceRegister", "Mfrs17CellName");
            DropColumn("dbo.InvoiceRegisterHistories", "Mfrs17CellName");
            DropColumn("dbo.AccountCodeMappings", "IsBalanceSheet");
            DropColumn("dbo.AccountCodeMappings", "DebitCreditIndicatorNegative");
            DropColumn("dbo.AccountCodeMappings", "DebitCreditIndicatorPositive");
            AddPrimaryKey("dbo.UserTrails", "Id");
            AddPrimaryKey("dbo.SoaDataHistories", "Id");
            AddPrimaryKey("dbo.SoaDataCompiledSummaryHistories", "Id");
            AddPrimaryKey("dbo.SoaDataCompiledSummaries", "Id");
            AddPrimaryKey("dbo.SoaData", "Id");
            AddPrimaryKey("dbo.SanctionVerificationDetails", "Id");
            AddPrimaryKey("dbo.SanctionIdentities", "Id");
            AddPrimaryKey("dbo.SanctionNames", "Id");
            AddPrimaryKey("dbo.SanctionFormatNames", "Id");
            AddPrimaryKey("dbo.SanctionCountries", "Id");
            AddPrimaryKey("dbo.SanctionComments", "Id");
            AddPrimaryKey("dbo.SanctionBirthDates", "Id");
            AddPrimaryKey("dbo.Sanctions", "Id");
            AddPrimaryKey("dbo.SanctionAddresses", "Id");
            AddPrimaryKey("dbo.RiData", "Id");
            AddPrimaryKey("dbo.RetroRegisterHistories", "Id");
            AddPrimaryKey("dbo.RetroRegister", "Id");
            AddPrimaryKey("dbo.RiDataWarehouseHistories", "Id");
            AddPrimaryKey("dbo.Mfrs17ReportingDetails", "Id");
            AddPrimaryKey("dbo.Mfrs17ReportingDetailRiDatas", new[] { "Mfrs17ReportingDetailId", "RiDataWarehouseHistoryId" });
            AddPrimaryKey("dbo.InvoiceRegisterValuations", "Id");
            AddPrimaryKey("dbo.InvoiceRegister", "Id");
            AddPrimaryKey("dbo.InvoiceRegisterHistories", "Id");
            AddPrimaryKey("dbo.FinanceProvisioningTransactions", "Id");
            AddPrimaryKey("dbo.Exports", "Id");
            AddPrimaryKey("dbo.ClaimRegisterHistories", "Id");
            AddPrimaryKey("dbo.RiDataWarehouse", "Id");
            AddPrimaryKey("dbo.ClaimRegister", "Id");
            AddPrimaryKey("dbo.StatusHistories", "Id");
            AddPrimaryKey("dbo.RawFiles", "Id");
            AddPrimaryKey("dbo.ClaimData", "Id");
            CreateIndex("dbo.SoaDataBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.SoaDataFiles", "RawFileId");
            CreateIndex("dbo.SanctionIdentities", "SanctionId");
            CreateIndex("dbo.SanctionNames", "SanctionId");
            CreateIndex("dbo.SanctionFormatNames", "SanctionNameId");
            CreateIndex("dbo.SanctionFormatNames", "SanctionId");
            CreateIndex("dbo.SanctionCountries", "SanctionId");
            CreateIndex("dbo.SanctionComments", "SanctionId");
            CreateIndex("dbo.SanctionBirthDates", "SanctionId");
            CreateIndex("dbo.SanctionAddresses", "SanctionId");
            CreateIndex("dbo.RiDataBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.RiDataFiles", "RawFileId");
            CreateIndex("dbo.RetroRegisterFiles", "RetroRegisterId");
            CreateIndex("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.PerLifeClaimData", "ClaimRegisterHistoryId");
            CreateIndex("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId");
            CreateIndex("dbo.RiDataWarehouseHistories", "RiDataWarehouseId");
            CreateIndex("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId");
            CreateIndex("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId");
            CreateIndex("dbo.Mfrs17CellMappings", "Mfrs17TreatyCode");
            CreateIndex("dbo.InvoiceRegisterValuations", "InvoiceRegisterId");
            CreateIndex("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.FinanceProvisioningTransactions", "ClaimRegisterId");
            CreateIndex("dbo.Remarks", "StatusHistoryId");
            CreateIndex("dbo.DirectRetroStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId");
            CreateIndex("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId");
            CreateIndex("dbo.ClaimRegisterHistories", "RiDataWarehouseId");
            CreateIndex("dbo.ClaimRegisterHistories", "ClaimDataId");
            CreateIndex("dbo.ClaimRegisterHistories", "ClaimRegisterId");
            CreateIndex("dbo.ReferralRiDataFiles", "RawFileId");
            CreateIndex("dbo.ReferralClaims", "RiDataWarehouseId");
            CreateIndex("dbo.ReferralClaims", "ClaimRegisterId");
            CreateIndex("dbo.ClaimRegister", "OriginalClaimRegisterId");
            CreateIndex("dbo.ClaimRegister", "RiDataWarehouseId");
            CreateIndex("dbo.ClaimRegister", "ClaimDataId");
            CreateIndex("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId");
            CreateIndex("dbo.ClaimDataFiles", "RawFileId");
            AddForeignKey("dbo.SanctionFormatNames", "SanctionNameId", "dbo.SanctionNames", "Id", cascadeDelete: true);
            AddForeignKey("dbo.SanctionAddresses", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionIdentities", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionNames", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionFormatNames", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionCountries", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionComments", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.SanctionBirthDates", "SanctionId", "dbo.Sanctions", "Id");
            AddForeignKey("dbo.RetroRegisterFiles", "RetroRegisterId", "dbo.RetroRegister", "Id");
            AddForeignKey("dbo.PerLifeAggregationDetailData", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories", "Id");
            AddForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "RiDataWarehouseHistoryId", "dbo.RiDataWarehouseHistories", "Id");
            AddForeignKey("dbo.Mfrs17ReportingDetailRiDatas", "Mfrs17ReportingDetailId", "dbo.Mfrs17ReportingDetails", "Id");
            AddForeignKey("dbo.InvoiceRegisterValuations", "InvoiceRegisterId", "dbo.InvoiceRegister", "Id");
            AddForeignKey("dbo.PerLifeClaimData", "ClaimRegisterHistoryId", "dbo.ClaimRegisterHistories", "Id");
            AddForeignKey("dbo.RiDataWarehouseHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.ClaimRegister", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.ReferralClaims", "RiDataWarehouseId", "dbo.RiDataWarehouse", "Id");
            AddForeignKey("dbo.FinanceProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.DirectRetroProvisioningTransactions", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "OriginalClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ReferralClaims", "ClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.ClaimRegister", "OriginalClaimRegisterId", "dbo.ClaimRegister", "Id");
            AddForeignKey("dbo.SoaDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.RiDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.RetroRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.InvoiceRegisterBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.Remarks", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.DirectRetroStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.ClaimDataBatchStatusFiles", "StatusHistoryId", "dbo.StatusHistories", "Id");
            AddForeignKey("dbo.SoaDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.RiDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.ReferralRiDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.ClaimDataFiles", "RawFileId", "dbo.RawFiles", "Id");
            AddForeignKey("dbo.ClaimRegisterHistories", "ClaimDataId", "dbo.ClaimData", "Id");
            AddForeignKey("dbo.ClaimRegister", "ClaimDataId", "dbo.ClaimData", "Id");
        }
    }
}
