@using Shared.Forms.Helpers
@model WebApp.Models.TreatyPricingQuotationWorkflowViewModel

<div class="form-row" id="app">
    <div class="form-group col-md 12">
        <div class="form-horizontal">
            <span class="font-weight-bold">@Html.Label("Person In-Charge", htmlAttributes: new { @class = "col-form-label" })</span>
            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1">
                    @Html.LabelForRequired(model => model.PersonInChargeId, htmlAttributes: new { @class = "col-form-label" })
                    @*@Html.DropDownListFor(model => model.PersonInChargeId, (List<SelectListItem>)ViewBag.PersonInChargePPT, htmlAttributes: new { @class = "form-control selectpicker" })*@
                    <select id="PersonInChargeId" name="PersonInChargeId" class="form-control selectpicker"></select>
                    @Html.ValidationMessageFor(model => model.PersonInChargeId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mid-line-2">
                    @Html.LabelFor(model => model.PersonInChargeTechReviewerId, htmlAttributes: new { @class = "col-form-label" })
                    @*@Html.DropDownListFor(model => model.PersonInChargeTechReviewerId, (List<SelectListItem>)ViewBag.PersonInChargePPT, htmlAttributes: new { @class = "form-control selectpicker" })*@
                    <select id="PersonInChargeTechReviewerId" name="PersonInChargeTechReviewerId" class="form-control selectpicker"></select>
                    @Html.ValidationMessageFor(model => model.PersonInChargeTechReviewerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1">
                    @Html.LabelFor(model => model.PersonInChargePeerReviewerId, htmlAttributes: new { @class = "col-form-label" })
                    @*@Html.DropDownListFor(model => model.PersonInChargePeerReviewerId, (List<SelectListItem>)ViewBag.PersonInChargePPT, htmlAttributes: new { @class = "form-control selectpicker" })*@
                    <select id="PersonInChargePeerReviewerId" name="PersonInChargePeerReviewerId" class="form-control selectpicker"></select>
                    @Html.ValidationMessageFor(model => model.PersonInChargePeerReviewerId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mid-line-2">
                    @Html.LabelFor(model => model.PersonInChargePricingAuthorityReviewerId, htmlAttributes: new { @class = "col-form-label" })
                    @*@Html.DropDownListFor(model => model.PersonInChargePricingAuthorityReviewerId, (List<SelectListItem>)ViewBag.PersonInChargePPT, htmlAttributes: new { @class = "form-control selectpicker" })*@
                    <select id="PersonInChargePricingAuthorityReviewerId" name="PersonInChargePricingAuthorityReviewerId" class="form-control selectpicker"></select>
                    @Html.ValidationMessageFor(model => model.PersonInChargePricingAuthorityReviewerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row mt-4">
                <div class="form-group col-md-12" style="padding-bottom: 0;">
                    <span class="font-weight-bold">@Html.Label("Date", htmlAttributes: new { @class = "col-form-label" })</span>
                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @Html.LabelFor(model => model.PendingOn, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.PendingOn, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.PendingOn, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 mid-line-2">
                            @Html.LabelFor(model => model.RequestDateStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-w-icon">
                                @Html.TextBoxFor(model => model.RequestDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('RequestDateStr')" } })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('RequestDateStr')" />
                            </div>
                            @Html.ValidationMessageFor(model => model.RequestDateStr, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @Html.LabelFor(model => model.TargetPricingDueDateStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-w-icon">
                                @Html.TextBoxFor(model => model.TargetPricingDueDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('TargetPricingDueDateStr')" } })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('TargetPricingDueDateStr')" />
                            </div>
                            @Html.ValidationMessageFor(model => model.TargetPricingDueDateStr, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 mid-line-2">
                            @Html.LabelFor(model => model.RevisedPricingDueDateStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-w-icon">
                                @Html.TextBoxFor(model => model.RevisedPricingDueDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('RevisedPricingDueDateStr')" } })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('RevisedPricingDueDateStr')" />
                            </div>
                            @Html.ValidationMessageFor(model => model.RevisedPricingDueDateStr, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @Html.LabelFor(model => model.PricingCompletedDateStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-w-icon">
                                @Html.TextBoxFor(model => model.PricingCompletedDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('PricingCompletedDateStr')" } })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('PricingCompletedDateStr')" />
                            </div>
                            @Html.ValidationMessageFor(model => model.PricingCompletedDateStr, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-row mt-4">
                <div class="form-group col-md-12" style="padding-bottom: 0;">
                    <span class="font-weight-bold">@Html.Label("Overall Metrics", htmlAttributes: new { @class = "col-form-label" })</span>
                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @Html.LabelFor(model => model.ProfitMarginStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">%</div>
                                </div>
                                @Html.EditorFor(model => model.ProfitMarginStr, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ProfitMarginStr, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 mid-line-2">
                            @Html.LabelFor(model => model.ExpenseMarginStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">%</div>
                                </div>
                                @Html.EditorFor(model => model.ExpenseMarginStr, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ExpenseMarginStr, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @Html.LabelFor(model => model.FirstYearPremiumStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">MYR</div>
                                </div>
                                @Html.EditorFor(model => model.FirstYearPremiumStr, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.FirstYearPremiumStr, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 mid-line-2">
                            @Html.LabelFor(model => model.PVProfitStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">MYR</div>
                                </div>
                                @Html.EditorFor(model => model.PVProfitStr, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PVProfitStr, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @Html.LabelFor(model => model.ROEStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">%</div>
                                </div>
                                @Html.EditorFor(model => model.ROEStr, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ROEStr, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-row mt-4">
                <div class="form-group col-md-12" style="padding-bottom: 0;">
                    <span class="font-weight-bold">@Html.Label("Folder Location", htmlAttributes: new { @class = "col-form-label" })</span>
                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @*@Html.LabelFor(model => model.FileLocationPricingMemo, htmlAttributes: new { @class = "col-form-label" })*@
                            @Html.EditorFor(model => model.FileLocationPricingMemo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            @Html.ValidationMessageFor(model => model.FileLocationPricingMemo, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group col-md-6 mid-line-2">
                            @Html.LabelFor(model => model.FileLocationNBChecklist, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.FileLocationNBChecklist, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            @Html.ValidationMessageFor(model => model.FileLocationNBChecklist, "", new { @class = "text-danger" })
                        </div>*@
                    </div>

                    @*<div class="form-row">
                        <div class="form-group col-md-6 mid-line-1">
                            @Html.LabelFor(model => model.FileLocationTechnicalChecklist, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.FileLocationTechnicalChecklist, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type Here" } })
                            @Html.ValidationMessageFor(model => model.FileLocationTechnicalChecklist, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                </div>
            </div>

            <ul class="nav nav-tabs">
                <li class="nav-item"><a data-toggle="tab" href="#pricingStatusHistory" class="active underline-tab">Status History</a></li>
                <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#pricingRemarks">Remarks</a></li>
            </ul>

            <div class="tab-content underline-tab-content">
                <div class="tab-pane fade show active" id="pricingStatusHistory" role="tabpanel" aria-labelledby="pricingStatusHistory-tab">
                    @Html.Partial("_StatusHistory", new ViewDataDictionary { { "loadModal", false }, { "showRemark", true }, { "showDocuments", true }, { "showVersion", true }, { "showStatusSelect", true }, { "showRecipient", true }, { "statusHeaderName", "Pricing Status" }, { "listName", "PricingStatusHistories" }, { "param", "TreatyPricingQuotationWorkflowPricing" } })
                </div>

                <div class="tab-pane fade" id="pricingRemarks" role="tabpanel" aria-labelledby="pricingRemarks-tab">
                    @Html.Partial("_Remark", new ViewDataDictionary { { "showDocuments", true }, { "showStatus", false }, { "showVersion", true }, { "showSubject", true }, { "loadModal", false }, { "param", "TreatyPricingQuotationWorkflowPricing" }, { "listName", "PricingRemarks" }, { "dropdownVersions", ViewBag.DropDownVersions } })
                </div>
            </div>
        </div>
    </div>
</div>