@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.DirectRetroViewModel>

@{
    ViewBag.Title = "Direct Retro";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-8 text-right  btn-row-inline">
                <a href="@Url.Action("Create")" class="btn btn-add">
                    ADD DIRECT RETRO
                </a>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCedantId;
                                @Shared.Html.Sorter(ViewBag, "Ceding Company", "CedantId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortTreatyCodeId;
                                @Shared.Html.Sorter(ViewBag, "Treaty Code", "TreatyCodeId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortSoaQuarter;
                                @Shared.Html.Sorter(ViewBag, "SOA Quarter", "SoaQuarter", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            SOA Data Batch ID
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortIsProfitCommission;
                                @Shared.Html.Sorter(ViewBag, "Profit Commission", "IsProfitCommission", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDaaStatus;
                                @Shared.Html.Sorter(ViewBag, "DA&A Status", "DaaStatus", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRetroStatus;
                                @Shared.Html.Sorter(ViewBag, "Retro Status", "RetroStatus", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>

                    <tr>
                        @using (Html.BeginForm("Index", "DirectRetro", FormMethod.Get))
                        {
                            string sortOrder = ViewBag.SortOrder;

                            @Html.Hidden("SortOrder", sortOrder)
                            <th>
                                @Html.DropDownList("CedantId", (List<SelectListItem>)ViewBag.DropDownCedants, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body", @onchange = "refreshTreatyCode(this.value)" })
                            </th>
                            <th>
                                @Html.DropDownList("TreatyCodeId", (List<SelectListItem>)ViewBag.DropDownEmpty, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("SoaQuarter", null, new { @class = "form-control", @onchange = "validateQuarter(this.value)", placeholder = "YYYY MM", autocomplete = "off" })
                            </th>
                            <th>

                            </th>
                            <th>
                                @Html.DropDownList("IsProfitCommission", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("DaaStatus", (List<SelectListItem>)ViewBag.DropDownDaaStatuses, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("RetroStatus", (List<SelectListItem>)ViewBag.DropDownRetroStatuses, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>

                @if (Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cedant.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TreatyCode.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SoaQuarter)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SoaDataBatch.Id)
                            </td>
                            <td>
                                @if (item.SoaDataBatch.IsProfitCommissionData)
                                {
                                    @Html.Raw("Yes")
                                }
                                else
                                {
                                    @Html.Raw("No")
                                }
                            </td>
                            <td class="va-middle">
                                <span class="@BusinessObject.SoaDatas.SoaDataBatchBo.GetStatusClass(item.SoaDataBatch.Status)">
                                    @BusinessObject.SoaDatas.SoaDataBatchBo.GetStatusName(item.SoaDataBatch.Status)
                                </span>
                            </td>
                            <td class="va-middle">
                                <span class="@BusinessObject.DirectRetroBo.GetRetroStatusClass(item.RetroStatus)">
                                    @BusinessObject.DirectRetroBo.GetRetroStatusName(item.RetroStatus)
                                </span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fas fa-ellipsis-v dropbtn" />
                                    </button>
                                    <div class="dropdown-menu">
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="no-data">No available data found.</td>
                    </tr>
                }

            </table>
        </div>

        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
                    {
                        CedantId = routeValue["CedantId"],
                        TreatyCodeId = routeValue["TreatyCodeId"],
                        SoaQuarter = routeValue["SoaQuarter"],
                        IsProfitCommission = routeValue["IsProfitCommission"],
                        DaaStatus = routeValue["DaaStatus"],
                        RetroStatus = routeValue["RetroStatus"],
                        SortOrder = ViewBag.SortOrder,
                        Page,
                    }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/date-quarter.js")

    <script>
        var GetTreatyCodeByCedantUrl = '@Url.Action("Index", "TreatyCode")';
        var SelectedCedantId = !'@ViewBag.routeValue["CedantId"]' ? '0' : '@ViewBag.routeValue["CedantId"]';
        var SelectedTreatyCodeId = '@ViewBag.routeValue["TreatyCodeId"]';
        var QuarterFormat = '@BusinessObject.Mfrs17ReportingBo.DateQuarterFormatJs';

        $(document).ready(function () {
            $('#SoaQuarter').datepicker({
                format: QuarterFormat,
                minViewMode: 1,
                autoclose: true,
                language: "qtrs",
                forceParse: false
            }).on('show', function (e) {
                var datepickerDropDown = $('.datepicker');
                datepickerDropDown.addClass('quarterpicker');
            });

            refreshTreatyCode(SelectedCedantId);
        });

        function validateQuarter(qtr) {
            if (qtr == null || qtr == "")
                return;
            if (!/[0-9]{4} Q{1}([1-4]){1}/.test(qtr)) {
                $("#SoaQuarter").val(null);
                alert("SOA Quarter format is incorrect");
            }
        }

        function refreshTreatyCode(selectedCedantId) {
            $.ajax({
                url: GetTreatyCodeByCedantUrl,
                type: "POST",
                data: {
                    CedantId: selectedCedantId,
                    indexItem: true,
                },
                cache: false,
                async: false,
                success: function (data) {
                    var TreatyCodes = data.TreatyCodes;
                    refreshDropDownItems('TreatyCodeId', TreatyCodes, SelectedTreatyCodeId, 'Code', 'Name');
                }
            });
        }
    </script>
}