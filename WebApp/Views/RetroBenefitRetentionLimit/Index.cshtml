@using PagedList.Mvc

@model WebApp.Models.RetroBenefitRetentionLimitViewModel

@{
    ViewBag.Title = "Retenton Limit by Retro Benefit";

    var activeTab = ViewBag.ActiveTab;

    PagedList.IPagedList<WebApp.Models.RetroBenefitRetentionLimitViewModel> IndividualList = ViewBag.IndividualList as PagedList.IPagedList<WebApp.Models.RetroBenefitRetentionLimitViewModel>;
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;

    PagedList.IPagedList<WebApp.Models.RetroBenefitRetentionLimitViewModel> GroupList = ViewBag.GroupList as PagedList.IPagedList<WebApp.Models.RetroBenefitRetentionLimitViewModel>;
    var groupRouteValue = (RouteValueDictionary)ViewBag.GroupRouteValue;
}

<style type="text/css">
    .bootstrap-select .dropdown-menu .show {
        width: 400px !important;
        min-width: 400px !important;
    }
</style>

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
        </div>
    </div>
    <div class="card-body card-listing">
        <ul class="nav nav-tabs">
            <li class="nav-item"><a href="@Url.Action("Index", "RetroBenefitRetentionLimit")" class="@(activeTab == null || activeTab == 1 ? "active" : "") underline-tab">Individual</a></li>
            <li class="nav-item"><a class="@(activeTab == 2 ? "active" : "") underline-tab" href="@Url.Action("Group", "RetroBenefitRetentionLimit")">Group</a></li>
        </ul>

        <div class="tab-content underline-tab-content">
            <div class="tab-pane fade @(activeTab == null || activeTab == 1 ? "show active" : "")" id="individualTab" role="tabpanel" aria-labelledby="individualTab-tab">
                <div class="form-row mb-4">
                    <div class="form-group col-md-12 text-right btn-row-inline">
                        <div class="btn-group">
                            <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                DOWNLOAD AS
                            </button>
                            <div class="dropdown-menu">
                                @Html.ActionLink("All", "DownloadIndividual", new { type = 1 }, new { @class = "dropdown-item" })
                                @Html.ActionLink("Filtered", "DownloadIndividual", new
                                {
                                    type = 2,
                                    IndRetroBenefitCodeId = routeValue["IndRetroBenefitCodeId"],
                                    IndDescription = routeValue["IndDescription"],
                                    IndEffectiveStartDate = routeValue["IndEffectiveStartDate"],
                                    IndEffectiveEndDate = routeValue["IndEffectiveEndDate"],
                                    IndMinRetentionLimit = routeValue["IndMinRetentionLimit"],
                                    IndReinsEffStartDate = routeValue["IndReinsEffStartDate"],
                                    IndReinsEffEndDate = routeValue["IndReinsEffEndDate"],
                                    IndMinIssueAge = routeValue["IndMinIssueAge"],
                                    IndMaxIssueAge = routeValue["IndMaxIssueAge"],
                                    IndMortalityLimitFrom = routeValue["IndMortalityLimitFrom"],
                                    IndMortalityLimitTo = routeValue["IndMortalityLimitTo"],
                                    IndMlreRetentionAmount = routeValue["IndMlreRetentionAmount"],
                                    IndMinReinsAmount = routeValue["IndMinReinsAmount"],
                                }, new { @class = "dropdown-item" })
                            </div>
                        </div>
                        <a href="@Url.Action("Create", new { Type = BusinessObject.Retrocession.RetroBenefitRetentionLimitBo.TypeIndividual})" class="btn btn-add">ADD NEW</a>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndRetroBenefitCodeId;
                                        @Shared.Html.Sorter(ViewBag, "Retro Benefit Code", "IndRetroBenefitCodeId", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-35">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndDescription;
                                        @Shared.Html.Sorter(ViewBag, "Description", "IndDescription", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndEffectiveStartDate;
                                        @Shared.Html.Sorter(ViewBag, "Effective Start Date", "IndEffectiveStartDate", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndEffectiveEndDate;
                                        @Shared.Html.Sorter(ViewBag, "Effective End Date", "IndEffectiveEndDate", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndMinRetentionLimit;
                                        @Shared.Html.Sorter(ViewBag, "Minimum Retention Limit", "IndMinRetentionLimit", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndReinsEffStartDate;
                                        @Shared.Html.Sorter(ViewBag, "Reinsurance Effectve Start Date", "IndReinsEffStartDate", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndReinsEffEndDate;
                                        @Shared.Html.Sorter(ViewBag, "Reinsurance Effective End Date", "IndReinsEffEndDate", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndMinIssueAge;
                                        @Shared.Html.Sorter(ViewBag, "Min Issue Age", "IndMinIssueAge", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndMaxIssueAge;
                                        @Shared.Html.Sorter(ViewBag, "Max Issue Age", "IndMaxIssueAge", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndMortalityLimitFrom;
                                        @Shared.Html.Sorter(ViewBag, "Mortality Limit (STD %)", "IndMortalityLimitFrom", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndMortalityLimitTo;
                                        @Shared.Html.Sorter(ViewBag, "Mortality Limit (TM %)", "IndMortalityLimitTo", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndMlreRetentionAmount;
                                        @Shared.Html.Sorter(ViewBag, "MLRe Retention (MYR)", "IndMlreRetentionAmount", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortIndMinReinsAmount;
                                        @Shared.Html.Sorter(ViewBag, "Minimum Reinsurance Amount (MYR)", "IndMinReinsAmount", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="text-center w-5">
                                    Action
                                </th>
                            </tr>
                            <tr>
                                @using (Html.BeginForm("Index", "RetroBenefitRetentionLimit", FormMethod.Get, new { id = "IndividualTabForm" }))
                                {
                                    @Html.Hidden("SortOrder", (string)ViewBag.SortOrder)

                                    <th>
                                        @Html.DropDownList("IndRetroBenefitCodeId", (List<SelectListItem>)ViewBag.DropDownRetroBenefitCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndDescription", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndEffectiveStartDate", null, new { id = "IndEffectiveStartDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('IndEffectiveStartDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("IndEffectiveEndDate", null, new { id = "IndEffectiveEndDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('IndEffectiveEndDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("IndMinRetentionLimit", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndReinsEffStartDate", null, new { id = "IndReinsEffStartDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('IndReinsEffStartDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("IndReinsEffEndDate", null, new { id = "IndReinsEffEndDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('IndReinsEffEndDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("IndMinIssueAge", null, new { @class = "form-control", placeholder = "Type here", Type = "number", min = "0" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndMaxIssueAge", null, new { @class = "form-control", placeholder = "Type here", Type = "number", min = "0" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndMortalityLimitFrom", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndMortalityLimitTo", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndMlreRetentionAmount", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("IndMinReinsAmount", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th class="text-center align-middle">
                                        <div class="btn-row-action">
                                            <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                                <span class="fas fa-backspace" />
                                            </a>
                                            <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                        </div>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @if (IndividualList.Count > 0)
                            {
                                foreach (var item in IndividualList)
                                {
                                    <tr>
                                        <td>@item.RetroBenefitCode.ToString()</td>
                                        <td>
                                            @item.Description
                                        </td>
                                        <td>
                                            @if (item.EffectiveStartDate.HasValue)
                                            {
                                                @item.EffectiveStartDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @if (item.EffectiveEndDate.HasValue)
                                            {
                                                @item.EffectiveEndDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MinRetentionLimit)
                                        </td>
                                        <td>
                                            @if (item.ReinsEffStartDate.HasValue)
                                            {
                                                @item.ReinsEffStartDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @if (item.ReinsEffEndDate.HasValue)
                                            {
                                                @item.ReinsEffEndDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @item.MinIssueAge
                                        </td>
                                        <td>
                                            @item.MaxIssueAge
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MortalityLimitFrom)
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MortalityLimitTo)
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MlreRetentionAmount)
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MinReinsAmount)
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="fas fa-ellipsis-v dropbtn" />
                                                </button>
                                                <div class="dropdown-menu">
                                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="14" class="no-data">No available data found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="pagination-footer">
                    <div class="row">
                        <div class="col-md-4">
                            @{
                                ViewBag.CurrentPageNumber = IndividualList.PageNumber;
                                ViewBag.CurrentPageItems = IndividualList.Count;
                                ViewBag.PageSize = IndividualList.PageSize;
                                ViewBag.Total = ViewBag.IndividualTotal;
                            }
                            @Html.Partial("_PageInfo")
                        </div>
                        <div class="col-md-8">
                            @Html.PagedListPager(IndividualList, Page => Url.Action("Index", new
                            {
                                SortOrder = ViewBag.SortOrder,
                                IndRetroBenefitCodeId = routeValue["IndRetroBenefitCodeId"],
                                IndDescription = routeValue["IndDescription"],
                                IndEffectiveStartDate = routeValue["IndEffectiveStartDate"],
                                IndEffectiveEndDate = routeValue["IndEffectiveEndDate"],
                                IndMinRetentionLimit = routeValue["IndMinRetentionLimit"],
                                IndReinsEffStartDate = routeValue["IndReinsEffStartDate"],
                                IndReinsEffEndDate = routeValue["IndReinsEffEndDate"],
                                IndMinIssueAge = routeValue["IndMinIssueAge"],
                                IndMaxIssueAge = routeValue["IndMaxIssueAge"],
                                IndMortalityLimitFrom = routeValue["IndMortalityLimitFrom"],
                                IndMortalityLimitTo = routeValue["IndMortalityLimitTo"],
                                IndMlreRetentionAmount = routeValue["IndMlreRetentionAmount"],
                                IndMinReinsAmount = routeValue["IndMinReinsAmount"],
                                Page = Page,
                            }), Shared.Html.GetPagedListRenderOptions())
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-pane fade @(activeTab == 2 ? "show active" : "")" id="groupTab" role="tabpanel" aria-labelledby="groupTab-tab">
                <div class="form-row mb-4">
                    <div class="form-group col-md-12 text-right btn-row-inline">
                        <div class="btn-group">
                            <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                DOWNLOAD AS
                            </button>
                            <div class="dropdown-menu">
                                @Html.ActionLink("All", "DownloadGroup", new { type = 1 }, new { @class = "dropdown-item" })
                                @Html.ActionLink("Filtered", "DownloadGroup", new
                                {
                                    type = 2,
                                    GrpRetroBenefitCodeId = routeValue["GrpRetroBenefitCodeId"],
                                    GrpDescription = routeValue["GrpDescription"],
                                    GrpEffectiveStartDate = routeValue["GrpEffectiveStartDate"],
                                    GrpEffectiveEndDate = routeValue["GrpEffectiveEndDate"],
                                    GrpMinRetentionLimit = routeValue["GrpMinRetentionLimit"],
                                    GrpReinsEffStartDate = routeValue["GrpReinsEffStartDate"],
                                    GrpReinsEffEndDate = routeValue["GrpReinsEffEndDate"],
                                    GrpMinIssueAge = routeValue["GrpMinIssueAge"],
                                    GrpMaxIssueAge = routeValue["GrpMaxIssueAge"],
                                    GrpMortalityLimitFrom = routeValue["GrpMortalityLimitFrom"],
                                    GrpMortalityLimitTo = routeValue["GrpMortalityLimitTo"],
                                    GrpMlreRetentionAmount = routeValue["GrpMlreRetentionAmount"],
                                    GrpMinReinsAmount = routeValue["GrpMinReinsAmount"],
                                }, new { @class = "dropdown-item" })
                            </div>
                        </div>
                        <a href="@Url.Action("Create", new { Type = BusinessObject.Retrocession.RetroBenefitRetentionLimitBo.TypeGroup})" class="btn btn-add">ADD NEW</a>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpRetroBenefitCodeId;
                                        @Shared.Html.Sorter(ViewBag, "Retro Benefit Code", "GrpRetroBenefitCodeId", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-35">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpDescription;
                                        @Shared.Html.Sorter(ViewBag, "Description", "GrpDescription", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpEffectiveStartDate;
                                        @Shared.Html.Sorter(ViewBag, "Effective Start Date", "GrpEffectiveStartDate", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpEffectiveEndDate;
                                        @Shared.Html.Sorter(ViewBag, "Effective End Date", "GrpEffectiveEndDate", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpMinRetentionLimit;
                                        @Shared.Html.Sorter(ViewBag, "Minimum Retention Limit", "GrpMinRetentionLimit", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpReinsEffStartDate;
                                        @Shared.Html.Sorter(ViewBag, "Reinsurance Effectve Start Date", "GrpReinsEffStartDate", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpReinsEffEndDate;
                                        @Shared.Html.Sorter(ViewBag, "Reinsurance Effective End Date", "GrpReinsEffEndDate", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpMinIssueAge;
                                        @Shared.Html.Sorter(ViewBag, "Min Issue Age", "GrpMinIssueAge", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpMaxIssueAge;
                                        @Shared.Html.Sorter(ViewBag, "Max Issue Age", "GrpMaxIssueAge", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpMortalityLimitFrom;
                                        @Shared.Html.Sorter(ViewBag, "Mortality Limit (STD %)", "GrpMortalityLimitFrom", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpMortalityLimitTo;
                                        @Shared.Html.Sorter(ViewBag, "Mortality Limit (TM %)", "GrpMortalityLimitTo", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpMlreRetentionAmount;
                                        @Shared.Html.Sorter(ViewBag, "MLRe Retention (MYR)", "GrpMlreRetentionAmount", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="w-15">
                                    @{
                                        groupRouteValue["SortOrder"] = ViewBag.SortGrpMinReinsAmount;
                                        @Shared.Html.Sorter(ViewBag, "Minimum Reinsurance Amount (MYR)", "GrpMinReinsAmount", @Url.Action("Index", groupRouteValue))
                                    }
                                </th>
                                <th class="text-center w-5">
                                    Action
                                </th>
                            </tr>
                            <tr>
                                @using (Html.BeginForm("Group", "RetroBenefitRetentionLimit", FormMethod.Get, new { id = "GroupTabForm" }))
                                {
                                    @Html.Hidden("SortOrder", (string)ViewBag.SortOrder)

                                    <th>
                                        @Html.DropDownList("GrpRetroBenefitCodeId", (List<SelectListItem>)ViewBag.DropDownRetroBenefitCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpDescription", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpEffectiveStartDate", null, new { id = "GrpEffectiveStartDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('GrpEffectiveStartDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpEffectiveEndDate", null, new { id = "GrpEffectiveEndDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('GrpEffectiveEndDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpMinRetentionLimit", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpReinsEffStartDate", null, new { id = "GrpReinsEffStartDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('GrpReinsEffStartDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpReinsEffEndDate", null, new { id = "GrpReinsEffEndDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('GrpReinsEffEndDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpMinIssueAge", null, new { @class = "form-control", placeholder = "Type here", Type = "number", min = "0" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpMaxIssueAge", null, new { @class = "form-control", placeholder = "Type here", Type = "number", min = "0" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpMortalityLimitFrom", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpMortalityLimitTo", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpMlreRetentionAmount", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GrpMinReinsAmount", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th class="text-center align-middle">
                                        <div class="btn-row-action">
                                            <a href="@Url.Action("Group")" class="btn btn-circle" title="Clear">
                                                <span class="fas fa-backspace" />
                                            </a>
                                            <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                        </div>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @if (GroupList.Count > 0)
                            {
                                foreach (var item in GroupList)
                                {
                                    <tr>
                                        <td>@item.RetroBenefitCode.ToString()</td>
                                        <td>
                                            @item.Description
                                        </td>
                                        <td>
                                            @if (item.EffectiveStartDate.HasValue)
                                            {
                                                @item.EffectiveStartDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @if (item.EffectiveEndDate.HasValue)
                                            {
                                                @item.EffectiveEndDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MinRetentionLimit)
                                        </td>
                                        <td>
                                            @if (item.ReinsEffStartDate.HasValue)
                                            {
                                                @item.ReinsEffStartDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @if (item.ReinsEffEndDate.HasValue)
                                            {
                                                @item.ReinsEffEndDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @item.MinIssueAge
                                        </td>
                                        <td>
                                            @item.MaxIssueAge
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MortalityLimitFrom)
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MortalityLimitTo)
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MlreRetentionAmount)
                                        </td>
                                        <td>
                                            @Shared.Util.DoubleToString(item.MinReinsAmount)
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="fas fa-ellipsis-v dropbtn" />
                                                </button>
                                                <div class="dropdown-menu">
                                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="14" class="no-data">No available data found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="pagination-footer">
                    <div class="row">
                        <div class="col-md-4">
                            @{
                                ViewBag.CurrentPageNumber = GroupList.PageNumber;
                                ViewBag.CurrentPageItems = GroupList.Count;
                                ViewBag.PageSize = GroupList.PageSize;
                                ViewBag.Total = ViewBag.GroupTotal;
                            }
                            @Html.Partial("_PageInfo")
                        </div>
                        <div class="col-md-8">
                            @Html.PagedListPager(GroupList, Page => Url.Action("Group", new
                             {
                                 SortOrder = ViewBag.SortOrder,
                                 GrpRetroBenefitCodeId = routeValue["GrpRetroBenefitCodeId"],
                                 GrpDescription = routeValue["GrpDescription"],
                                 GrpEffectiveStartDate = routeValue["GrpEffectiveStartDate"],
                                 GrpEffectiveEndDate = routeValue["GrpEffectiveEndDate"],
                                 GrpMinRetentionLimit = routeValue["GrpMinRetentionLimit"],
                                 GrpReinsEffStartDate = routeValue["GrpReinsEffStartDate"],
                                 GrpReinsEffEndDate = routeValue["GrpReinsEffEndDate"],
                                 GrpMinIssueAge = routeValue["GrpMinIssueAge"],
                                 GrpMaxIssueAge = routeValue["GrpMaxIssueAge"],
                                 GrpMortalityLimitFrom = routeValue["GrpMortalityLimitFrom"],
                                 GrpMortalityLimitTo = routeValue["GrpMortalityLimitTo"],
                                 GrpMlreRetentionAmount = routeValue["GrpMlreRetentionAmount"],
                                 GrpMinReinsAmount = routeValue["GrpMinReinsAmount"],
                                 Page = Page,
                             }), Shared.Html.GetPagedListRenderOptions())
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {
            //Individual
            $('#IndEffectiveStartDate, #IndEffectiveEndDate, #IndReinsEffStartDate, #IndReinsEffEndDate').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });

            //Group
            $('#GrpEffectiveStartDate, #GrpEffectiveEndDate, #GrpReinsEffStartDate, #GrpReinsEffEndDate').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }
    </script>
}