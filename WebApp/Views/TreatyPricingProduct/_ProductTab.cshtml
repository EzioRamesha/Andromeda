@model WebApp.Models.TreatyPricingProductViewModel
@using Shared.Forms.Helpers

<div class="form-row">
    <div class="form-group col-md-6 mid-line-1">
        @Html.LabelForRequired(model => model.ProductTypePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
        @Html.DropDownListFor(model => model.ProductTypePickListDetailId, (List<SelectListItem>)ViewBag.DropDownProductTypes, htmlAttributes: new { @class = "form-control selectpicker" })
        @Html.ValidationMessageFor(model => model.ProductTypePickListDetailId, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-6 mid-line-2">
        @Html.LabelForRequired(model => model.TargetSegment, htmlAttributes: new { @class = "col-form-label" })
        @Html.EditorFor(model => model.TargetSegment, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
        @Html.ValidationMessageFor(model => model.TargetSegment, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="form-group col-md-6 mid-line-1">
        @Html.LabelForRequired(model => model.DistributionChannel, htmlAttributes: new { @class = "col-form-label" })
        @Html.EditorFor(model => model.DistributionChannel, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
        @Html.ValidationMessageFor(model => model.DistributionChannel, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-6 mid-line-2">
        @Html.LabelForRequired(model => model.CessionType, htmlAttributes: new { @class = "col-form-label" })
        @Html.EditorFor(model => model.CessionType, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
        @Html.ValidationMessageFor(model => model.CessionType, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="form-group col-md-6 mid-line-1">
        @Html.LabelForRequired(model => model.BusinessOriginPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
        @Html.DropDownListFor(model => model.BusinessOriginPickListDetailId, (List<SelectListItem>)ViewBag.DropDownBusinessOrigins, htmlAttributes: new { @class = "form-control selectpicker" })
        @Html.ValidationMessageFor(model => model.BusinessOriginPickListDetailId, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-6 mid-line-2">
        @Html.LabelForRequired(model => model.BusinessTypePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
        @Html.DropDownListFor(model => model.BusinessTypePickListDetailId, (List<SelectListItem>)ViewBag.DropDownBusinessTypes, htmlAttributes: new { @class = "form-control selectpicker" })
        @Html.ValidationMessageFor(model => model.BusinessTypePickListDetailId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="form-group col-md-6 mid-line-1">
        @Html.LabelForRequired(model => model.ProductLine, htmlAttributes: new { @class = "col-form-label" })
        @Html.EditorFor(model => model.ProductLine, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
        @Html.ValidationMessageFor(model => model.ProductLine, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-6 mid-line-2">
        @Html.LabelForRequired(model => model.ReinsuranceArrangementPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
        @Html.DropDownListFor(model => model.ReinsuranceArrangementPickListDetailId, (List<SelectListItem>)ViewBag.DropDownRiArrangements, htmlAttributes: new { @class = "form-control selectpicker" })
        @Html.ValidationMessageFor(model => model.ReinsuranceArrangementPickListDetailId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="mt-4">
    <span class="font-weight-bold">@Html.Label("Business Volume", htmlAttributes: new { @class = "col-form-label" })</span>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.ExpectedAverageSumAssured, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.ExpectedAverageSumAssured, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            </div>
            @Html.ValidationMessageFor(model => model.ExpectedAverageSumAssured, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.ExpectedPolicyNo, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.ExpectedPolicyNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.ExpectedPolicyNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.ExpectedRiPremium, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.ExpectedRiPremium, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            </div>
            @Html.ValidationMessageFor(model => model.ExpectedRiPremium, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="mt-4">
    <span class="font-weight-bold">@Html.Label("Underwriting", htmlAttributes: new { @class = "col-form-label" })</span>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.TreatyPricingMedicalTableSelect, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.TreatyPricingMedicalTableSelect, (List<SelectListItem>)ViewBag.DropDownTreatyPricingMedicalTables, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.TreatyPricingMedicalTableSelect, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.TreatyPricingFinancialTableSelect, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.TreatyPricingFinancialTableSelect, (List<SelectListItem>)ViewBag.DropDownTreatyPricingFinancialTables, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.TreatyPricingFinancialTableSelect, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.TreatyPricingUwQuestionnaireSelect, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.TreatyPricingUwQuestionnaireSelect, (List<SelectListItem>)ViewBag.DropDownTreatyPricingUwQuestionnaires, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.TreatyPricingUwQuestionnaireSelect, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.TreatyPricingAdvantageProgramSelect, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.TreatyPricingAdvantageProgramSelect, (List<SelectListItem>)ViewBag.DropDownTreatyPricingAdvantagePrograms, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.TreatyPricingAdvantageProgramSelect, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.JuvenileLien, htmlAttributes: new { @class = "col-form-label" })
            @Html.HiddenFor(model => model.JuvenileLien)
            <div class="input-group">
                <input class="form-control" placeholder="Click to Edit" disabled />
                <div class="input-group-prepend">
                    <button type="button" class="input-group-text prevent-disable" onclick="openFieldTableModal('Juvenile Lien', 'JuvenileLien')">EDIT</button>
                </div>
            </div>
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.JumboLimit, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.JumboLimit, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.JumboLimit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.SpecialLien, htmlAttributes: new { @class = "col-form-label" })
            @Html.HiddenFor(model => model.SpecialLien)
            <div class="input-group">
                <input class="form-control" placeholder="Click to Edit" disabled />
                <div class="input-group-prepend">
                    <button type="button" class="input-group-text prevent-disable" onclick="openFieldTableModal('Special Lien', 'SpecialLien')">EDIT</button>
                </div>
            </div>
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.UnderwritingAdditionalRemark, htmlAttributes: new { @class = "col-form-label" })
            @Html.TextAreaFor(model => model.UnderwritingAdditionalRemark, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1" })
            @Html.ValidationMessageFor(model => model.UnderwritingAdditionalRemark, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="mt-4">
    <span class="font-weight-bold">@Html.Label("Miscellaneous", htmlAttributes: new { @class = "col-form-label" })</span>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.WaitingPeriod, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.WaitingPeriod, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.WaitingPeriod, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.SurvivalPeriod, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.SurvivalPeriod, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.SurvivalPeriod, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.TreatyPricingProfitCommissionSelect, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.TreatyPricingProfitCommissionSelect, (List<SelectListItem>)ViewBag.DropDownTreatyPricingProfitCommissions, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.TreatyPricingProfitCommissionSelect, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.ReinsurancePremiumPaymentPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.ReinsurancePremiumPaymentPickListDetailId, (List<SelectListItem>)ViewBag.DropDownPremiumFrequencyCodes, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.ReinsurancePremiumPaymentPickListDetailId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.UnearnedPremiumRefundPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.UnearnedPremiumRefundPickListDetailId, (List<SelectListItem>)ViewBag.DropDownUnearnedPremiumRefunds, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.UnearnedPremiumRefundPickListDetailId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.TerminationClause, htmlAttributes: new { @class = "col-form-label" })
            @Html.TextAreaFor(model => model.TerminationClause, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1" })
            @Html.ValidationMessageFor(model => model.TerminationClause, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.RecaptureClause, htmlAttributes: new { @class = "col-form-label" })
            @Html.TextAreaFor(model => model.RecaptureClause, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1" })
            @Html.ValidationMessageFor(model => model.RecaptureClause, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.TerritoryOfIssueCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.TerritoryOfIssueCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownTerritoryOfIssueCodes, htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.TerritoryOfIssueCodePickListDetailId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.QuarterlyRiskPremium, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.QuarterlyRiskPremium, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.QuarterlyRiskPremium, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="mt-4">
    <span class="font-weight-bold">@Html.Label("Group Product", htmlAttributes: new { @class = "col-form-label" })</span>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.GroupFreeCoverLimitNonCi, htmlAttributes: new { @class = "col-form-label" })
            @Html.HiddenFor(model => model.GroupFreeCoverLimitNonCi)
            <div class="input-group">
                <input class="form-control" placeholder="Click to Edit" id="GroupFreeCoverLimitNonCiInput" disabled />
                <div class="input-group-prepend">
                    <button type="button" class="input-group-text prevent-disable" onclick="openEditor('Group Free Cover Limit (Non-CI)', 'GroupFreeCoverLimitNonCi')">EDIT</button>
                </div>
            </div>
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.GroupFreeCoverLimitAgeNonCi, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.GroupFreeCoverLimitAgeNonCi, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.GroupFreeCoverLimitAgeNonCi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.GroupFreeCoverLimitCi, htmlAttributes: new { @class = "col-form-label" })
            @Html.HiddenFor(model => model.GroupFreeCoverLimitCi)
            <div class="input-group">
                <input class="form-control" placeholder="Click to Edit" id="GroupFreeCoverLimitCiInput" disabled />
                <div class="input-group-prepend">
                    <button type="button" class="input-group-text prevent-disable" onclick="openEditor('Group Free Cover Limit (CI)', 'GroupFreeCoverLimitCi')">EDIT</button>
                </div>
            </div>
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.GroupFreeCoverLimitAgeCi, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.GroupFreeCoverLimitAgeCi, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.GroupFreeCoverLimitAgeCi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.GroupProfitCommission, htmlAttributes: new { @class = "col-form-label" })
            @Html.HiddenFor(model => model.GroupProfitCommission)
            <div class="input-group">
                <input class="form-control" placeholder="Click to Edit" id="GroupProfitCommissionInput" disabled />
                <div class="input-group-prepend">
                    <button type="button" class="input-group-text prevent-disable" onclick="openEditor('Group Profit Commission', 'GroupProfitCommission')">EDIT</button>
                </div>
            </div>
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.OccupationalClassification, htmlAttributes: new { @class = "col-form-label" })
            @Html.HiddenFor(model => model.OccupationalClassification)
            <div class="input-group">
                <input class="form-control" placeholder="Click to Edit" id="OccupationalClassificationInput" disabled />
                <div class="input-group-prepend">
                    <button type="button" class="input-group-text prevent-disable" onclick="openEditor('Occupational Classification', 'OccupationalClassification')">EDIT</button>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.OccupationalClassification, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="mt-4">
    <div class="form-group mb-0 pb-0">
        <span class="font-weight-bold">@Html.LabelForRequired(model => model.IsDirectRetro, htmlAttributes: new { @class = "col-form-label" })</span>
        <div class="row m-0 p-0">
            <div class="mr-2"> <p style="color: #004BA2;">No</p> </div>
            <div class="custom-control custom-switch pl-2">
                @Html.EditorFor(model => model.IsDirectRetro, new { htmlAttributes = new Dictionary<string, object>() { { "class", "custom-control-input" }, { "onchange", "resetDirectRetro()" } } })
                <label class="custom-control-label" for="IsDirectRetro">Yes</label>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.DirectRetroProfitCommission, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.DirectRetroProfitCommission, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.DirectRetroProfitCommission, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.DirectRetroTerminationClause, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.DirectRetroTerminationClause, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.DirectRetroTerminationClause, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.DirectRetroRecaptureClause, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.DirectRetroRecaptureClause, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.DirectRetroRecaptureClause, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.DirectRetroQuarterlyRiskPremium, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.DirectRetroQuarterlyRiskPremium, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.DirectRetroQuarterlyRiskPremium, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="mt-4">
    <div class="form-group mb-0 pb-0">
        <span class="font-weight-bold">@Html.LabelForRequired(model => model.IsInwardRetro, htmlAttributes: new { @class = "col-form-label" })</span>
        <div class="row m-0 p-0">
            <div class="mr-2"> <p style="color: #004BA2;">No</p> </div>
            <div class="custom-control custom-switch pl-2">
                @Html.EditorFor(model => model.IsInwardRetro, new { htmlAttributes = new Dictionary<string, object>() { { "class", "custom-control-input" }, { "onchange", "resetInwardRetro()" } } })
                <label class="custom-control-label" for="IsInwardRetro">Yes</label>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.InwardRetroProfitCommission, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.InwardRetroProfitCommission, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.InwardRetroProfitCommission, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.InwardRetroTerminationClause, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.InwardRetroTerminationClause, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.InwardRetroTerminationClause, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.InwardRetroRecaptureClause, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.InwardRetroRecaptureClause, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.InwardRetroRecaptureClause, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.InwardRetroQuarterlyRiskPremium, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.InwardRetroQuarterlyRiskPremium, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.InwardRetroQuarterlyRiskPremium, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="mt-4">
    <div class="form-group mb-0 pb-0">
        <span class="font-weight-bold">@Html.LabelForRequired(model => model.IsRetakafulService, htmlAttributes: new { @class = "col-form-label" })</span>
        <div class="row m-0 p-0">
            <div class="mr-2"> <p style="color: #004BA2;">No</p> </div>
            <div class="custom-control custom-switch pl-2">
                @Html.EditorFor(model => model.IsRetakafulService, new { htmlAttributes = new Dictionary<string, object>() { { "class", "custom-control-input" }, { "onchange", "resetRetakafulService()" } } })
                <label class="custom-control-label" for="IsRetakafulService">Yes</label>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelForRequired(model => model.InvestmentProfitSharing, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.InvestmentProfitSharing, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.InvestmentProfitSharing, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelForRequired(model => model.RetakafulModel, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RetakafulModel, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
            @Html.ValidationMessageFor(model => model.RetakafulModel, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
