@using Shared.Forms.Helpers
@model WebApp.Models.TreatyPricingTreatyWorkflowViewModel
<div class="form-row mt-4">
    <div class="form-group col-md 12">
        <ul class="nav nav-tabs mt-4">
            <li class="nav-item"><a data-toggle="tab" href="#general" class="active underline-tab">General</a></li>
            <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#linkedObjects">Linked Objects</a></li>
            <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#statusHistory">Status History</a></li>
            <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#remarks">Remarks</a></li>

        </ul>
        <div class="tab-content underline-tab-content">
            <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelForRequired(model => model.RequestDateStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.RequestDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('RequestDateStr')" }, { @"v-model.lazy", @"TreatyWorkflow.RequestDateStr" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('RequestDateStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.RequestDateStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.TargetSentDate, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.TargetSentDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePickerTargetSentDate('TargetSentDateStr')" }, { @"v-model.lazy", @"TreatyWorkflow.TargetSentDateStr" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('TargetSentDateStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.TargetSentDateStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.DateSentToReviewer1st, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.DateSentToReviewer1stStr, new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" }, { "readonly", "true" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('DateSentToReviewer1stStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.DateSentToReviewer1stStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.DateSentToClient1st, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.DateSentToClient1stStr, new Dictionary<string, object>() { { "class", "form-control" }, { "autocomplete", "off" }, { "readonly", "true" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('DateSentToClient1stStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.DateSentToClient1stStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.LatestRevisionDate, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.LatestRevisionDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { "readonly", "true" }, { @"v-on:click", @"openDatePicker('LatestRevisionDateStr')" }, { @"v-model.lazy", @"TreatyWorkflow.LatestRevisionDateStr" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('LatestRevisionDateStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.LatestRevisionDateStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.SignedDate, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.SignedDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('SignedDateStr')" }, { @"v-model.lazy", @"TreatyWorkflow.SignedDateStr" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('SignedDateStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.SignedDateStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.ReportedDate, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.ReportedDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('ReportedDateStr')" }, { @"v-model.lazy", @"TreatyWorkflow.ReportedDateStr" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('ReportedDateStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.ReportedDateStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.PersonInChargeId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.PersonInChargeId, (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>

            <div class="tab-pane fade" id="linkedObjects" role="tabpanel" aria-labelledby="linkedObjects-tab">
                <div class="text-right mt-4">
                    <button type="button" class="btn btn-add" v-on:click="resetLinkObjectModal()" data-toggle="modal" data-target="#addLinkedObjectModal">LINK OBJECT</button>
                </div>

                <div class="form-horizontal">
                    <div class="table-responsive">
                        <table class="table table-hover my-3">
                            <thead>
                                <tr>
                                    <th class="w-10">Object</th>
                                    <th class="w-10">Object ID / Name</th>
                                    <th class="w-20">Description</th>
                                    <th class="w-10">Object Version</th>
                                    <th class="w-5 text-center">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-if="!WorkflowObjects.length">
                                    <td colspan="5" class="no-data">No available data found.</td>
                                </tr>
                                <tr v-for="(workflowObject, index) in WorkflowObjects">
                                    <td>{{ workflowObject.ObjectTypeName }}</td>
                                    <td>{{ workflowObject.ObjectCode }}</td>
                                    <td>{{ workflowObject.ObjectName }}</td>
                                    <td>{{ workflowObject.ObjectVersion }}.0</td>
                                    <td class="text-center">
                                        <a href="#" v-on:click="removeWorkflowObject(index, true)" data-toggle="" data-target="">
                                            <span class="fas fa-unlink" />
                                        </a>
                                        <a v-bind:href="editObjectLink(index)">
                                            <span class="fas fa-pencil-alt" />
                                        </a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                @Html.Partial("_TreatyPricingWorkflowObject", new ViewDataDictionary { { "save", true } })
            </div>

            <div class="tab-pane fade" id="statusHistory" role="tabpanel" aria-labelledby="statusHistory-tab">
                @Html.Partial("_StatusHistory", new ViewDataDictionary { { "showRemark", true }, { "showDocuments", true }, { "showVersion", true }, { "showStatusSelect", true }, { "showRecipient", true }, { "statusHeaderName", "Drafting Status" } })
            </div>

            <div class="tab-pane fade" id="remarks" role="tabpanel" aria-labelledby="remarks-tab">
                @Html.Partial("_Remark", new ViewDataDictionary { { "showDocuments", true }, { "showStatus", false }, { "showVersion", true }, { "showSubject", true }, { "dropdownVersions", ViewBag.DropDownVersions } })
            </div>
        </div>
    </div>
</div>