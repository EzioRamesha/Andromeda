@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.PerLifeAggregationDetailDataViewModel>

@{
    ViewBag.Title = "Conflict Listing";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-6 text-right">
                <div class="btn-group" style="display: unset;">
                    <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        DOWNLOAD AS
                    </button>
                    <div class="dropdown-menu">
                        @Html.ActionLink("All", "Download", null, new { @class = "dropdown-item", target = "_blank" })
                        @Html.ActionLink("Filtered", "Download", new
                        {
                            TreatyCode = routeValue["TreatyCode"],
                            RiskYear = routeValue["RiskYear"],
                            RiskMonth = routeValue["RiskMonth"],
                            InsuredName = routeValue["InsuredName"],
                            InsuredGender = routeValue["InsuredGender"],
                            InsuredDateOfBirth = routeValue["InsuredDateOfBirth"],
                            PolicyNumber = routeValue["PolicyNumber"],
                            ReinsEffDatePol = routeValue["ReinsEffDatePol"],
                            AAR = routeValue["AAR"],
                            GrossPremium = routeValue["GrossPremium"],
                            NetPremium = routeValue["NetPremium"],
                            PremiumFrequencyMode = routeValue["PremiumFrequencyMode"],
                            RetroPremiumFrequencyMode = routeValue["RetroPremiumFrequencyMode"],
                            CedingPlanCode = routeValue["CedingPlanCode"],
                            CedingBenefitTypeCode = routeValue["CedingBenefitTypeCode"],
                            CedingBenefitRiskCode = routeValue["CedingBenefitRiskCode"],
                            MLReBenefitCode = routeValue["MLReBenefitCode"],
                            TerritoryOfIssueCode = routeValue["TerritoryOfIssueCode"],
                        }, new { @class = "dropdown-item", target = "_blank" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortTreatyCodeId;
                                @Shared.Html.Sorter(ViewBag, "Treaty Code", "TreatyCode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRiskYear;
                                @Shared.Html.Sorter(ViewBag, "Risk Year", "RiskYear", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRiskMonth;
                                @Shared.Html.Sorter(ViewBag, "Risk Month", "RiskMonth", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortInsuredName;
                                @Shared.Html.Sorter(ViewBag, "Insured Name", "InsuredName", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortInsuredGender;
                                @Shared.Html.Sorter(ViewBag, "Insured Gender", "InsuredGender", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortInsuredDateOfBirth;
                                @Shared.Html.Sorter(ViewBag, "Insured Date of Birth", "InsuredDateOfBirth", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPolicyNumber;
                                @Shared.Html.Sorter(ViewBag, "Policy Number", "PolicyNumber", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortReinsEffDatePol;
                                @Shared.Html.Sorter(ViewBag, "Reinsurance Eff Date Pol", "ReinsEffDatePol", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortAAR;
                                @Shared.Html.Sorter(ViewBag, "AAR", "AAR", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortGrossPremium;
                                @Shared.Html.Sorter(ViewBag, "Gross Premium", "GrossPremium", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortNetPremium;
                                @Shared.Html.Sorter(ViewBag, "Net Premium", "NetPremium", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPremiumFrequencyMode;
                                @Shared.Html.Sorter(ViewBag, "Premium FRequency Mode", "PremiumFrequencyMode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRetroPremiumFrequencyMode;
                                @Shared.Html.Sorter(ViewBag, "Retro Premium Frequency Mode", "RetroPremiumFrequencyMode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCedingPlanCode;
                                @Shared.Html.Sorter(ViewBag, "Ceding Plan Code", "CedingPlanCode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCedingBenefitTypeCode;
                                @Shared.Html.Sorter(ViewBag, "Ceding Benefit Type Code", "CedingBenefitTypeCode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCedingBenefitRiskCode;
                                @Shared.Html.Sorter(ViewBag, "Ceding Benefit Risk Code", "CedingBenefitRiskCode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortMLReBenefitCode;
                                @Shared.Html.Sorter(ViewBag, "MLRe Benefit Code", "MLReBenefitCode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortTerritoryOfIssueCode;
                                @Shared.Html.Sorter(ViewBag, "Territory of Issue Code", "TerritoryOfIssueCode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>
                    <tr>
                        @using (Html.BeginForm("Index", "PerLifeAggregationConflictListing", FormMethod.Get))
                        {
                            string sortOrder = ViewBag.SortOrder;

                            @Html.Hidden("SortOrder", sortOrder)
                            <th>
                                @Html.TextBox("TreatyCode", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("RiskYear", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("RiskMonth", (List<SelectListItem>)ViewBag.DropDownMonths, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("InsuredName", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("InsuredGender", (List<SelectListItem>)ViewBag.DropDownInsuredGenderCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("InsuredDateOfBirth", null, new { id = "InsuredDateOfBirth", @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('InsuredDateOfBirth')" />
                            </th>
                            <th>
                                @Html.TextBox("PolicyNumber", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("ReinsEffDatePol", null, new { id = "ReinsEffDatePol", @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsEffDatePol')" />
                            </th>
                            <th>
                                @Html.TextBox("AAR", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("GrossPremium", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("NetPremium", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("PremiumFrequencyMode", (List<SelectListItem>)ViewBag.DropDownPremiumFrequencyCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("RetroPremiumFrequencyMode", (List<SelectListItem>)ViewBag.DropDownRetroPremiumFrequencyModes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("CedingPlanCode", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("CedingBenefitTypeCode", (List<SelectListItem>)ViewBag.DropDownCedingBenefitTypeCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("CedingBenefitRiskCode", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("MLReBenefitCode", (List<SelectListItem>)ViewBag.DropDownBenefits, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("TerritoryOfIssueCode", (List<SelectListItem>)ViewBag.DropDownTerritoryOfIssueCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>

                @if (Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.TreatyCode)
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(modelItem => item.RiskPeriodYear)
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(modelItem => item.RiskPeriodMonth)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InsuredName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InsuredGenderCode)
                            </td>
                            <td>
                                @if (item.InsuredDateOfBirth.HasValue)
                                {
                                    @item.InsuredDateOfBirth.Value.ToString(Shared.Util.GetDateFormat())
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PolicyNumber)
                            </td>
                            <td>
                                @if (item.ReinsEffDatePol.HasValue)
                                {
                                    @item.ReinsEffDatePol.Value.ToString(Shared.Util.GetDateFormat())
                                }
                            </td>
                            <td class="text-right">
                                @Shared.Util.DoubleToString(item.Aar)
                            </td>
                            <td class="text-right">
                                @Shared.Util.DoubleToString(item.GrossPremium)
                            </td>
                            <td class="text-right">
                                @Shared.Util.DoubleToString(item.NetPremium)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PremiumFrequencyCode)
                            </td>
                            <td>
                                @*@Html.DisplayFor(modelItem => item.PremiumFrequencyCode)*@
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CedingPlanCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CedingBenefitTypeCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CedingBenefitRiskCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MlreBenefitCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TerritoryOfIssueCode)
                            </td>
                            <td class="text-center">
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="bg-transparent linkbtn"><span class="fas fa-pencil-alt"></span></a>
                                @*<div class="btn-group">
                                        <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-ellipsis-v dropbtn" />
                                        </button>
                                        <div class="dropdown-menu">
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                        </div>
                                    </div>*@
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="no-data">No available data found.</td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <div class="pagination-footer">
        <div class="row">
            <div class="col-md-4">
                @Html.Partial("_PageInfo")
            </div>
            <div class="col-md-8">
                @Html.PagedListPager(Model, Page => Url.Action("Index", new
                {
                    TreatyCode = routeValue["TreatyCode"],
                    RiskYear = routeValue["RiskYear"],
                    RiskMonth = routeValue["RiskMonth"],
                    InsuredName = routeValue["InsuredName"],
                    InsuredGender = routeValue["InsuredGender"],
                    InsuredDateOfBirth = routeValue["InsuredDateOfBirth"],
                    PolicyNumber = routeValue["PolicyNumber"],
                    ReinsEffDatePol = routeValue["ReinsEffDatePol"],
                    AAR = routeValue["AAR"],
                    GrossPremium = routeValue["GrossPremium"],
                    NetPremium = routeValue["NetPremium"],
                    PremiumFrequencyMode = routeValue["PremiumFrequencyMode"],
                    RetroPremiumFrequencyMode = routeValue["RetroPremiumFrequencyMode"],
                    CedingPlanCode = routeValue["CedingPlanCode"],
                    CedingBenefitTypeCode = routeValue["CedingBenefitTypeCode"],
                    CedingBenefitRiskCode = routeValue["CedingBenefitRiskCode"],
                    MLReBenefitCode = routeValue["MLReBenefitCode"],
                    TerritoryOfIssueCode = routeValue["TerritoryOfIssueCode"],
                    SortOrder = ViewBag.SortOrder,
                    Page,
                }), Shared.Html.GetPagedListRenderOptions())
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
        $(document).ready(function () {
            dateOffAutoComplete();

            $('#InsuredDateOfBirth').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#ReinsEffDatePol').datepicker({
                format: DateFormatDatePickerJs,
            });
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }
</script>
}