@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.FinanceProvisioningViewModel>

@{
    ViewBag.Title = "Finance Provisioning";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-8 text-right  btn-row-inline">

            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDate;
                                @Shared.Html.Sorter(ViewBag, "Date", "Date", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortStatus;
                                @Shared.Html.Sorter(ViewBag, "Status", "Status", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortClaimsProvisionRecord;
                                @Shared.Html.Sorter(ViewBag, "No of Claim Provision Records", "ClaimsProvisionRecord", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortClaimsProvisionAmount;
                                @Shared.Html.Sorter(ViewBag, "Claim Provision Amount", "ClaimsProvisionAmount", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDrProvisionRecord;
                                @Shared.Html.Sorter(ViewBag, "No of Direct Retro Provision Records", "DrProvisionRecord", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDrProvisionAmount;
                                @Shared.Html.Sorter(ViewBag, "Direct Retro Provision Amount", "DrProvisionAmount", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="text-center w-15">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ClaimsProvisionFile)
                        </th>
                        <th class="text-center w-15">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ClaimsRecoverableFile)
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>

                    <tr>
                        @using (Html.BeginForm("Index", "FinanceProvisioning", FormMethod.Get))
                        {
                            string sortOrder = ViewBag.SortOrder;

                            @Html.Hidden("SortOrder", sortOrder)
                            <th>
                                @Html.TextBox("Date", null, new { id = "Date", @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('Date')" />
                            </th>
                            <th>
                                @Html.DropDownList("Status", (List<SelectListItem>)ViewBag.StatusList, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("ClaimsProvisionRecord", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("ClaimsProvisionAmount", null, new { @class = "form-control", placeholder = "0.00" })
                            </th>
                            <th>
                                @Html.TextBox("DrProvisionRecord", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("DrProvisionAmount", null, new { @class = "form-control", placeholder = "0.00" })
                            </th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>

                @if (Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @item.Date.ToString(Shared.Util.GetDateFormat())
                            </td>
                            <td class="va-middle">
                                <span class="@BusinessObject.FinanceProvisioningBo.GetStatusClass(item.Status)">
                                    @BusinessObject.FinanceProvisioningBo.GetStatusName(item.Status)
                                </span>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ClaimsProvisionRecord)
                            </td>
                            <td>
                                @Shared.Util.DoubleToString(item.ClaimsProvisionAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DrProvisionRecord)
                            </td>
                            <td>
                                @Shared.Util.DoubleToString(item.DrProvisionAmount)
                            </td>
                            <td class="text-center">
                                @if (BusinessObject.FinanceProvisioningBo.IsE3Exist(item.Id))
                                {
                                    <a href="@Url.Action("DownloadE3", new { id = item.Id, date = item.Date })" class="bg-transparent linkbtn"><span class="fas fa-download"></span></a>
                                }
                            </td>
                            <td class="text-center">
                                @if (BusinessObject.FinanceProvisioningBo.IsE4Exist(item.Id))
                                {
                                    <a href="@Url.Action("DownloadE4", new { id = item.Id, date = item.Date })" class="bg-transparent linkbtn"><span class="fas fa-download"></span></a>
                                }
                            </td>
                            <td class="text-center">
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="bg-transparent linkbtn"><span class="fas fa-eye fa-lg"></span></a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="no-data">No available data found.</td>
                    </tr>
                }

            </table>
        </div>

        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
                    {
                        Date = routeValue["Date"],
                        ClaimsProvisionRecord = routeValue["ClaimsProvisionRecord"],
                        ClaimsProvisionAmount = routeValue["ClaimsProvisionAmount"],
                        DrProvisionRecord = routeValue["DrProvisionRecord"],
                        DrProvisionAmount = routeValue["DrProvisionAmount"],
                        SortOrder = ViewBag.SortOrder,
                        Page,
                    }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            dateOffAutoComplete();

            $('#Date').datepicker({
                format: DateFormatDatePickerJs,
            });
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }
    </script>
}
