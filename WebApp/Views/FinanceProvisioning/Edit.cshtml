@using PagedList.Mvc
@model WebApp.Models.FinanceProvisioningViewModel

@{
    ViewBag.Title = "Finance Provisioning";
    ViewBag.Action = "View";
    ViewBag.ListPageUrl = Url.Action("Index");

    PagedList.IPagedList<WebApp.Models.ProvisioningClaimRegisterListingViewModel> ClaimRegisterList = ViewBag.ClaimRegisterList as PagedList.IPagedList<WebApp.Models.ProvisioningClaimRegisterListingViewModel>;
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
    routeValue["id"] = Url.RequestContext.RouteData.Values["id"];
    var disabled = ViewBag.ReadOnly != null && ViewBag.ReadOnly;
    var isEnableSubmitForProcessing = ViewBag.IsEnableSubmitForProcessing != null ? ViewBag.IsEnableSubmitForProcessing : false;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-6"><h4>@ViewBag.Action @ViewBag.Title</h4></div>
            <div class="col-6 text-right">
                <span class="@BusinessObject.FinanceProvisioningBo.GetStatusClass(Model.Status)">
                    @BusinessObject.FinanceProvisioningBo.GetStatusName(Model.Status)
                </span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Edit", "FinanceProvisioning", FormMethod.Post, new { id = "FinanceProvisioningForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.ClaimsProvisionRecord)
            @Html.HiddenFor(model => model.ClaimsProvisionAmount)
            @Html.HiddenFor(model => model.DrProvisionRecord)
            @Html.HiddenFor(model => model.DrProvisionAmount)

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.DateStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.DateStr, new { id = "Date", @class = "form-control", placeholder = "DD MM YYYY", @readonly = true })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" />
                        </div>
                        @Html.ValidationMessageFor(model => model.DateStr, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

        <br />
        <br />

        <div class="text-right" style="margin-bottom: 20px;">
            <div class="btn-group">
                <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    DOWNLOAD AS
                </button>
                <div class="dropdown-menu">
                    @Html.ActionLink("All", "DownloadClaimRegister", new { type = 1, id = Model.Id }, new { @class = "dropdown-item" })
                    @Html.ActionLink("Filtered", "DownloadClaimRegister", new
                    {
                        type = 2,
                        id = Model.Id,
                        HasRedFlag = routeValue["HasRedFlag"],
                        EntryNo = routeValue["EntryNo"],
                        SoaQuarter = routeValue["SoaQuarter"],
                        ClaimId = routeValue["ClaimId"],
                        ClaimTransactionType = routeValue["ClaimTransactionType"],
                        IsReferralCase = routeValue["IsReferralCase"],
                        RiDataWarehouseId = routeValue["RiDataWarehouseId"],
                        RecordType = routeValue["RecordType"],
                        TreatyCode = routeValue["TreatyCode"],
                        PolicyNumber = routeValue["PolicyNumber"],
                        CedingCompany = routeValue["CedingCompany"],
                        InsuredName = routeValue["InsuredName"],
                        InsuredDateOfBirth = routeValue["InsuredDateOfBirth"],
                        LastTransactionDate = routeValue["LastTransactionDate"],
                        DateOfReported = routeValue["DateOfReported"],
                        CedantDateOfNotification = routeValue["CedantDateOfNotification"],
                        DateOfRegister = routeValue["DateOfRegister"],
                        ReinsEffDatePol = routeValue["ReinsEffDatePol"],
                        DateOfEvent = routeValue["DateOfEvent"],
                        PolicyDuration = routeValue["PolicyDuration"],
                        TargetDateToIssueInvoice = routeValue["TargetDateToIssueInvoice"],
                        SumIns = routeValue["SumIns"],
                        CauseOfEvent = routeValue["CauseOfEvent"],
                        PicClaimId = routeValue["PicClaimId"],
                        PicDaaId = routeValue["PicDaaId"],
                        ClaimStatus = routeValue["ClaimStatus"],
                        ProvisionStatus = routeValue["ProvisionStatus"],
                        OffsetStatus = routeValue["OffsetStatus"],
                    }, new { @class = "dropdown-item" })
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortHasRedFlag;
                                @Shared.Html.Sorter(ViewBag, "Red Flag", "HasRedFlag", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortEntryNo;
                                @Shared.Html.Sorter(ViewBag, "Entry No", "EntryNo", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortSoaQuarter;
                                @Shared.Html.Sorter(ViewBag, "SOA Quarter", "SoaQuarter", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortClaimId;
                                @Shared.Html.Sorter(ViewBag, "Claim ID", "ClaimId", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortClaimTransactionType;
                                @Shared.Html.Sorter(ViewBag, "Claim Transaction Type", "ClaimTransactionType", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortIsReferralCase;
                                @Shared.Html.Sorter(ViewBag, "Referral Case", "IsReferralCase", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRiDataWarehouseId;
                                @Shared.Html.Sorter(ViewBag, "RI Data ID", "RiDataWarehouseId", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRecordType;
                                @Shared.Html.Sorter(ViewBag, "Record Type", "RecordType", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortTreatyCode;
                                @Shared.Html.Sorter(ViewBag, "Treaty Code", "TreatyCode", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPolicyNumber;
                                @Shared.Html.Sorter(ViewBag, "Policy No", "PolicyNumber", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCedingCompany;
                                @Shared.Html.Sorter(ViewBag, "Ceding Company", "CedingCompany", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortInsuredName;
                                @Shared.Html.Sorter(ViewBag, "Insured Name", "InsuredName", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortInsuredDateOfBirth;
                                @Shared.Html.Sorter(ViewBag, "Date of Birth", "InsuredDateOfBirth", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortLastTransactionDate;
                                @Shared.Html.Sorter(ViewBag, "Last Transaction Date", "LastTransactionDate", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDateOfReported;
                                @Shared.Html.Sorter(ViewBag, "Date of Report", "DateOfReported", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCedantDateOfNotification;
                                @Shared.Html.Sorter(ViewBag, "Date Notified", "CedantDateOfNotification", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDateOfRegister;
                                @Shared.Html.Sorter(ViewBag, "Date of Register", "DateOfRegister", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortReinsEffDatePol;
                                @Shared.Html.Sorter(ViewBag, "Date of Commencement", "ReinsEffDatePol", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDateOfEvent;
                                @Shared.Html.Sorter(ViewBag, "Date of Event", "DateOfEvent", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPolicyDuration;
                                @Shared.Html.Sorter(ViewBag, "Policy Duration", "PolicyDuration", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortTargetDateToIssueInvoice;
                                @Shared.Html.Sorter(ViewBag, "Target Date To Issue Invoice", "TargetDateToIssueInvoice", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortSumIns;
                                @Shared.Html.Sorter(ViewBag, "Sum Reinsured (MYR)", "SumIns", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCauseOfEvent;
                                @Shared.Html.Sorter(ViewBag, "Cause of Event", "CauseOfEvent", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPicClaimId;
                                @Shared.Html.Sorter(ViewBag, "Person In-Charge (Claims)", "PicClaimId", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPicDaaId;
                                @Shared.Html.Sorter(ViewBag, "Person In-Charge (DA&A)", "PicDaaId", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortClaimStatus;
                                @Shared.Html.Sorter(ViewBag, "Status", "ClaimStatus", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortProvisionStatus;
                                @Shared.Html.Sorter(ViewBag, "Provision Status", "ProvisionStatus", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortOffsetStatus;
                                @Shared.Html.Sorter(ViewBag, "Offset Status", "OffsetStatus", @Url.Action("Edit", routeValue))
                            }
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>
                    <tr>
                        @using (Html.BeginForm("Edit", "FinanceProvisioning", new { id = Model.Id }, FormMethod.Get))
                        {
                            @Html.Hidden("SortOrder", (string)ViewBag.SortOrder)
                            <th>
                                @Html.DropDownList("HasRedFlag", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("EntryNo", null, new { @class = "form-control prevent-disable", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("SoaQuarter", null, new { @class = "form-control", placeholder = "YYYY MM", autocomplete = "off" })
                            </th>
                            <th>
                                @Html.TextBox("ClaimId", null, new { @class = "form-control prevent-disable", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("ClaimTransactionType", (List<SelectListItem>)ViewBag.DropDownClaimTransactionTypes, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("IsReferralCase", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("RiDataWarehouseId", null, new { @class = "form-control" })
                            </th>
                            <th>
                                @Html.TextBox("RecordType", null, new { @class = "form-control" })
                            </th>
                            <th>
                                @Html.TextBox("TreatyCode", null, new { @class = "form-control" })
                            </th>
                            <th>
                                @Html.TextBox("PolicyNumber", null, new { @class = "form-control" })
                            </th>
                            <th>
                                @Html.DropDownList("CedingCompany", (List<SelectListItem>)ViewBag.DropDownCedants, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("InsuredName", null, new { @class = "form-control" })
                            </th>
                            <th>
                                @Html.TextBox("InsuredDateOfBirth", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('InsuredDateOfBirth')" />
                            </th>
                            <th>
                                @Html.TextBox("LastTransactionDate", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('LastTransactionDate')" />
                            </th>
                            <th>
                                @Html.TextBox("DateOfReported", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfReported')" />
                            </th>
                            <th>
                                @Html.TextBox("CedantDateOfNotification", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('CedantDateOfNotification')" />
                            </th>
                            <th>
                                @Html.TextBox("DateOfRegister", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfRegister')" />
                            </th>
                            <th>
                                @Html.TextBox("ReinsEffDatePol", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsEffDatePol')" />
                            </th>
                            <th>
                                @Html.TextBox("DateOfEvent", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfEvent')" />
                            </th>
                            <th>
                                @Html.TextBox("PolicyDuration", null, new { @class = "form-control", @type = "number", min = "0" })
                            </th>
                            <th>
                                @Html.TextBox("TargetDateToIssueInvoice", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('TargetDateToIssueInvoice')" />
                            </th>
                            <th>
                                @Html.TextBox("SumIns", null, new { @class = "form-control" })
                            </th>
                            <th>
                                @Html.TextBox("CauseOfEvent", null, new { @class = "form-control" })
                            </th>
                            <th>
                                @Html.DropDownList("PicClaimId", (List<SelectListItem>)ViewBag.DropDownPicClaims, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("PicDaaId", (List<SelectListItem>)ViewBag.DropDownPicDaas, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("ClaimStatus", (List<SelectListItem>)ViewBag.DropDownClaimStatuses, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("ProvisionStatus", (List<SelectListItem>)ViewBag.DropDownProvisionStatuses, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("OffsetStatus", (List<SelectListItem>)ViewBag.DropDownOffsetStatuses, new { @class = "form-control selectpicker prevent-disable", @data_container = "body" })
                            </th>
                            <th class="text-center">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (ClaimRegisterList.Count > 0)
                    {
                        foreach (var item in ClaimRegisterList)
                        {
                            <tr>
                                <td>
                                    @if (item.HasRedFlag)
                                    {
                                        <i class="fas fa-flag"></i>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EntryNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SoaQuarter)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ClaimId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ClaimTransactionType)
                                </td>
                                <td>
                                    @if (item.IsReferralCase)
                                    {
                                        @Html.Raw('Y')
                                    }
                                    else
                                    {
                                        @Html.Raw('N')
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RiDataWarehouseId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RecordType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TreatyCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PolicyNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CedingCompany)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InsuredName)
                                </td>
                                <td>
                                    @if (item.InsuredDateOfBirth != null)
                                    {
                                        @item.InsuredDateOfBirth.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @if (item.LastTransactionDate != null)
                                    {
                                        @item.LastTransactionDate.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @if (item.DateOfReported != null)
                                    {
                                        @item.DateOfReported.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @if (item.CedantDateOfNotification != null)
                                    {
                                        @item.CedantDateOfNotification.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @if (item.DateOfRegister != null)
                                    {
                                        @item.DateOfRegister.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @if (item.ReinsEffDatePol != null)
                                    {
                                        @item.ReinsEffDatePol.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @if (item.DateOfEvent != null)
                                    {
                                        @item.DateOfEvent.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PolicyDuration)
                                </td>
                                <td>
                                    @if (item.TargetDateToIssueInvoice != null)
                                    {
                                        @item.TargetDateToIssueInvoice.Value.ToString(Shared.Util.GetDateFormat());
                                    }
                                </td>
                                <td>
                                    @Shared.Util.DoubleToString(item.SumIns)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CauseOfEvent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PicClaim.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PicDaa.FullName)
                                </td>
                                <td class="va-middle">
                                    <span class="@BusinessObject.ClaimRegisterBo.GetStatusClass(item.ClaimStatus)">
                                        @BusinessObject.ClaimRegisterBo.GetStatusName(item.ClaimStatus)
                                    </span>
                                </td>
                                <td class="va-middle">
                                    <span class="@BusinessObject.ClaimRegisterBo.GetProvisionStatusClass(item.ProvisionStatus)">
                                        @BusinessObject.ClaimRegisterBo.GetProvisionStatusName(item.ProvisionStatus)
                                    </span>
                                </td>
                                <td class="va-middle">
                                    <span class="@BusinessObject.ClaimRegisterBo.GetOffsetStatusClass(item.OffsetStatus)">
                                        @BusinessObject.ClaimRegisterBo.GetOffsetStatusName(item.OffsetStatus)
                                    </span>
                                </td>
                                <td class="text-center">
                                    <a href="@Url.Action("Edit", "ClaimRegister", new { id = item.Id })" title="Edit">
                                        <span class="fas fa-eye" />
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="28" class="no-data">No available data found.</td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

        @{
            ViewBag.CurrentPageNumber = ClaimRegisterList.PageNumber;
            ViewBag.CurrentPageItems = ClaimRegisterList.Count;
            ViewBag.PageSize = ClaimRegisterList.PageSize;
            ViewBag.Total = ViewBag.ClaimRegisterTotal;
        }
        <div class="pagination-footer position-relative">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8" id="claimRegisterPager">
                    @Html.PagedListPager(ClaimRegisterList, Page => Url.Action("Edit", new
                    {
                        HasRedFlag = routeValue["HasRedFlag"],
                        EntryNo = routeValue["EntryNo"],
                        SoaQuarter = routeValue["SoaQuarter"],
                        ClaimId = routeValue["ClaimId"],
                        ClaimTransactionType = routeValue["ClaimTransactionType"],
                        IsReferralCase = routeValue["IsReferralCase"],
                        RiDataWarehouseId = routeValue["RiDataWarehouseId"],
                        RecordType = routeValue["RecordType"],
                        TreatyCode = routeValue["TreatyCode"],
                        PolicyNumber = routeValue["PolicyNumber"],
                        CedingCompany = routeValue["CedingCompany"],
                        InsuredName = routeValue["InsuredName"],
                        InsuredDateOfBirth = routeValue["InsuredDateOfBirth"],
                        LastTransactionDate = routeValue["LastTransactionDate"],
                        DateOfReported = routeValue["DateOfReported"],
                        CedantDateOfNotification = routeValue["CedantDateOfNotification"],
                        DateOfRegister = routeValue["DateOfRegister"],
                        ReinsEffDatePol = routeValue["ReinsEffDatePol"],
                        DateOfEvent = routeValue["DateOfEvent"],
                        PolicyDuration = routeValue["PolicyDuration"],
                        TargetDateToIssueInvoice = routeValue["TargetDateToIssueInvoice"],
                        SumIns = routeValue["SumIns"],
                        CauseOfEvent = routeValue["CauseOfEvent"],
                        PicClaimId = routeValue["PicClaimId"],
                        PicDaaId = routeValue["PicDaaId"],
                        ClaimStatus = routeValue["ClaimStatus"],
                        ProvisionStatus = routeValue["ProvisionStatus"],
                        OffsetStatus = routeValue["OffsetStatus"],
                        SortOrder = ViewBag.SortOrder,
                        Page,
                    }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>

        <div class="form-row form-row-btn">
            <div class="form-group col-md-12 btn-row">
                @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                @if (isEnableSubmitForProcessing)
                {
                    <button type="button" class="btn btn-submit float-right" onclick="submitForProcessing()">SUBMIT FOR PROCESSING</button>
                }
            </div>
        </div>
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/date-quarter.js")

    <script type="text/javascript">
        var StatusSubmitForProcessing = '@BusinessObject.FinanceProvisioningBo.StatusSubmitForProcessing';

        $(document).ready(function () {
            dateOffAutoComplete();

            $('#SoaQuarter').datepicker({
                format: '@BusinessObject.Mfrs17ReportingBo.DateQuarterFormatJs',
                minViewMode: 1,
                autoclose: true,
                language: "qtrs",
                forceParse: false
            }).on('show', function (e) {
                var datepickerDropDown = $('.datepicker');
                datepickerDropDown.addClass('quarterpicker');
            });

            $('#Date').datepicker({
                format: DateFormatDatePickerJs,
            });

            $('#InsuredDateOfBirth').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#LastTransactionDate').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#DateOfReported').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#CedantDateOfNotification').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#DateOfRegister').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#DateOfEvent').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#TargetDateToIssueInvoice').datepicker({
                format: DateFormatDatePickerJs,
            });
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }

        function submitForProcessing() {
            $('#Status').val(StatusSubmitForProcessing);
            $('#FinanceProvisioningForm').submit();
        }
    </script>
}
