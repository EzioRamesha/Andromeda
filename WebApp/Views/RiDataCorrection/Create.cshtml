
@model WebApp.Models.RiDataCorrectionViewModel

@{
    ViewBag.Title = "RI Data Correction";
    ViewBag.Action = "Create";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card" id="app">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>

    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="col-md-6 mid-line-1">
                        <div class="col-form-label">
                            <span class="font-weight-bold">Parameters</span>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CedantId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.CedantId, (List<SelectListItem>)ViewBag.DropDownCedants, htmlAttributes: new { @class = "form-control selectpicker", onchange = "getTreatyCode(this.value);" })
                            @Html.ValidationMessageFor(model => model.CedantId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TreatyCodeId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.TreatyCodeId, (List<SelectListItem>)ViewBag.DropDownEmpty, htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.TreatyCodeId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PolicyNumber, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.PolicyNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InsuredRegisterNo, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.InsuredRegisterNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.InsuredRegisterNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        <div class="col-form-label">
                            <span class="font-weight-bold">Mapped Values</span>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InsuredGenderCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.InsuredGenderCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownInsuredGenderCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.InsuredGenderCodePickListDetailId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InsuredDateOfBirthStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-w-icon">
                                @Html.EditorFor(model => model.InsuredDateOfBirthStr, new { htmlAttributes = new { @class = "form-control", placeholder = "DD MM YYYY" } })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('InsuredDateOfBirthStr')" />
                            </div>
                            @Html.ValidationMessageFor(model => model.InsuredDateOfBirthStr, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InsuredName, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.InsuredName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.InsuredName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CampaignCode, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.CampaignCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.CampaignCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReinsBasisCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.ReinsBasisCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownReinsBasisCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.ReinsBasisCodePickListDetailId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ApLoadingStr, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.ApLoadingStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.ApLoadingStr, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    <script type="text/javascript">
        var model = @Html.Raw(Json.Encode(Model));
        var treatyCodeActive = '@BusinessObject.TreatyCodeBo.StatusActive';
        var getTreatyCodeByCedantUrl = '@Url.Action("Index", "TreatyCode")';
    </script>
    @Scripts.Render("~/Scripts/models/RiDataCorrection.js")
}
