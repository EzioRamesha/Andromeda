@using PagedList.Mvc
@using Shared.Forms.Helpers
@model WebApp.Models.PerLifeClaimViewModel

@{
    ViewBag.Title = "Per Life Claims";
    ViewBag.Action = "Edit";
    ViewBag.ListPageUrl = Url.Action("Index");

    // Claim Register Data
    PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel> ClaimRegisterDataList = ViewBag.ClaimRegisterDataList as PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel>;
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;

    // Exception
    PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel> ExceptionList = ViewBag.ExceptionList as PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel>;
    var exceptionRouteValue = (RouteValueDictionary)ViewBag.ExceptionRouteValue;

    // Claim Retro Data
    PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel> ClaimRetroDataList = ViewBag.ClaimRetroDataList as PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel>;
    var claimRetroDataRouteValue = (RouteValueDictionary)ViewBag.ClaimRetroDataRouteValue;

    // Summary Paid Claims
    PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel> SummaryPaidClaimsList = ViewBag.SummaryPaidClaimsList as PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel>;
    var summaryPaidClaimsRouteValue = (RouteValueDictionary)ViewBag.SummaryPaidClaimsRouteValue;

    // Summary Pending Claims
    PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel> SummaryPendingClaimsList = ViewBag.SummaryPendingClaimsList as PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel>;
    var summaryPendingClaimsRouteValue = (RouteValueDictionary)ViewBag.SummaryPendingClaimsRouteValue;

    // Summary Claims Removed
    PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel> SummaryClaimsRemovedList = ViewBag.SummaryClaimsRemovedList as PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel>;
    var summaryClaimsRemovedRouteValue = (RouteValueDictionary)ViewBag.SummaryClaimsRemovedRouteValue;



}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card" id="app">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <h4>@ViewBag.Action @ViewBag.Title</h4>
            </div>
            <div class="col-md-6 text-right">
                <span class="@BusinessObject.Retrocession.PerLifeClaimBo.GetStatusClass(Model.Status)">
                    @BusinessObject.Retrocession.PerLifeClaimBo.GetStatusName(Model.Status)
                </span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)

        <div class="form-horizontal">
            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1">
                    @Html.LabelForRequired(model => model.FundsAccountingTypePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.FundsAccountingTypePickListDetailBo.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.FundsAccountingTypePickListDetailId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mid-line-2">
                    @Html.LabelForRequired(model => model.SoaQuarter, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.SoaQuarter, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.SoaQuarter, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1">
                    @Html.LabelForRequired(model => model.CutOffId, htmlAttributes: new { @class = "col-form-label" })
                    @Html.DropDownListFor(model => model.CutOffId, (List<SelectListItem>)ViewBag.DropDownCutOffQuartersWithDate, htmlAttributes: new { @class = "form-control selectpicker", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.CutOffId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mid-line-2">
                    @Html.LabelFor(model => model.ProcessingDateStr, htmlAttributes: new { @class = "col-form-label" })
                    <div class="input-w-icon">
                        @Html.EditorFor(model => model.ProcessingDateStr, new { htmlAttributes = new { id = "ProcessingDate", @class = "form-control", placeholder = "DD MM YYYY", @readonly = true } })
                    </div>
                    @Html.ValidationMessageFor(model => model.ProcessingDateStr, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1">
                    @Html.LabelForRequired(model => model.PersonInChargeId, htmlAttributes: new { @class = "col-form-label" })
                    @Html.DropDownListFor(model => model.PersonInChargeId, (List<SelectListItem>)ViewBag.DropDownRetrocessionUsers, htmlAttributes: new { @class = "form-control selectpicker", @disabled = "disabled" })
                    @Html.HiddenFor(model => model.PersonInChargeId)
                    @Html.ValidationMessageFor(model => model.PersonInChargeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-12">
                    <button type="button" class="btn btn-submit float-right" v-on:click="submitForProcessing(false)">SUBMIT FOR PROCESSING</button>
                </div>
            </div>
        </div>

        @using (Html.BeginForm("Edit", "PerLifeClaim", FormMethod.Post, new { id = "SubmitEditForm" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.PerLifeClaimId)
            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.ActiveTab)
        }

        <div class="form-horizontal">
            <div class="form-row mt-2">
                <div class="form-group col-md-12">
                    <div class="form-group col-md-12">
                        <ul class="nav nav-tabs">
                            <li class="nav-item"><a class="@(Model.ActiveTab == null || Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabClaimRegisterData ? "active" : "") underline-tab" href="@Url.Action("Edit", "PerLifeClaim", new { id = Model.Id })">Claim Register Data</a></li>
                            <li class="nav-item"><a class="@(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabException ? "active" : "") underline-tab" href="@Url.Action("Exception", "PerLifeClaim", new { id = Model.Id })">Exception</a></li>
                            <li class="nav-item"><a class="@(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabClaimRetroData ? "active" : "") underline-tab" href="@Url.Action("ClaimRetroData", "PerLifeClaim", new { id = Model.Id })">Claim Retro Data</a></li>
                            <li class="nav-item"><a class="@(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummary || Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryPendingClaims || Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryClaimsRemoved ? "active" : "") underline-tab" href="@Url.Action("Summary", "PerLifeClaim", new { id = Model.Id })">Summary</a></li>
                            <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#statusHistory" onclick="updateActiveTab()">Status History</a></li>
                        </ul>

                        <div class="tab-content underline-tab-content">
                            <div class="tab-pane fade @(Model.ActiveTab == null || Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabClaimRegisterData ? "show active" : "")" id="claimRegisterDataTab" role="tabpanel" aria-labelledby="claimRegisterDataTab-tab">
                                @using (Html.BeginForm("Edit", "PerLifeClaim", FormMethod.Get, new { id = "PerLifeClaimEditForm" }))
                                {
                                    <div class="table-responsive mt-3">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th class="w-5">Red Flag</th>
                                                    <th class="w-15">Entry No</th>
                                                    <th class="w-15">SOA Quarter</th>
                                                    <th class="w-15">Claim ID</th>
                                                    <th class="w-15">Claim Transaction Type</th>
                                                    <th class="w-15">Referral Case Indicator</th>
                                                    <th class="w-15">RI Data ID</th>
                                                    <th class="w-15">Record Type</th>
                                                    <th class="w-15">Treaty Code</th>
                                                    <th class="w-15">Policy Number</th>
                                                    <th class="w-15">Ceding Company</th>
                                                    <th class="w-15">Insured Name</th>
                                                    <th class="w-15">Insured Date of Birth</th>
                                                    <th class="w-15">Last Transaction Date</th>
                                                    <th class="w-15">Date of Reported</th>
                                                    <th class="w-15">Cedant Date of Notification</th>
                                                    <th class="w-15">Date of Register</th>
                                                    <th class="w-15">Date of Commencement</th>
                                                    <th class="w-15">Date of Event</th>
                                                    <th class="w-15">Sum Insured (MYR)</th>
                                                    <th class="w-15">Cause of Event</th>
                                                    <th class="w-15">Claim Status</th>
                                                    <th class="w-15">Provision Status</th>
                                                    <th class="w-15">Offset Status</th>
                                                    <th class="w-15">MLRe Event Code</th>
                                                    <th class="w-15">Claim Code</th>
                                                    <th class="w-15">MLRe Benefit Code</th>
                                                    <th class="w-15">Ceding Plan Code</th>
                                                    <th class="w-15">Ceding Benefit Risk Code</th>
                                                    <th class="w-15">Ceding Benefit Type Code</th>
                                                    <th class="w-5">Action</th>
                                                    <th class="text-center w-5">
                                                        @Html.CheckBox("SelectAllClaimRegisterData", new { @onclick = "selectAllClaimRegisterData()" })
                                                    </th>
                                                </tr>
                                                <tr>
                                                    <th>
                                                        @Html.DropDownList("ClaimRegisterDataHasRedFlag", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataEntryNo", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataSoaQuarter", new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'SOA Quarter', 'ClaimRegisterDataSoaQuarter')", placeholder = "YYYY MM", autocomplete = "off" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataClaimId", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataClaimTransactionType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ClaimRegisterDataIsReferralCase", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @*Drop Down Ri Data*@
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataRecordType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataTreatyCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataPolicyNumber", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataCedingCompany", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataInsuredName", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRegisterDataInsuredDateOfBirth", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRegisterDataInsuredDateOfBirth')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRegisterDataLastTransaction", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRegisterDataLastTransaction')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRegisterDataDateOfReported", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRegisterDataDateOfReported')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRegisterDataCedantDateOfNotification", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRegisterDataCedantDateOfNotification')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRegisterDataDateOfRegister", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRegisterDataDateOfRegister')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRegisterDataDateOfCommencement", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRegisterDataDateOfCommencement')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRegisterDataDateOfEvent", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRegisterDataDateOfEvent')" />
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataSumInsured", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataCauseOfEvent", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ClaimRegisterDataClaimStatus", (List<SelectListItem>)ViewBag.DropDownClaimStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ClaimRegisterDataProvisionStatus", (List<SelectListItem>)ViewBag.DropDownProvisionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ClaimRegisterDataOffsetStatus", (List<SelectListItem>)ViewBag.DropDownOffsetStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataMLReEventCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterClaimCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterMlreBenefitCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataCedingPlanCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataCedingBenefitRiskCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRegisterDataCedingBenefitTypeCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th class="text-center align-middle">
                                                        <div class="btn-row-action">
                                                            <button type="button" title="Clear" class="btn-circle" onclick="clearClaimRegisterData()"><span class="fas fa-backspace" /></button>
                                                            <button type="button" title="Search" class="btn-circle" onclick="filterClaimRegisterData()"><span class="fas fa-search" /></button>
                                                        </div>
                                                    </th>
                                                    <th>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (ClaimRegisterDataList.Count > 0)
                                                {
                                                    foreach (var item in ClaimRegisterDataList)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.HasRedFlag)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.EntryNo)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SoaQuarter)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimId)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimTransactionType)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.IsReferralCase)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RiDataId)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RecordType)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.TreatyCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyNumber)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingCompany)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.InsuredName)
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.InsuredDateOfBirth.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.InsuredDateOfBirth.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.LastTransactionDate.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.LastTransactionDate.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfReported.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfReported.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.CedantDateOfNotification.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.CedantDateOfNotification.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfRegister.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfRegister.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfIntimation.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfIntimation.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfEvent.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfEvent.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SumIns)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CauseOfEvent)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.ClaimRegisterBo.GetStatusName(item.ClaimRegisterHistory.ClaimStatus)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.ClaimRegisterBo.GetProvisionStatusName(item.ClaimRegisterHistory.ProvisionStatus)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.ClaimRegisterBo.GetOffsetStatusName(item.ClaimRegisterHistory.OffsetStatus)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.MlreEventCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.MlreBenefitCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingPlanCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingBenefitRiskCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingBenefitTypeCode)
                                                            </td>
                                                            <td></td>
                                                            <td></td>
                                                            <td>
                                                                <div class="actionCheckbox" name="selectClaimRegisterData">
                                                                    @Html.CheckBox("SelectClaimRegisterData", new { id = item.Id })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="28" class="no-data">No available data found.</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                    ViewBag.CurrentPageNumber = ClaimRegisterDataList.PageNumber;
                                    ViewBag.CurrentPageItems = ClaimRegisterDataList.Count;
                                    ViewBag.PageSize = ClaimRegisterDataList.PageSize;
                                    ViewBag.Total = ViewBag.ClaimRegisterDataListTotal;

                                    <div class="pagination-footer position-relative">
                                        <div class="row">
                                            <div class="col-md-4">
                                                @Html.Partial("_PageInfo")
                                            </div>
                                            <div class="col-md-8" id="RiDetailPager">
                                                @Html.PagedListPager(ClaimRegisterDataList, Page => Url.Action("Edit", new
                                           {
                                               id = Model.Id,
                                               ClaimRegisterDataHasRedFlag = routeValue["ClaimRegisterDataHasRedFlag"],
                                               ClaimRegisterDataEntryNo = routeValue["ClaimRegisterDataEntryNo"],
                                               ClaimRegisterDataSoaQuarter = routeValue["ClaimRegisterDataSoaQuarter"],
                                               ClaimRegisterDataClaimId = routeValue["ClaimRegisterDataClaimId"],
                                               ClaimRegisterDataClaimTransactionType = routeValue["ClaimRegisterDataClaimTransactionType"],
                                               ClaimRegisterDataIsReferralCase = routeValue["ClaimRegisterDataIsReferralCase"],
                                               ClaimRegisterDataRiDataId = routeValue["ClaimRegisterDataRiDataId"],
                                               ClaimRegisterDataRecordType = routeValue["ClaimRegisterDataRecordType"],
                                               ClaimRegisterDataTreatyCode = routeValue["ClaimRegisterDataTreatyCode"],
                                               ClaimRegisterDataPolicyNumber = routeValue["ClaimRegisterDataPolicyNumber"],
                                               ClaimRegisterDataCedingCompany = routeValue["ClaimRegisterDataCedingCompany"],
                                               ClaimRegisterDataInsuredName = routeValue["ClaimRegisterDataInsuredName"],
                                               ClaimRegisterDataInsuredDateOfBirth = routeValue["ClaimRegisterDataInsuredDateOfBirth"],
                                               ClaimRegisterDataLastTransaction = routeValue["ClaimRegisterDataLastTransaction"],
                                               ClaimRegisterDataDateOfReported = routeValue["ClaimRegisterDataDateOfReported"],
                                               ClaimRegisterDataCedantDateOfNotification = routeValue["ClaimRegisterDataCedantDateOfNotification"],
                                               ClaimRegisterDataDateOfRegister = routeValue["ClaimRegisterDataDateOfRegister"],
                                               ClaimRegisterDataDateOfCommencement = routeValue["ClaimRegisterDataDateOfCommencement"],
                                               ClaimRegisterDataDateOfEvent = routeValue["ClaimRegisterDataDateOfEvent"],
                                               ClaimRegisterDataSumInsured = routeValue["ClaimRegisterDataSumInsured"],
                                               ClaimRegisterDataCauseOfEvent = routeValue["ClaimRegisterDataCauseOfEvent"],
                                               ClaimRegisterDataClaimStatus = routeValue["ClaimRegisterDataClaimStatus"],
                                               ClaimRegisterDataProvisionStatus = routeValue["ClaimRegisterDataProvisionStatus"],
                                               ClaimRegisterDataOffsetStatus = routeValue["ClaimRegisterDataOffsetStatus"],
                                               ClaimRegisterDataMlreEventCode = routeValue["ClaimRegisterDataMlreEventCode"],
                                               ClaimRegisterDataClaimCode = routeValue["ClaimRegisterDataClaimCode"],
                                               ClaimRegisterDataMlreBenefitCode = routeValue["ClaimRegisterDataMlreBenefitCode"],
                                               ClaimRegisterDataCedingPlanCode = routeValue["ClaimRegisterDataCedingPlanCode"],
                                               ClaimRegisterDataCedingBenefitRiskCode = routeValue["ClaimRegisterDataCedingBenefitRiskCode"],
                                               ClaimRegisterDataCedingBenefitTypeCode = routeValue["ClaimRegisterDataCedingBenefitTypeCode"],
                                               ClaimRegisterDataClaimRecoveryAmount = routeValue["ClaimRegisterDataClaimRecoveryAmount"],
                                               ClaimRegisterDataMlreRetainAmount = routeValue["ClaimRegisterDataMlreRetainAmount"],
                                               ClaimRegisterDataLateInterest = routeValue["ClaimRegisterDataLateInterest"],
                                               ClaimRegisterDataExGratia = routeValue["ClaimRegisterDataExGratia"],
                                               Page = Page
                                           }), Shared.Html.GetPagedListRenderOptions())
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="form-row form-row-btn">
                                    <div class="form-group col-md-12 btn-row">
                                        <button type="button" class="btn btn-submit float-right" v-on:click="validateData()">VALIDATE DATA</button>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade @(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabException ? "show active" : "")" id="exceptionTab" role="tabpanel" aria-labelledby="exceptionTab-tab">
                                @using (Html.BeginForm("Exception", "PerLifeClaim", FormMethod.Get, new { id = "PerLifeClaimExceptionForm" }))
                                {
                                    <div class="table-responsive mt-3">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th class="w-5">Red Flag</th>
                                                    <th class="w-15">Entry No</th>
                                                    <th class="w-15">SOA Quarter</th>
                                                    <th class="w-15">Claim ID</th>
                                                    <th class="w-15">Claim Transaction Type</th>
                                                    <th class="w-15">Referral Case Indicator</th>
                                                    <th class="w-15">RI Data ID</th>
                                                    <th class="w-15">Record Type</th>
                                                    <th class="w-15">Treaty Code</th>
                                                    <th class="w-15">Policy Number</th>
                                                    <th class="w-15">Ceding Company</th>
                                                    <th class="w-15">Insured Name</th>
                                                    <th class="w-15">Insured Date of Birth</th>
                                                    <th class="w-15">Last Transaction Date</th>
                                                    <th class="w-15">Date of Reported</th>
                                                    <th class="w-15">Cedant Date of Notification</th>
                                                    <th class="w-15">Date of Register</th>
                                                    <th class="w-15">Date of Commencement</th>
                                                    <th class="w-15">Date of Event</th>
                                                    <th class="w-15">Sum Insured (MYR)</th>
                                                    <th class="w-15">Cause of Event</th>
                                                    <th class="w-15">Claim Status</th>
                                                    <th class="w-15">Provision Status</th>
                                                    <th class="w-15">Offset Status</th>
                                                    <th class="w-15">MLRe Event Code</th>
                                                    <th class="w-15">Claim Code</th>
                                                    <th class="w-15">MLRe Benefit Code</th>
                                                    <th class="w-15">Ceding Plan Code</th>
                                                    <th class="w-15">Ceding Benefit Risk Code</th>
                                                    <th class="w-15">Ceding Benefit Type Code</th>
                                                    <th class="w-15">Claim Recovery Amount</th>
                                                    <th class="w-15">MLRe Retain Amount</th>
                                                    <th class="w-15">Late Interest</th>
                                                    <th class="w-15">Ex Gratia</th>
                                                    <th class="w-5" colspan="2">Action</th>
                                                    <th class="text-center w-5">
                                                        @Html.CheckBox("SelectAllException", new { @onclick = "selectAllException()" })
                                                    </th>
                                                </tr>
                                                <tr>
                                                    <th>
                                                        @Html.DropDownList("ExceptionHasRedFlag", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionEntryNo", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionSoaQuarter", new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'SOA Quarter', 'ExceptionSoaQuarter')", placeholder = "YYYY MM", autocomplete = "off" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionClaimId", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionClaimTransactionType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ExceptionIsReferralCase", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @*Drop Down Ri Data*@
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionRecordType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionTreatyCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionPolicyNumber", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionCedingCompany", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionInsuredName", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ExceptionInsuredDateOfBirth", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ExceptionInsuredDateOfBirth')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ExceptionLastTransaction", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ExceptionLastTransaction')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ExceptionDateOfReported", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ExceptionDateOfReported')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ExceptionCedantDateOfNotification", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ExceptionCedantDateOfNotification')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ExceptionDateOfRegister", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ExceptionDateOfRegister')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ExceptionDateOfCommencement", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ExceptionDateOfCommencement')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ExceptionDateOfEvent", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ExceptionDateOfEvent')" />
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionSumInsured", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionCauseOfEvent", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ExceptionClaimStatus", (List<SelectListItem>)ViewBag.DropDownClaimStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ExceptionProvisionStatus", (List<SelectListItem>)ViewBag.DropDownProvisionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ExceptionOffsetStatus", (List<SelectListItem>)ViewBag.DropDownOffsetStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionMLReEventCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionClaimCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionMlreBenefitCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionCedingPlanCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionCedingBenefitRiskCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionCedingBenefitTypeCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionClaimRecoveryAmount", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionMlreRetainAmount", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionLateInterest", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ExceptionExGratia", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th class="text-center align-middle">
                                                        <div class="btn-row-action">
                                                            <button type="button" title="Clear" class="btn-circle" onclick="clearException()"><span class="fas fa-backspace" /></button>
                                                            <button type="button" title="Search" class="btn-circle" onclick="filterException()"><span class="fas fa-search" /></button>
                                                        </div>
                                                    </th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (ExceptionList.Count > 0)
                                                {
                                                    foreach (var item in ExceptionList)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.HasRedFlag)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.EntryNo)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SoaQuarter)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimId)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimTransactionType)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.IsReferralCase)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RiDataId)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RecordType)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.TreatyCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyNumber)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingCompany)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.InsuredName)
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.InsuredDateOfBirth.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.InsuredDateOfBirth.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.LastTransactionDate.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.LastTransactionDate.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfReported.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfReported.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.CedantDateOfNotification.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.CedantDateOfNotification.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfRegister.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfRegister.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfIntimation.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfIntimation.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfEvent.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfEvent.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SumIns)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CauseOfEvent)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.ClaimRegisterBo.GetStatusName(item.ClaimRegisterHistory.ClaimStatus)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.ClaimRegisterBo.GetProvisionStatusName(item.ClaimRegisterHistory.ProvisionStatus)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.ClaimRegisterBo.GetOffsetStatusName(item.ClaimRegisterHistory.OffsetStatus)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.MlreEventCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.MlreBenefitCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingPlanCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingBenefitRiskCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingBenefitTypeCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimRecoveryAmt)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.MlreRetainAmount)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.LateInterest)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ExGratia)
                                                            </td>
                                                            <td></td>
                                                            <td></td>
                                                            <td>
                                                                <div class="actionCheckbox" name="selectException">
                                                                    @Html.CheckBox("SelectException", new { id = item.Id })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="28" class="no-data">No available data found.</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                    ViewBag.CurrentPageNumber = ExceptionList.PageNumber;
                                    ViewBag.CurrentPageItems = ExceptionList.Count;
                                    ViewBag.PageSize = ExceptionList.PageSize;
                                    ViewBag.Total = ViewBag.ExceptionListTotal;

                                    <div class="pagination-footer position-relative">
                                        <div class="row">
                                            <div class="col-md-4">
                                                @Html.Partial("_PageInfo")
                                            </div>
                                            <div class="col-md-8" id="RiDetailPager">
                                                @Html.PagedListPager(ExceptionList, Page => Url.Action("Edit", new
                                           {
                                               id = Model.Id,
                                               ExceptionHasRedFlag = exceptionRouteValue["ExceptionHasRedFlag"],
                                               ExceptionEntryNo = exceptionRouteValue["ExceptionEntryNo"],
                                               ExceptionSoaQuarter = exceptionRouteValue["ExceptionSoaQuarter"],
                                               ExceptionClaimId = exceptionRouteValue["ExceptionClaimId"],
                                               ExceptionClaimTransactionType = exceptionRouteValue["ExceptionClaimTransactionType"],
                                               ExceptionIsReferralCase = exceptionRouteValue["ExceptionIsReferralCase"],
                                               ExceptionRiDataId = exceptionRouteValue["ExceptionRiDataId"],
                                               ExceptionRecordType = exceptionRouteValue["ExceptionRecordType"],
                                               ExceptionTreatyCode = exceptionRouteValue["ExceptionTreatyCode"],
                                               ExceptionPolicyNumber = exceptionRouteValue["ExceptionTreatyCode"],
                                               ExceptionCedingCompany = exceptionRouteValue["ExceptionCedingCompany"],
                                               ExceptionInsuredName = exceptionRouteValue["ExceptionInsuredName"],
                                               ExceptionInsuredDateOfBirth = exceptionRouteValue["ExceptionInsuredDateOfBirth"],
                                               ExceptionLastTransaction = exceptionRouteValue["ExceptionLastTransaction"],
                                               ExceptionDateOfReported = exceptionRouteValue["ExceptionDateOfReported"],
                                               ExceptionCedantDateOfNotification = exceptionRouteValue["ExceptionCedantDateOfNotification"],
                                               ExceptionDateOfRegister = exceptionRouteValue["ExceptionDateOfRegister"],
                                               ExceptionDateOfCommencement = exceptionRouteValue["ExceptionDateOfCommencement"],
                                               ExceptionDateOfEvent = exceptionRouteValue["ExceptionDateOfEvent"],
                                               ExceptionSumInsured = exceptionRouteValue["ExceptionSumInsured"],
                                               ExceptionCauseOfEvent = exceptionRouteValue["ExceptionCauseOfEvent"],
                                               ExceptionClaimStatus = exceptionRouteValue["ExceptionClaimStatus"],
                                               ExceptionProvisionStatus = exceptionRouteValue["ExceptionProvisionStatus"],
                                               ExceptionOffsetStatus = exceptionRouteValue["ExceptionOffsetStatus"],
                                               ExceptionMlreEventCode = exceptionRouteValue["ExceptionMlreEventCode"],
                                               ExceptionClaimCode = exceptionRouteValue["ExceptionClaimCode"],
                                               ExceptionMlreBenefitCode = exceptionRouteValue["ExceptionMlreBenefitCode"],
                                               ExceptionCedingPlanCode = exceptionRouteValue["ExceptionCedingPlanCode"],
                                               ExceptionCedingBenefitRiskCode = exceptionRouteValue["ExceptionCedingBenefitRiskCode"],
                                               ExceptionCedingBenefitTypeCode = exceptionRouteValue["ExceptionCedingBenefitTypeCode"],
                                               ExceptionClaimRecoveryAmount = exceptionRouteValue["ExceptionClaimRecoveryAmount"],
                                               ExceptionMlreRetainAmount = exceptionRouteValue["ExceptionMlreRetainAmount"],
                                               ExceptionLateInterest = exceptionRouteValue["ExceptionLateInterest"],
                                               ExceptionExGratia = exceptionRouteValue["ExceptionExGratia"],
                                               Page = Page
                                           }), Shared.Html.GetPagedListRenderOptions())
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="form-row form-row-btn">
                                    <div class="form-group col-md-12 btn-row">
                                        <div class="text-right">
                                            <button type="button" class="btn btn-submit" v-on:click="validateData()">VALIDATE DATA</button>
                                            <button type="button" class="btn btn-submit" v-on:click="processClaimRecovery()">PROCESS CLAIM RECOVERY</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade @(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabClaimRetroData ? "show active" : "")" id="claimRetroData" role="tabpanel" aria-labelledby="claimRetroDataTab-tab">
                                @using (Html.BeginForm("ClaimRetroData", "PerLifeClaim", FormMethod.Get, new { id = "PerLifeClaimClaimRetroDataForm" }))
                                {
                                    <div class="table-responsive mt-3">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th class="text-center align-middle" colspan="21"></th>
                                                    <th class="text-center align-middle" colspan="3">Current Quarter</th>
                                                    <th class="text-center align-middle" colspan="3">Retro Party - RGAL</th>
                                                    <th class="text-center align-middle" colspan="2"></th>
                                                </tr>
                                                <tr class="second-row-header">
                                                    <th class="w-5">Red Flag</th>
                                                    <th class="w-15">Entry No</th>
                                                    <th class="w-15">SOA Quarter</th>
                                                    <th class="w-15">Claim ID</th>
                                                    <th class="w-15">Claim Transaction Type</th>
                                                    <th class="w-15">Referral Case Indicator</th>
                                                    <th class="w-15">RI Data ID</th>
                                                    <th class="w-15">Record Type</th>
                                                    <th class="w-15">Treaty Code</th>
                                                    <th class="w-15">Policy Number</th>
                                                    <th class="w-15">Ceding Company</th>
                                                    <th class="w-15">Insured Name</th>
                                                    <th class="w-15">Insured Date of Birth</th>
                                                    <th class="w-15">Last Transaction Date</th>
                                                    <th class="w-15">Date of Reported</th>
                                                    <th class="w-15">Cedant Date of Notification</th>
                                                    <th class="w-15">Date of Register</th>
                                                    <th class="w-15">Date of Commencement</th>
                                                    <th class="w-15">Date of Event</th>
                                                    <th class="w-15">Sum Insured (MYR)</th>
                                                    <th class="w-15">Cause of Event</th>
                                                    <th class="w-15">Offset Status</th>
                                                    <th class="w-15">Recovered</th>
                                                    <th class="w-15">Claim Category</th>
                                                    <th class="w-15">Recovery Amount</th>
                                                    <th class="w-15">Late Interest</th>
                                                    <th class="w-15">Ex Gratia</th>
                                                    <th class="w-5">Action</th>
                                                    <th class="text-center w-5">
                                                        @Html.CheckBox("SelectAllClaimRetroData", new { @onclick = "selectAllClaimRetroData()" })
                                                    </th>
                                                </tr>
                                                <tr>
                                                    <th>
                                                        @Html.DropDownList("ClaimRetroDataHasRedFlag", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataEntryNo", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataSoaQuarter", new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'SOA Quarter', 'ClaimRetroDataSoaQuarter')", placeholder = "YYYY MM", autocomplete = "off" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataClaimId", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataClaimTransactionType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ClaimRetroDataIsReferralCase", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @*Drop Down Ri Data*@
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataRecordType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataTreatyCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataPolicyNumber", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataCedingCompany", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataInsuredName", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRetroDataInsuredDateOfBirth", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRetroDataInsuredDateOfBirth')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRetroDataLastTransaction", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRetroDataLastTransaction')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRetroDataDateOfReported", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRetroDataDateOfReported')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRetroDataCedantDateOfNotification", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRetroDataCedantDateOfNotification')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRetroDataDateOfRegister", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRetroDataDateOfRegister')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRetroDataDateOfCommencement", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRetroDataDateOfCommencement')" />
                                                    </th>
                                                    <th>
                                                        @Html.TextBox("ClaimRetroDataDateOfEvent", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ClaimRetroDataDateOfEvent')" />
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataSumInsured", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataCauseOfEvent", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.DropDownList("ClaimRetroDataOffsetStatus", (List<SelectListItem>)ViewBag.DropDownOffsetStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataRecovered", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataClaimCategory", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataClaimRecoveryAmount", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataLateInterest", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th>
                                                        @Html.Editor("ClaimRetroDataExGratia", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                    </th>
                                                    <th class="text-center align-middle">
                                                        <div class="btn-row-action">
                                                            <button type="button" title="Clear" class="btn-circle" onclick="clearClaimRetroData()"><span class="fas fa-backspace" /></button>
                                                            <button type="button" title="Search" class="btn-circle" onclick="filterClaimRetroData()"><span class="fas fa-search" /></button>
                                                        </div>
                                                    </th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (ClaimRetroDataList.Count > 0)
                                                {
                                                    foreach (var item in ClaimRetroDataList)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.HasRedFlag)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.EntryNo)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SoaQuarter)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimId)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimTransactionType)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.IsReferralCase)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RiDataId)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RecordType)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.TreatyCode)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyNumber)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingCompany)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.InsuredName)
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.InsuredDateOfBirth.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.InsuredDateOfBirth.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.LastTransactionDate.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.LastTransactionDate.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfReported.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfReported.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.CedantDateOfNotification.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.CedantDateOfNotification.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfRegister.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfRegister.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfIntimation.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfIntimation.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (item.ClaimRegisterHistory.DateOfEvent.HasValue)
                                                                {
                                                                    @item.ClaimRegisterHistory.DateOfEvent.Value.ToString("dd/MM/yyyy")
                                                                }
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SumIns)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CauseOfEvent)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.ClaimRegisterBo.GetOffsetStatusName(item.ClaimRegisterHistory.OffsetStatus)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.Retrocession.PerLifeClaimDataBo.GetClaimRetroDataRecovered(item.ClaimRetroDataCategory, item.SoaQuarter)
                                                            </td>
                                                            <td>
                                                                @BusinessObject.Retrocession.PerLifeClaimDataBo.GetClaimCategoryName(item.ClaimRetroDataCategory)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.RetroClaimRecoveryAmount)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.LateInterest)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.ExGratia)
                                                            </td>
                                                            <td>
                                                                @* Go To Edit Per Life Claim Retro Data *@
                                                                <a v-bind:href="editPerLifeClaimRetroData(@item.PerLifeClaimRetroDataId)" title="Edit Per Life Claim Retro Data">
                                                                    <span class="fas fa-pencil-alt" />
                                                                </a>
                                                            </td>
                                                            <td>
                                                                <div class="actionCheckbox" name="selectClaimRetroData">
                                                                    @Html.CheckBox("SelectClaimRetroData", new { id = item.Id })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="28" class="no-data">No available data found.</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                    ViewBag.CurrentPageNumber = ClaimRetroDataList.PageNumber;
                                    ViewBag.CurrentPageItems = ClaimRetroDataList.Count;
                                    ViewBag.PageSize = ClaimRetroDataList.PageSize;
                                    ViewBag.Total = ViewBag.ClaimRetroDataListTotal;

                                    <div class="pagination-footer position-relative">
                                        <div class="row">
                                            <div class="col-md-4">
                                                @Html.Partial("_PageInfo")
                                            </div>
                                            <div class="col-md-8" id="RiDetailPager">
                                                @Html.PagedListPager(ClaimRetroDataList, Page => Url.Action("Edit", new
                                           {
                                               id = Model.Id,
                                               ClaimRetroDataHasRedFlag = claimRetroDataRouteValue["ClaimRetroDataHasRedFlag"],
                                               ClaimRetroDataEntryNo = claimRetroDataRouteValue["ClaimRetroDataEntryNo"],
                                               ClaimRetroDataSoaQuarter = claimRetroDataRouteValue["ClaimRetroDataSoaQuarter"],
                                               ClaimRetroDataClaimId = claimRetroDataRouteValue["ClaimRetroDataClaimId"],
                                               ClaimRetroDataClaimTransactionType = claimRetroDataRouteValue["ClaimRetroDataClaimTransactionType"],
                                               ClaimRetroDataIsReferralCase = claimRetroDataRouteValue["ClaimRetroDataIsReferralCase"],
                                               ClaimRetroDataRiDataId = claimRetroDataRouteValue["ClaimRetroDataRiDataId"],
                                               ClaimRetroDataRecordType = claimRetroDataRouteValue["ClaimRetroDataRecordType"],
                                               ClaimRetroDataTreatyCode = claimRetroDataRouteValue["ClaimRetroDataTreatyCode"],
                                               ClaimRetroDataPolicyNumber = claimRetroDataRouteValue["ClaimRetroDataPolicyNumber"],
                                               ClaimRetroDataCedingCompany = claimRetroDataRouteValue["ClaimRetroDataCedingCompany"],
                                               ClaimRetroDataInsuredName = claimRetroDataRouteValue["ClaimRetroDataInsuredName"],
                                               ClaimRetroDataInsuredDateOfBirth = claimRetroDataRouteValue["ClaimRetroDataInsuredDateOfBirth"],
                                               ClaimRetroDataLastTransaction = claimRetroDataRouteValue["ClaimRetroDataLastTransaction"],
                                               ClaimRetroDataDateOfReported = claimRetroDataRouteValue["ClaimRetroDataDateOfReported"],
                                               ClaimRetroDataCedantDateOfNotification = claimRetroDataRouteValue["ClaimRetroDataCedantDateOfNotification"],
                                               ClaimRetroDataDateOfRegister = claimRetroDataRouteValue["ClaimRetroDataDateOfRegister"],
                                               ClaimRetroDataDateOfCommencement = claimRetroDataRouteValue["ClaimRetroDataDateOfCommencement"],
                                               ClaimRetroDataDateOfEvent = claimRetroDataRouteValue["ClaimRetroDataDateOfEvent"],
                                               ClaimRetroDataSumInsured = claimRetroDataRouteValue["ClaimRetroDataSumInsured"],
                                               ClaimRetroDataCauseOfEvent = claimRetroDataRouteValue["ClaimRetroDataCauseOfEvent"],
                                               ClaimRetroDataClaimStatus = claimRetroDataRouteValue["ClaimRetroDataClaimStatus"],
                                               ClaimRetroDataProvisionStatus = claimRetroDataRouteValue["ClaimRetroDataProvisionStatus"],
                                               ClaimRetroDataOffsetStatus = claimRetroDataRouteValue["ClaimRetroDataOffsetStatus"],
                                               ClaimRetroDataMlreEventCode = claimRetroDataRouteValue["ClaimRetroDataMlreEventCode"],
                                               ClaimRetroDataClaimCode = claimRetroDataRouteValue["ClaimRetroDataClaimCode"],
                                               ClaimRetroDataMlreBenefitCode = claimRetroDataRouteValue["ClaimRetroDataMlreBenefitCode"],
                                               ClaimRetroDataCedingPlanCode = claimRetroDataRouteValue["ClaimRetroDataCedingPlanCode"],
                                               ClaimRetroDataCedingBenefitRiskCode = claimRetroDataRouteValue["ClaimRetroDataCedingBenefitRiskCode"],
                                               ClaimRetroDataCedingBenefitTypeCode = claimRetroDataRouteValue["ClaimRetroDataCedingBenefitTypeCode"],
                                               ClaimRetroDataClaimRecoveryAmount = claimRetroDataRouteValue["ClaimRetroDataClaimRecoveryAmount"],
                                               ClaimRetroDataMlreRetainAmount = claimRetroDataRouteValue["ClaimRetroDataMlreRetainAmount"],
                                               ClaimRetroDataLateInterest = claimRetroDataRouteValue["ClaimRetroDataLateInterest"],
                                               ClaimRetroDataExGratia = claimRetroDataRouteValue["ClaimRetroDataExGratia"],
                                               Page = Page
                                           }), Shared.Html.GetPagedListRenderOptions())
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="form-row form-row-btn">
                                    <div class="form-group col-md-12 btn-row">
                                        <button type="button" class="btn btn-submit float-right" v-on:click="processClaimRecovery()">PROCESS CLAIM RECOVERY</button>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade @(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummary || Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryPendingClaims || Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryClaimsRemoved ? "show active" : "")" id="summary" role="tabpanel" aria-labelledby="data-tab">
                                <ul class="nav nav-tabs">
                                    <li class="nav-item"><a href="@Url.Action("Summary", "PerLifeClaim", new { id = Model.Id })" class="@(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummary ? "active" : "") underline-tab">Paid Claims</a></li>
                                    <li class="nav-item"><a href="@Url.Action("SummaryPendingClaims", "PerLifeClaim", new { id = Model.Id })" class="@(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryPendingClaims ? "active" : "") underline-tab">Pending Claims</a></li>
                                    <li class="nav-item"><a href="@Url.Action("SummaryClaimsRemoved", "PerLifeClaim", new { id = Model.Id })" class="@(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryClaimsRemoved ? "active" : "") underline-tab">Removed Claims</a></li>
                                </ul>

                                <div class="tab-content underline-tab-content">
                                    <div class="tab-pane fade @(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummary ? "show active" : "")" id="summaryPaidClaimsTab" role="tabpanel" aria-labelledby="summaryPaidClaimsTab-tab">
                                        @using (Html.BeginForm("Summary", "PerLifeClaim", FormMethod.Get, new { id = "PerLifeClaimSummaryPaidClaims" }))
                                        {
                                            <div class="col-md-12 text-right btn-row-inline">
                                                <div class="btn btn-group" style="display:inline-flex;">
                                                    <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        DOWNLOAD AS
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        @Html.ActionLink("All", "PaidClaimsDownload", new { type = 1, id = Model.Id }, new { @class = "dropdown-item", onclick = "startDownload(this)", target = "_blank" })
                                                        @Html.ActionLink("Filtered", "PaidClaimsDownload", new
                                                   {
                                                       type = 2,
                                                       id = Model.Id,
                                                       SummaryPaidClaimHasRedFlag = summaryPaidClaimsRouteValue["SummaryPaidClaimsHasRedFlag"],
                                                       SummaryPaidClaimEntryNo = summaryPaidClaimsRouteValue["SummaryPaidClaimsEntryNo"],
                                                       SummaryPaidClaimSoaQuarter = summaryPaidClaimsRouteValue["SummaryPaidClaimsSoaQuarter"],
                                                       SummaryPaidClaimClaimId = summaryPaidClaimsRouteValue["SummaryPaidClaimsClaimId"],
                                                       SummaryPaidClaimClaimTransactionType = summaryPaidClaimsRouteValue["SummaryPaidClaimsClaimTransactionType"],
                                                       SummaryPaidClaimIsReferralCase = summaryPaidClaimsRouteValue["SummaryPaidClaimsIsReferralCase"],
                                                       SummaryPaidClaimRiDataId = summaryPaidClaimsRouteValue["SummaryPaidClaimsRiDataId"],
                                                       SummaryPaidClaimRecordType = summaryPaidClaimsRouteValue["SummaryPaidClaimsRecordType"],
                                                       SummaryPaidClaimTreatyCode = summaryPaidClaimsRouteValue["SummaryPaidClaimsTreatyCode"],
                                                       SummaryPaidClaimPolicyNumber = summaryPaidClaimsRouteValue["SummaryPaidClaimsPolicyNumber"],
                                                       SummaryPaidClaimCedingCompany = summaryPaidClaimsRouteValue["SummaryPaidClaimsCedingCompany"],
                                                       SummaryPaidClaimInsuredName = summaryPaidClaimsRouteValue["SummaryPaidClaimsInsuredName"],
                                                       SummaryPaidClaimInsuredDateOfBirth = summaryPaidClaimsRouteValue["SummaryPaidClaimsInsuredDateOfBirth"],
                                                       SummaryPaidClaimLastTransaction = summaryPaidClaimsRouteValue["SummaryPaidClaimsLastTransaction"],
                                                       SummaryPaidClaimDateOfReported = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfReported"],
                                                       SummaryPaidClaimCedantDateOfNotification = summaryPaidClaimsRouteValue["SummaryPaidClaimsCedantDateOfNotification"],
                                                       SummaryPaidClaimDateOfRegister = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfRegister"],
                                                       SummaryPaidClaimDateOfCommencement = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfCommencement"],
                                                       SummaryPaidClaimDateOfEvent = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfEvent"],
                                                       SummaryPaidClaimSumInsured = summaryPaidClaimsRouteValue["SummaryPaidClaimsSumInsured"],
                                                       SummaryPaidClaimCauseOfEvent = summaryPaidClaimsRouteValue["SummaryPaidClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPolicyDuration = summaryPaidClaimsRouteValue["SummaryPaidClaimsPolicyDuration"],
                                                       SummaryClaimsRemovedTargetDateToIssueInvoice = summaryPaidClaimsRouteValue["SummaryPaidClaimsTargetDateToIssueInvoice"],
                                                       SummaryClaimsRemovedSumReinsured = summaryPaidClaimsRouteValue["SummaryPaidClaimsSumReinsured"],
                                                       SummaryClaimsRemovedCauseOfEvent = summaryPaidClaimsRouteValue["SummaryPaidClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPicClaims = summaryPaidClaimsRouteValue["SummaryPaidClaimsPicClaims"],
                                                       SummaryClaimsRemovedPicDaa = summaryPaidClaimsRouteValue["SummaryPaidClaimsPicDaa"],
                                                       SummaryPaidClaimClaimStatus = summaryPaidClaimsRouteValue["SummaryPaidClaimsClaimStatus"],
                                                       SummaryPaidClaimProvisionStatus = summaryPaidClaimsRouteValue["SummaryPaidClaimsProvisionStatus"],
                                                       SummaryPaidClaimOffsetStatus = summaryPaidClaimsRouteValue["SummaryPaidClaimsOffsetStatus"],
                                                   }, new { @class = "dropdown-item", onclick = "startDownload(this)", target = "_blank" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="table-responsive mt-3">
                                                <table class="table table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th class="w-5">Red Flag</th>
                                                            <th class="w-15">Entry No</th>
                                                            <th class="w-15">SOA Quarter</th>
                                                            <th class="w-15">Claim ID</th>
                                                            <th class="w-15">Claim Type</th>
                                                            <th class="w-15">Referral Case</th>
                                                            <th class="w-15">RI Data</th>
                                                            <th class="w-15">Record Type</th>
                                                            <th class="w-15">Treaty Code</th>
                                                            <th class="w-15">Policy No</th>
                                                            <th class="w-15">Ceding Company</th>
                                                            <th class="w-15">Assured Name</th>
                                                            <th class="w-15">Date of Birth</th>
                                                            <th class="w-15">Date of Transaction</th>
                                                            <th class="w-15">Date of Report</th>
                                                            <th class="w-15">Date Notified</th>
                                                            <th class="w-15">Date Registered</th>
                                                            <th class="w-15">Date of Commencement</th>
                                                            <th class="w-15">Date of Event</th>
                                                            <th class="w-15">Policy Duration</th>
                                                            <th class="w-15">Target Date to Issue Invoice</th>
                                                            <th class="w-15">Sum Reinsured (MYR)</th>
                                                            <th class="w-15">Cause of Event</th>
                                                            <th class="w-15">Person In-Charge (Claims)</th>
                                                            <th class="w-15">Person In-Charge (DA&A)</th>
                                                            <th class="w-15">Status</th>
                                                            <th class="w-15">Provision Status</th>
                                                            <th class="w-15">Offset Status</th>
                                                            <th class="w-5">Action</th>
                                                            <th class="text-center w-5">
                                                                @Html.CheckBox("SelectAllSummaryPaidClaims", new { @onclick = "selectAllSummaryPaidClaims()" })
                                                            </th>
                                                        </tr>
                                                        <tr>
                                                            <th>
                                                                @Html.DropDownList("SummaryPaidClaimsHasRedFlag", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsEntryNo", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsSoaQuarter", new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'SOA Quarter', 'SummaryPaidClaimsSoaQuarter')", placeholder = "YYYY MM", autocomplete = "off" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsClaimId", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsClaimTransactionType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPaidClaimsIsReferralCase", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @*Drop Down Ri Data*@
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsRecordType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsTreatyCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsPolicyNumber", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsCedingCompany", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsInsuredName", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsInsuredDateOfBirth", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsInsuredDateOfBirth')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsLastTransaction", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsLastTransaction')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsDateOfReported", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsDateOfReported')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsCedantDateOfNotification", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsCedantDateOfNotification')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsDateOfRegister", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsDateOfRegister')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsDateOfCommencement", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsDateOfCommencement')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsDateOfEvent", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsDateOfEvent')" />
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsPolicyDuration", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", type = "number" } })
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPaidClaimsTargetDateToIssueInvoice", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPaidClaimsTargetDateToIssueInvoice')" />
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsSumReinsured", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPaidClaimsCauseOfEvent", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPaidClaimsPicClaims", (List<SelectListItem>)ViewBag.DropDownPicClaims, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPaidClaimsPicDaa", (List<SelectListItem>)ViewBag.DropDownPicDaa, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPaidClaimsClaimStatus", (List<SelectListItem>)ViewBag.DropDownClaimStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPaidClaimsProvisionStatus", (List<SelectListItem>)ViewBag.DropDownProvisionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPaidClaimsOffsetStatus", (List<SelectListItem>)ViewBag.DropDownOffsetStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th class="text-center align-middle">
                                                                <div class="btn-row-action">
                                                                    <button type="button" title="Clear" class="btn-circle" onclick="clearSummaryPaidClaims()"><span class="fas fa-backspace" /></button>
                                                                    <button type="button" title="Search" class="btn-circle" onclick="filterSummaryPaidClaims()"><span class="fas fa-search" /></button>
                                                                </div>
                                                            </th>
                                                            <th>
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (SummaryPaidClaimsList.Count > 0)
                                                        {
                                                            foreach (var item in SummaryPaidClaimsList)
                                                            {
                                                                <tr>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.HasRedFlag)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.EntryNo)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SoaQuarter)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimId)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimTransactionType)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.IsReferralCase)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RiDataId)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RecordType)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.TreatyCode)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyNumber)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingCompany)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.InsuredName)
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.InsuredDateOfBirth.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.InsuredDateOfBirth.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.LastTransactionDate.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.LastTransactionDate.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfReported.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfReported.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.CedantDateOfNotification.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.CedantDateOfNotification.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfRegister.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfRegister.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfIntimation.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfIntimation.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfEvent.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfEvent.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyDuration)
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.TargetDateToIssueInvoice.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.TargetDateToIssueInvoice.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.Layer1SumRein)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CauseOfEvent)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimRegister.PicClaim.FullName)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimRegister.PicDaa.FullName)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetStatusName(item.ClaimRegisterHistory.ClaimStatus)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetProvisionStatusName(item.ClaimRegisterHistory.ProvisionStatus)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetOffsetStatusName(item.ClaimRegisterHistory.OffsetStatus)
                                                                    </td>
                                                                    <td></td>
                                                                    <td></td>
                                                                    <td>
                                                                        <div class="actionCheckbox" name="selectSummaryPaidClaims">
                                                                            @Html.CheckBox("SelectSummaryPaidClaims", new { id = item.Id })
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr>
                                                                <td colspan="28" class="no-data">No available data found.</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>

                                            ViewBag.CurrentPageNumber = SummaryPaidClaimsList.PageNumber;
                                            ViewBag.CurrentPageItems = SummaryPaidClaimsList.Count;
                                            ViewBag.PageSize = SummaryPaidClaimsList.PageSize;
                                            ViewBag.Total = ViewBag.SummaryPaidClaimsListTotal;

                                            <div class="pagination-footer position-relative">
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        @Html.Partial("_PageInfo")
                                                    </div>
                                                    <div class="col-md-8" id="RiDetailPager">
                                                        @Html.PagedListPager(SummaryPaidClaimsList, Page => Url.Action("Edit", new
                                                   {
                                                       id = Model.Id,
                                                       SummaryPaidClaimHasRedFlag = summaryPaidClaimsRouteValue["SummaryPaidClaimsHasRedFlag"],
                                                       SummaryPaidClaimEntryNo = summaryPaidClaimsRouteValue["SummaryPaidClaimsEntryNo"],
                                                       SummaryPaidClaimSoaQuarter = summaryPaidClaimsRouteValue["SummaryPaidClaimsSoaQuarter"],
                                                       SummaryPaidClaimClaimId = summaryPaidClaimsRouteValue["SummaryPaidClaimsClaimId"],
                                                       SummaryPaidClaimClaimTransactionType = summaryPaidClaimsRouteValue["SummaryPaidClaimsClaimTransactionType"],
                                                       SummaryPaidClaimIsReferralCase = summaryPaidClaimsRouteValue["SummaryPaidClaimsIsReferralCase"],
                                                       SummaryPaidClaimRiDataId = summaryPaidClaimsRouteValue["SummaryPaidClaimsRiDataId"],
                                                       SummaryPaidClaimRecordType = summaryPaidClaimsRouteValue["SummaryPaidClaimsRecordType"],
                                                       SummaryPaidClaimTreatyCode = summaryPaidClaimsRouteValue["SummaryPaidClaimsTreatyCode"],
                                                       SummaryPaidClaimPolicyNumber = summaryPaidClaimsRouteValue["SummaryPaidClaimsPolicyNumber"],
                                                       SummaryPaidClaimCedingCompany = summaryPaidClaimsRouteValue["SummaryPaidClaimsCedingCompany"],
                                                       SummaryPaidClaimInsuredName = summaryPaidClaimsRouteValue["SummaryPaidClaimsInsuredName"],
                                                       SummaryPaidClaimInsuredDateOfBirth = summaryPaidClaimsRouteValue["SummaryPaidClaimsInsuredDateOfBirth"],
                                                       SummaryPaidClaimLastTransaction = summaryPaidClaimsRouteValue["SummaryPaidClaimsLastTransaction"],
                                                       SummaryPaidClaimDateOfReported = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfReported"],
                                                       SummaryPaidClaimCedantDateOfNotification = summaryPaidClaimsRouteValue["SummaryPaidClaimsCedantDateOfNotification"],
                                                       SummaryPaidClaimDateOfRegister = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfRegister"],
                                                       SummaryPaidClaimDateOfCommencement = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfCommencement"],
                                                       SummaryPaidClaimDateOfEvent = summaryPaidClaimsRouteValue["SummaryPaidClaimsDateOfEvent"],
                                                       SummaryPaidClaimSumInsured = summaryPaidClaimsRouteValue["SummaryPaidClaimsSumInsured"],
                                                       SummaryPaidClaimCauseOfEvent = summaryPaidClaimsRouteValue["SummaryPaidClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPolicyDuration = summaryPaidClaimsRouteValue["SummaryPaidClaimsPolicyDuration"],
                                                       SummaryClaimsRemovedTargetDateToIssueInvoice = summaryPaidClaimsRouteValue["SummaryPaidClaimsTargetDateToIssueInvoice"],
                                                       SummaryClaimsRemovedSumReinsured = summaryPaidClaimsRouteValue["SummaryPaidClaimsSumReinsured"],
                                                       SummaryClaimsRemovedCauseOfEvent = summaryPaidClaimsRouteValue["SummaryPaidClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPicClaims = summaryPaidClaimsRouteValue["SummaryPaidClaimsPicClaims"],
                                                       SummaryClaimsRemovedPicDaa = summaryPaidClaimsRouteValue["SummaryPaidClaimsPicDaa"],
                                                       SummaryPaidClaimClaimStatus = summaryPaidClaimsRouteValue["SummaryPaidClaimsClaimStatus"],
                                                       SummaryPaidClaimProvisionStatus = summaryPaidClaimsRouteValue["SummaryPaidClaimsProvisionStatus"],
                                                       SummaryPaidClaimOffsetStatus = summaryPaidClaimsRouteValue["SummaryPaidClaimsOffsetStatus"],
                                                       Page = Page
                                                   }), Shared.Html.GetPagedListRenderOptions())
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @{if (ViewBag.Status == BusinessObject.Retrocession.PerLifeClaimBo.StatusProcessingRetroRecoverySuccess)
                                            {
                                                <div class="form-row form-row-btn">
                                                    <div class="form-group col-md-12 btn-row">
                                                        <button type="button" class="btn btn-submit float-right" v-on:click="processFinalise()">FINALISE</button>
                                                    </div>
                                                </div>

                                            }
                                        }
                                    </div>

                                    <div class="tab-pane fade @(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryPendingClaims ? "show active" : "")" id="summaryPaidClaimsTab" role="tabpanel" aria-labelledby="summaryPaidClaimsTab-tab">
                                        @using (Html.BeginForm("SummaryPendingClaims", "PerLifeClaim", FormMethod.Get, new { id = "PerLifeClaimSummaryPendingClaims" }))
                                        {
                                            <div class="col-md-12 text-right btn-row-inline">
                                                <div class="btn btn-group" style="display:inline-flex;">
                                                    <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        DOWNLOAD AS
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        @Html.ActionLink("All", "PendingClaimsDownload", new { type = 1, id = Model.Id }, new { @class = "dropdown-item", onclick = "startDownload(this)", target = "_blank" })
                                                        @Html.ActionLink("Filtered", "PendingClaimsDownload", new
                                                   {
                                                       type = 2,
                                                       id = Model.Id,
                                                       SummaryPaidClaimHasRedFlag = summaryPendingClaimsRouteValue["SummaryPendingClaimsHasRedFlag"],
                                                       SummaryPaidClaimEntryNo = summaryPendingClaimsRouteValue["SummaryPendingClaimsEntryNo"],
                                                       SummaryPendingClaimsoaQuarter = summaryPendingClaimsRouteValue["SummaryPendingClaimsSoaQuarter"],
                                                       SummaryPaidClaimClaimId = summaryPendingClaimsRouteValue["SummaryPendingClaimsClaimId"],
                                                       SummaryPaidClaimClaimTransactionType = summaryPendingClaimsRouteValue["SummaryPendingClaimsClaimTransactionType"],
                                                       SummaryPaidClaimIsReferralCase = summaryPendingClaimsRouteValue["SummaryPendingClaimsIsReferralCase"],
                                                       SummaryPaidClaimRiDataId = summaryPendingClaimsRouteValue["SummaryPendingClaimsRiDataId"],
                                                       SummaryPaidClaimRecordType = summaryPendingClaimsRouteValue["SummaryPendingClaimsRecordType"],
                                                       SummaryPaidClaimTreatyCode = summaryPendingClaimsRouteValue["SummaryPendingClaimsTreatyCode"],
                                                       SummaryPaidClaimPolicyNumber = summaryPendingClaimsRouteValue["SummaryPendingClaimsPolicyNumber"],
                                                       SummaryPaidClaimCedingCompany = summaryPendingClaimsRouteValue["SummaryPendingClaimsCedingCompany"],
                                                       SummaryPaidClaimInsuredName = summaryPendingClaimsRouteValue["SummaryPendingClaimsInsuredName"],
                                                       SummaryPaidClaimInsuredDateOfBirth = summaryPendingClaimsRouteValue["SummaryPendingClaimsInsuredDateOfBirth"],
                                                       SummaryPaidClaimLastTransaction = summaryPendingClaimsRouteValue["SummaryPendingClaimsLastTransaction"],
                                                       SummaryPaidClaimDateOfReported = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfReported"],
                                                       SummaryPaidClaimCedantDateOfNotification = summaryPendingClaimsRouteValue["SummaryPendingClaimsCedantDateOfNotification"],
                                                       SummaryPaidClaimDateOfRegister = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfRegister"],
                                                       SummaryPaidClaimDateOfCommencement = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfCommencement"],
                                                       SummaryPaidClaimDateOfEvent = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfEvent"],
                                                       SummaryPendingClaimsumInsured = summaryPendingClaimsRouteValue["SummaryPendingClaimsSumInsured"],
                                                       SummaryPaidClaimCauseOfEvent = summaryPendingClaimsRouteValue["SummaryPendingClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPolicyDuration = summaryPendingClaimsRouteValue["SummaryPendingClaimsPolicyDuration"],
                                                       SummaryClaimsRemovedTargetDateToIssueInvoice = summaryPendingClaimsRouteValue["SummaryPendingClaimsTargetDateToIssueInvoice"],
                                                       SummaryClaimsRemovedSumReinsured = summaryPendingClaimsRouteValue["SummaryPendingClaimsSumReinsured"],
                                                       SummaryClaimsRemovedCauseOfEvent = summaryPendingClaimsRouteValue["SummaryPendingClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPicClaims = summaryPendingClaimsRouteValue["SummaryPendingClaimsPicClaims"],
                                                       SummaryClaimsRemovedPicDaa = summaryPendingClaimsRouteValue["SummaryPendingClaimsPicDaa"],
                                                       SummaryPaidClaimClaimStatus = summaryPendingClaimsRouteValue["SummaryPendingClaimsClaimStatus"],
                                                       SummaryPaidClaimProvisionStatus = summaryPendingClaimsRouteValue["SummaryPendingClaimsProvisionStatus"],
                                                       SummaryPaidClaimOffsetStatus = summaryPendingClaimsRouteValue["SummaryPendingClaimsOffsetStatus"],
                                                   }, new { @class = "dropdown-item", onclick = "startDownload(this)", target = "_blank" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="table-responsive mt-3">
                                                <table class="table table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th class="w-5">Red Flag</th>
                                                            <th class="w-15">Entry No</th>
                                                            <th class="w-15">SOA Quarter</th>
                                                            <th class="w-15">Claim ID</th>
                                                            <th class="w-15">Claim Type</th>
                                                            <th class="w-15">Referral Case</th>
                                                            <th class="w-15">RI Data</th>
                                                            <th class="w-15">Record Type</th>
                                                            <th class="w-15">Treaty Code</th>
                                                            <th class="w-15">Policy No</th>
                                                            <th class="w-15">Ceding Company</th>
                                                            <th class="w-15">Assured Name</th>
                                                            <th class="w-15">Date of Birth</th>
                                                            <th class="w-15">Date of Transaction</th>
                                                            <th class="w-15">Date of Report</th>
                                                            <th class="w-15">Date Notified</th>
                                                            <th class="w-15">Date Registered</th>
                                                            <th class="w-15">Date of Commencement</th>
                                                            <th class="w-15">Date of Event</th>
                                                            <th class="w-15">Policy Duration</th>
                                                            <th class="w-15">Target Date to Issue Invoice</th>
                                                            <th class="w-15">Sum Reinsured (MYR)</th>
                                                            <th class="w-15">Cause of Event</th>
                                                            <th class="w-15">Person In-Charge (Claims)</th>
                                                            <th class="w-15">Person In-Charge (DA&A)</th>
                                                            <th class="w-15">Status</th>
                                                            <th class="w-15">Provision Status</th>
                                                            <th class="w-15">Offset Status</th>
                                                            <th class="w-5">Action</th>
                                                            <th class="text-center w-5">
                                                                @Html.CheckBox("SelectAllSummaryPendingClaims", new { @onclick = "selectAllSummaryPendingClaims()" })
                                                            </th>
                                                        </tr>
                                                        <tr>
                                                            <th>
                                                                @Html.DropDownList("SummaryPendingClaimsHasRedFlag", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsEntryNo", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsSoaQuarter", new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'SOA Quarter', 'SummaryPendingClaimsSoaQuarter')", placeholder = "YYYY MM", autocomplete = "off" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsClaimId", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsClaimTransactionType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPendingClaimsIsReferralCase", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @*Drop Down Ri Data*@
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsRecordType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsTreatyCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsPolicyNumber", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsCedingCompany", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsInsuredName", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsInsuredDateOfBirth", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsInsuredDateOfBirth')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsLastTransaction", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsLastTransaction')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsDateOfReported", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsDateOfReported')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsCedantDateOfNotification", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsCedantDateOfNotification')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsDateOfRegister", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsDateOfRegister')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsDateOfCommencement", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsDateOfCommencement')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsDateOfEvent", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsDateOfEvent')" />
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsPolicyDuration", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", type = "number" } })
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryPendingClaimsTargetDateToIssueInvoice", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryPendingClaimsTargetDateToIssueInvoice')" />
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsSumReinsured", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryPendingClaimsCauseOfEvent", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPendingClaimsPicClaims", (List<SelectListItem>)ViewBag.DropDownPicClaims, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPendingClaimsPicDaa", (List<SelectListItem>)ViewBag.DropDownPicDaa, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPendingClaimsClaimStatus", (List<SelectListItem>)ViewBag.DropDownClaimStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPendingClaimsProvisionStatus", (List<SelectListItem>)ViewBag.DropDownProvisionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryPendingClaimsOffsetStatus", (List<SelectListItem>)ViewBag.DropDownOffsetStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th class="text-center align-middle">
                                                                <div class="btn-row-action">
                                                                    <button type="button" title="Clear" class="btn-circle" onclick="clearSummaryPendingClaims()"><span class="fas fa-backspace" /></button>
                                                                    <button type="button" title="Search" class="btn-circle" onclick="filterSummaryPendingClaims()"><span class="fas fa-search" /></button>
                                                                </div>
                                                            </th>
                                                            <th>
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (SummaryPendingClaimsList.Count > 0)
                                                        {
                                                            foreach (var item in SummaryPendingClaimsList)
                                                            {
                                                                <tr>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.HasRedFlag)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.EntryNo)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SoaQuarter)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimId)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimTransactionType)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.IsReferralCase)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RiDataId)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RecordType)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.TreatyCode)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyNumber)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingCompany)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.InsuredName)
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.InsuredDateOfBirth.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.InsuredDateOfBirth.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.LastTransactionDate.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.LastTransactionDate.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfReported.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfReported.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.CedantDateOfNotification.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.CedantDateOfNotification.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfRegister.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfRegister.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfIntimation.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfIntimation.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfEvent.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfEvent.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyDuration)
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.TargetDateToIssueInvoice.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.TargetDateToIssueInvoice.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.Layer1SumRein)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CauseOfEvent)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimRegister.PicClaim.FullName)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimRegister.PicDaa.FullName)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetStatusName(item.ClaimRegisterHistory.ClaimStatus)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetProvisionStatusName(item.ClaimRegisterHistory.ProvisionStatus)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetOffsetStatusName(item.ClaimRegisterHistory.OffsetStatus)
                                                                    </td>
                                                                    <td></td>
                                                                    <td></td>
                                                                    <td>
                                                                        <div class="actionCheckbox" name="selectSummaryPendingClaims">
                                                                            @Html.CheckBox("SelectSummaryPendingClaims", new { id = item.Id })
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr>
                                                                <td colspan="28" class="no-data">No available data found.</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>

                                            ViewBag.CurrentPageNumber = SummaryPendingClaimsList.PageNumber;
                                            ViewBag.CurrentPageItems = SummaryPendingClaimsList.Count;
                                            ViewBag.PageSize = SummaryPendingClaimsList.PageSize;
                                            ViewBag.Total = ViewBag.SummaryPendingClaimsListTotal;

                                            <div class="pagination-footer position-relative">
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        @Html.Partial("_PageInfo")
                                                    </div>
                                                    <div class="col-md-8" id="RiDetailPager">
                                                        @Html.PagedListPager(SummaryPendingClaimsList, Page => Url.Action("Edit", new
                                                   {
                                                       id = Model.Id,
                                                       SummaryPaidClaimHasRedFlag = summaryPendingClaimsRouteValue["SummaryPendingClaimsHasRedFlag"],
                                                       SummaryPaidClaimEntryNo = summaryPendingClaimsRouteValue["SummaryPendingClaimsEntryNo"],
                                                       SummaryPendingClaimsoaQuarter = summaryPendingClaimsRouteValue["SummaryPendingClaimsSoaQuarter"],
                                                       SummaryPaidClaimClaimId = summaryPendingClaimsRouteValue["SummaryPendingClaimsClaimId"],
                                                       SummaryPaidClaimClaimTransactionType = summaryPendingClaimsRouteValue["SummaryPendingClaimsClaimTransactionType"],
                                                       SummaryPaidClaimIsReferralCase = summaryPendingClaimsRouteValue["SummaryPendingClaimsIsReferralCase"],
                                                       SummaryPaidClaimRiDataId = summaryPendingClaimsRouteValue["SummaryPendingClaimsRiDataId"],
                                                       SummaryPaidClaimRecordType = summaryPendingClaimsRouteValue["SummaryPendingClaimsRecordType"],
                                                       SummaryPaidClaimTreatyCode = summaryPendingClaimsRouteValue["SummaryPendingClaimsTreatyCode"],
                                                       SummaryPaidClaimPolicyNumber = summaryPendingClaimsRouteValue["SummaryPendingClaimsPolicyNumber"],
                                                       SummaryPaidClaimCedingCompany = summaryPendingClaimsRouteValue["SummaryPendingClaimsCedingCompany"],
                                                       SummaryPaidClaimInsuredName = summaryPendingClaimsRouteValue["SummaryPendingClaimsInsuredName"],
                                                       SummaryPaidClaimInsuredDateOfBirth = summaryPendingClaimsRouteValue["SummaryPendingClaimsInsuredDateOfBirth"],
                                                       SummaryPaidClaimLastTransaction = summaryPendingClaimsRouteValue["SummaryPendingClaimsLastTransaction"],
                                                       SummaryPaidClaimDateOfReported = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfReported"],
                                                       SummaryPaidClaimCedantDateOfNotification = summaryPendingClaimsRouteValue["SummaryPendingClaimsCedantDateOfNotification"],
                                                       SummaryPaidClaimDateOfRegister = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfRegister"],
                                                       SummaryPaidClaimDateOfCommencement = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfCommencement"],
                                                       SummaryPaidClaimDateOfEvent = summaryPendingClaimsRouteValue["SummaryPendingClaimsDateOfEvent"],
                                                       SummaryPendingClaimsumInsured = summaryPendingClaimsRouteValue["SummaryPendingClaimsSumInsured"],
                                                       SummaryPaidClaimCauseOfEvent = summaryPendingClaimsRouteValue["SummaryPendingClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPolicyDuration = summaryPendingClaimsRouteValue["SummaryPendingClaimsPolicyDuration"],
                                                       SummaryClaimsRemovedTargetDateToIssueInvoice = summaryPendingClaimsRouteValue["SummaryPendingClaimsTargetDateToIssueInvoice"],
                                                       SummaryClaimsRemovedSumReinsured = summaryPendingClaimsRouteValue["SummaryPendingClaimsSumReinsured"],
                                                       SummaryClaimsRemovedCauseOfEvent = summaryPendingClaimsRouteValue["SummaryPendingClaimsCauseOfEvent"],
                                                       SummaryClaimsRemovedPicClaims = summaryPendingClaimsRouteValue["SummaryPendingClaimsPicClaims"],
                                                       SummaryClaimsRemovedPicDaa = summaryPendingClaimsRouteValue["SummaryPendingClaimsPicDaa"],
                                                       SummaryPaidClaimClaimStatus = summaryPendingClaimsRouteValue["SummaryPendingClaimsClaimStatus"],
                                                       SummaryPaidClaimProvisionStatus = summaryPendingClaimsRouteValue["SummaryPendingClaimsProvisionStatus"],
                                                       SummaryPaidClaimOffsetStatus = summaryPendingClaimsRouteValue["SummaryPendingClaimsOffsetStatus"],
                                                       Page = Page
                                                   }), Shared.Html.GetPagedListRenderOptions())
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @{if (ViewBag.Status == BusinessObject.Retrocession.PerLifeClaimBo.StatusFinalised)
                                            {
                                                <div class="form-row form-row-btn">
                                                    <div class="form-group col-md-12 btn-row">
                                                        <button type="button" class="btn btn-submit float-right" v-on:click="processFinalise()">FINALISE</button>
                                                    </div>
                                                </div>

                                            }
                                        }
                                    </div>

                                    <div class="tab-pane fade @(Model.ActiveTab == BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabSummaryClaimsRemoved ? "show active" : "")" id="summaryClaimsRemovedsTab" role="tabpanel" aria-labelledby="summaryClaimsRemovedsTab-tab">
                                        @using (Html.BeginForm("SummaryClaimsRemoved", "PerLifeClaim", FormMethod.Get, new { id = "PerLifeClaimSummaryClaimsRemoved" }))
                                        {
                                            <div class="col-md-12 text-right btn-row-inline">
                                                <div class="btn btn-group" style="display:inline-flex;">
                                                    <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        DOWNLOAD AS
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        @Html.ActionLink("All", "ClaimsRemovedDownload", new { type = 1, id = Model.Id }, new { @class = "dropdown-item", onclick = "startDownload(this)", target = "_blank" })
                                                        @Html.ActionLink("Filtered", "ClaimsRemovedDownload", new
                                                   {
                                                       type = 2,
                                                       id = Model.Id,
                                                       SummaryPaidClaimHasRedFlag = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedHasRedFlag"],
                                                       SummaryPaidClaimEntryNo = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedEntryNo"],
                                                       SummaryClaimsRemovedoaQuarter = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedSoaQuarter"],
                                                       SummaryPaidClaimClaimId = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedClaimId"],
                                                       SummaryPaidClaimClaimTransactionType = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedClaimTransactionType"],
                                                       SummaryPaidClaimIsReferralCase = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedIsReferralCase"],
                                                       SummaryPaidClaimRiDataId = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedRiDataId"],
                                                       SummaryPaidClaimRecordType = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedRecordType"],
                                                       SummaryPaidClaimTreatyCode = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedTreatyCode"],
                                                       SummaryPaidClaimPolicyNumber = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPolicyNumber"],
                                                       SummaryPaidClaimCedingCompany = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCedingCompany"],
                                                       SummaryPaidClaimInsuredName = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedInsuredName"],
                                                       SummaryPaidClaimInsuredDateOfBirth = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedInsuredDateOfBirth"],
                                                       SummaryPaidClaimLastTransaction = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedLastTransaction"],
                                                       SummaryPaidClaimDateOfReported = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfReported"],
                                                       SummaryPaidClaimCedantDateOfNotification = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCedantDateOfNotification"],
                                                       SummaryPaidClaimDateOfRegister = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfRegister"],
                                                       SummaryPaidClaimDateOfCommencement = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfCommencement"],
                                                       SummaryPaidClaimDateOfEvent = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfEvent"],
                                                       SummaryClaimsRemovedumInsured = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedSumInsured"],
                                                       SummaryPaidClaimCauseOfEvent = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCauseOfEvent"],
                                                       SummaryClaimsRemovedPolicyDuration = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPolicyDuration"],
                                                       SummaryClaimsRemovedTargetDateToIssueInvoice = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedTargetDateToIssueInvoice"],
                                                       SummaryClaimsRemovedSumReinsured = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedSumReinsured"],
                                                       SummaryClaimsRemovedCauseOfEvent = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCauseOfEvent"],
                                                       SummaryClaimsRemovedPicClaims = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPicClaims"],
                                                       SummaryClaimsRemovedPicDaa = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPicDaa"],
                                                       SummaryPaidClaimClaimStatus = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedClaimStatus"],
                                                       SummaryPaidClaimProvisionStatus = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedProvisionStatus"],
                                                       SummaryPaidClaimOffsetStatus = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedOffsetStatus"],
                                                   }, new { @class = "dropdown-item", onclick = "startDownload(this)", target = "_blank" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="table-responsive mt-3">
                                                <table class="table table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th class="w-5">Red Flag</th>
                                                            <th class="w-15">Entry No</th>
                                                            <th class="w-15">SOA Quarter</th>
                                                            <th class="w-15">Claim ID</th>
                                                            <th class="w-15">Claim Type</th>
                                                            <th class="w-15">Referral Case</th>
                                                            <th class="w-15">RI Data</th>
                                                            <th class="w-15">Record Type</th>
                                                            <th class="w-15">Treaty Code</th>
                                                            <th class="w-15">Policy No</th>
                                                            <th class="w-15">Ceding Company</th>
                                                            <th class="w-15">Assured Name</th>
                                                            <th class="w-15">Date of Birth</th>
                                                            <th class="w-15">Date of Transaction</th>
                                                            <th class="w-15">Date of Report</th>
                                                            <th class="w-15">Date Notified</th>
                                                            <th class="w-15">Date Registered</th>
                                                            <th class="w-15">Date of Commencement</th>
                                                            <th class="w-15">Date of Event</th>
                                                            <th class="w-15">Policy Duration</th>
                                                            <th class="w-15">Target Date to Issue Invoice</th>
                                                            <th class="w-15">Sum Reinsured (MYR)</th>
                                                            <th class="w-15">Cause of Event</th>
                                                            <th class="w-15">Person In-Charge (Claims)</th>
                                                            <th class="w-15">Person In-Charge (DA&A)</th>
                                                            <th class="w-15">Status</th>
                                                            <th class="w-15">Provision Status</th>
                                                            <th class="w-15">Offset Status</th>
                                                            <th class="w-5">Action</th>
                                                            <th class="text-center w-5">
                                                                @Html.CheckBox("SelectAllSummaryClaimsRemoved", new { @onclick = "selectAllSummaryClaimsRemoved()" })
                                                            </th>
                                                        </tr>
                                                        <tr>
                                                            <th>
                                                                @Html.DropDownList("SummaryClaimsRemovedHasRedFlag", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedEntryNo", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedSoaQuarter", new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'SOA Quarter', 'SummaryClaimsRemovedSoaQuarter')", placeholder = "YYYY MM", autocomplete = "off" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedClaimId", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedClaimTransactionType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryClaimsRemovedIsReferralCase", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @*Drop Down Ri Data*@
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedRecordType", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedTreatyCode", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedPolicyNumber", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedCedingCompany", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedInsuredName", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedInsuredDateOfBirth", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedInsuredDateOfBirth')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedLastTransaction", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedLastTransaction')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedDateOfReported", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedDateOfReported')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedCedantDateOfNotification", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedCedantDateOfNotification')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedDateOfRegister", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedDateOfRegister')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedDateOfCommencement", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedDateOfCommencement')" />
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedDateOfEvent", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedDateOfEvent')" />
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedPolicyDuration", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", type = "number" } })
                                                            </th>
                                                            <th>
                                                                @Html.TextBox("SummaryClaimsRemovedTargetDateToIssueInvoice", null, new { @class = "form-control", placeholder = "DD MM YYYY" })
                                                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SummaryClaimsRemovedTargetDateToIssueInvoice')" />
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedSumReinsured", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.Editor("SummaryClaimsRemovedCauseOfEvent", new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryClaimsRemovedPicClaims", (List<SelectListItem>)ViewBag.DropDownPicClaims, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryClaimsRemovedPicDaa", (List<SelectListItem>)ViewBag.DropDownPicDaa, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryClaimsRemovedClaimStatus", (List<SelectListItem>)ViewBag.DropDownClaimStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryClaimsRemovedProvisionStatus", (List<SelectListItem>)ViewBag.DropDownProvisionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th>
                                                                @Html.DropDownList("SummaryClaimsRemovedOffsetStatus", (List<SelectListItem>)ViewBag.DropDownOffsetStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                                                            </th>
                                                            <th class="text-center align-middle">
                                                                <div class="btn-row-action">
                                                                    <button type="button" title="Clear" class="btn-circle" onclick="clearSummaryClaimsRemoved()"><span class="fas fa-backspace" /></button>
                                                                    <button type="button" title="Search" class="btn-circle" onclick="filterSummaryClaimsRemoved()"><span class="fas fa-search" /></button>
                                                                </div>
                                                            </th>
                                                            <th>
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (SummaryClaimsRemovedList.Count > 0)
                                                        {
                                                            foreach (var item in SummaryClaimsRemovedList)
                                                            {
                                                                <tr>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.HasRedFlag)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.EntryNo)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.SoaQuarter)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimId)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimTransactionType)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.IsReferralCase)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RiDataId)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.RecordType)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.TreatyCode)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyNumber)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CedingCompany)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.InsuredName)
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.InsuredDateOfBirth.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.InsuredDateOfBirth.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.LastTransactionDate.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.LastTransactionDate.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfReported.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfReported.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.CedantDateOfNotification.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.CedantDateOfNotification.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfRegister.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfRegister.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfIntimation.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfIntimation.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.DateOfEvent.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.DateOfEvent.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.PolicyDuration)
                                                                    </td>
                                                                    <td>
                                                                        @if (item.ClaimRegisterHistory.TargetDateToIssueInvoice.HasValue)
                                                                        {
                                                                            @item.ClaimRegisterHistory.TargetDateToIssueInvoice.Value.ToString("dd/MM/yyyy")
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.Layer1SumRein)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.CauseOfEvent)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimRegister.PicClaim.FullName)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimRegisterHistory.ClaimRegister.PicDaa.FullName)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetStatusName(item.ClaimRegisterHistory.ClaimStatus)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetProvisionStatusName(item.ClaimRegisterHistory.ProvisionStatus)
                                                                    </td>
                                                                    <td>
                                                                        @BusinessObject.ClaimRegisterBo.GetOffsetStatusName(item.ClaimRegisterHistory.OffsetStatus)
                                                                    </td>
                                                                    <td></td>
                                                                    <td></td>
                                                                    <td>
                                                                        <div class="actionCheckbox" name="selectSummaryClaimsRemoved">
                                                                            @Html.CheckBox("SelectSummaryClaimsRemoved", new { id = item.Id })
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr>
                                                                <td colspan="28" class="no-data">No available data found.</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>

                                            ViewBag.CurrentPageNumber = SummaryClaimsRemovedList.PageNumber;
                                            ViewBag.CurrentPageItems = SummaryClaimsRemovedList.Count;
                                            ViewBag.PageSize = SummaryClaimsRemovedList.PageSize;
                                            ViewBag.Total = ViewBag.SummaryClaimsRemovedListTotal;

                                            <div class="pagination-footer position-relative">
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        @Html.Partial("_PageInfo")
                                                    </div>
                                                    <div class="col-md-8" id="RiDetailPager">
                                                        @Html.PagedListPager(SummaryClaimsRemovedList, Page => Url.Action("Edit", new
                                                   {
                                                       id = Model.Id,
                                                       SummaryPaidClaimHasRedFlag = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedHasRedFlag"],
                                                       SummaryPaidClaimEntryNo = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedEntryNo"],
                                                       SummaryClaimsRemovedoaQuarter = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedSoaQuarter"],
                                                       SummaryPaidClaimClaimId = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedClaimId"],
                                                       SummaryPaidClaimClaimTransactionType = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedClaimTransactionType"],
                                                       SummaryPaidClaimIsReferralCase = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedIsReferralCase"],
                                                       SummaryPaidClaimRiDataId = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedRiDataId"],
                                                       SummaryPaidClaimRecordType = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedRecordType"],
                                                       SummaryPaidClaimTreatyCode = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedTreatyCode"],
                                                       SummaryPaidClaimPolicyNumber = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPolicyNumber"],
                                                       SummaryPaidClaimCedingCompany = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCedingCompany"],
                                                       SummaryPaidClaimInsuredName = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedInsuredName"],
                                                       SummaryPaidClaimInsuredDateOfBirth = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedInsuredDateOfBirth"],
                                                       SummaryPaidClaimLastTransaction = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedLastTransaction"],
                                                       SummaryPaidClaimDateOfReported = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfReported"],
                                                       SummaryPaidClaimCedantDateOfNotification = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCedantDateOfNotification"],
                                                       SummaryPaidClaimDateOfRegister = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfRegister"],
                                                       SummaryPaidClaimDateOfCommencement = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfCommencement"],
                                                       SummaryPaidClaimDateOfEvent = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedDateOfEvent"],
                                                       SummaryClaimsRemovedumInsured = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedSumInsured"],
                                                       SummaryPaidClaimCauseOfEvent = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCauseOfEvent"],
                                                       SummaryClaimsRemovedPolicyDuration = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPolicyDuration"],
                                                       SummaryClaimsRemovedTargetDateToIssueInvoice = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedTargetDateToIssueInvoice"],
                                                       SummaryClaimsRemovedSumReinsured = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedSumReinsured"],
                                                       SummaryClaimsRemovedCauseOfEvent = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedCauseOfEvent"],
                                                       SummaryClaimsRemovedPicClaims = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPicClaims"],
                                                       SummaryClaimsRemovedPicDaa = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedPicDaa"],
                                                       SummaryPaidClaimClaimStatus = summaryClaimsRemovedRouteValue["SummaryClaimsClaimsRemovedtatus"],
                                                       SummaryPaidClaimProvisionStatus = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedProvisionStatus"],
                                                       SummaryPaidClaimOffsetStatus = summaryClaimsRemovedRouteValue["SummaryClaimsRemovedOffsetStatus"],
                                                       Page = Page
                                                   }), Shared.Html.GetPagedListRenderOptions())
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @{if (ViewBag.Status == BusinessObject.Retrocession.PerLifeClaimBo.StatusFinalised)
                                            {
                                                <div class="form-row form-row-btn">
                                                    <div class="form-group col-md-12 btn-row">
                                                        <button type="button" class="btn btn-submit float-right" v-on:click="processFinalise()">FINALISE</button>
                                                    </div>
                                                </div>

                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="statusHistory" role="tabpanel" aria-labelledby="statusHistory-tab">
                                <div class="table-responsive">
                                    <table class="table table-hover my-3">
                                        <thead>
                                            <tr>
                                                <th class="w-30">Status</th>
                                                <th class="w-35">Update Date & time</th>
                                                <th class="w-35">Updated By</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr v-if="!StatusHistories.length">
                                                <td colspan="3" class="no-data">No available data found.</td>
                                            </tr>
                                            <tr v-for="(statusHistory, index) in StatusHistories">
                                                <td class="va-middle"><span class="status-badge">{{ statusHistory.StatusName }}</span></td>
                                                <td>{{ statusHistory.CreatedAtStr }}</td>
                                                <td>{{ statusHistory.CreatedByName }}</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>


    @*Modals*@
    <div class="modal fade" id="submitForProcessingModal" tabindex="-1" role="dialog" aria-labelledby="submitForProcessingModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="submitForProcessingModalLabel">Submit For Processing Confirmation</h5>
                </div>
                <div class="modal-body">
                    Do you want to submit current Per Life Aggregation for Processing? <br />
                    <span class="font-weight-bold">Please note that current data will be overriden.</span>
                    <div class="text-right form-row-btn">
                        <button type="button" class="btn btn-cancel" data-dismiss="modal">CANCEL</button>
                        <button type="submit" v-on:click="submitForProcessing(true)" class="btn btn-submit" data-dismiss="modal">CONFIRM</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="validateDataModal" tabindex="-1" role="dialog" aria-labelledby="validateDataModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="validateDataLabel">Validate Data Error</h5>
                </div>
                <div class="modal-body">
                    Validate Data can only be run if the status is Status Processing Success.
                    <div class="text-right form-row-btn">
                        <button type="button" class="btn btn-cancel" data-dismiss="modal">CANCEL</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="processClaimRecoveryModal" tabindex="-1" role="dialog" aria-labelledby="processClaimRecoveryModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="processClaimRecoveryLabel">Process Claim Recovery Error</h5>
                </div>
                <div class="modal-body">
                    Process Claim Recovery can only be run if the status is Status Validation Success.
                    <div class="text-right form-row-btn">
                        <button type="button" class="btn btn-cancel" data-dismiss="modal">CANCEL</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/Scripts/textarea-autoresize.js")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/date-quarter.js")
    <script>
        var Model = @Html.Raw(Json.Encode(Model));

        // Active Tab
        var ActiveTabClaimRegisterData = '@BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabClaimRegisterData';
        var ActiveTabException = '@BusinessObject.Retrocession.PerLifeClaimBo.ActiveTabException';
        var EditPerLifeClaimRetroDataUrl = "@Url.Action("Edit", "PerLifeClaimRetroData")";
        var SubmitForProcessingUrl = "@Url.Action("SubmitForProcessing", "PerLifeClaim")";
        var ValidateDataUrl = "@Url.Action("ValidateData", "PerLifeClaim")";
        var ProcessClaimRecoveryUrl = "@Url.Action("ProcessClaimRecovery", "PerLifeClaim")";
        var ProcessFinaliseUrl = "@Url.Action("ProcessFinalise", "PerLifeClaim")";

        var StatusHistories = @Html.Raw(Json.Encode(ViewBag.StatusHistories));

        $(document).ready(function () {
            dateOffAutoComplete();

            // Claim Register Data
            $('#ClaimRegisterDataInsuredDateOfBirth, #ClaimRegisterDataLastTransaction, #ClaimRegisterDataDateOfReported, #ClaimRegisterDataCedantDateOfNotification, #ClaimRegisterDataDateOfRegister, #ClaimRegisterDataDateOfCommencement, #ClaimRegisterDataDateOfEvent').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });

            // Exception
            var SavedExceptionIds = '@ViewBag.SelectedExceptionIds';
            $('#ExceptionInsuredDateOfBirth, #ExceptionLastTransaction, #ExceptionDateOfReported, #ExceptionCedantDateOfNotification, #ExceptionDateOfRegister, #ExceptionDateOfCommencement, #ExceptionDateOfEvent').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });

            // Claim Retro Data
            var SavedClaimRetroDataIds = '@ViewBag.SelectedClaimRetroDataIds';
            $('#ClaimRetroDataInsuredDateOfBirth, #ClaimRetroDataLastTransaction, #ClaimRetroDataDateOfReported, #ClaimRetroDataCedantDateOfNotification, #ClaimRetroDataDateOfRegister, #ClaimRetroDataDateOfCommencement, #ClaimRetroDataDateOfEvent').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });

            // Summary Paid Claims
            $('#SummaryPaidClaimsInsuredDateOfBirth, #SummaryPaidClaimsLastTransaction, #SummaryPaidClaimsDateOfReported, #SummaryPaidClaimsCedantDateOfNotification, #SummaryPaidClaimsDateOfRegister, #SummaryPaidClaimsDateOfCommencement, #SummaryPaidClaimsDateOfEvent, #SummaryPaidClaimsTargetDateToIssueInvoice').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });

            // Summary Pending Claims
            $('#SummaryPendingClaimsInsuredDateOfBirth, #SummaryPendingClaimsLastTransaction, #SummaryPendingClaimsDateOfReported, #SummaryPendingClaimsCedantDateOfNotification, #SummaryPendingClaimsDateOfRegister, #SummaryPendingClaimsDateOfCommencement, #SummaryPendingClaimsDateOfEvent, #SummaryPendingClaimsTargetDateToIssueInvoice').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });

            // Summary Claims Removed
            $('#SummaryClaimsRemovedInsuredDateOfBirth, #SummaryClaimsRemovedLastTransaction, #SummaryClaimsRemovedDateOfReported, #SummaryClaimsRemovedCedantDateOfNotification, #SummaryClaimsRemovedDateOfRegister, #SummaryClaimsRemovedDateOfCommencement, #SummaryClaimsRemovedDateOfEvent, #SummaryClaimsRemovedTargetDateToIssueInvoice').datepicker({
                format: DateFormatDatePickerJs,
                autoclose: true,
            });

            $('#ClaimRegisterDataSoaQuarter, #ExceptionSoaQuarter, #ClaimRetroDataSoaQuarter, #SummaryPaidClaimsSoaQuarter, #SummaryPendingClaimsSoaQuarter, #SummaryClaimsRemovedSoaQuarter').datepicker({
            format: '@BusinessObject.Mfrs17ReportingBo.DateQuarterFormatJs',
            minViewMode: 1,
            autoclose: true,
            language: "qtrs",
            forceParse: false
            }).on('show', function (e) {
                var datepickerDropDown = $('.datepicker');
                datepickerDropDown.addClass('quarterpicker');
            });
        });

        function selectAllClaimRegisterData() {
            $('input[name=SelectClaimRegisterData]').prop('checked', $('input[name=SelectClaimRegisterData]').prop('checked'));
        }
        function selectAllException() {
            $('input[name=SelectException]').prop('checked', $('input[name=SelectException]').prop('checked'));
        }
        function selectAllClaimRetroData() {
            $('input[name=SelectClaimRetroData]').prop('checked', $('input[name=SelectClaimRetroData]').prop('checked'));
        }
        function selectAllSummaryPaidClaims() {
            $('input[name=SelectSummaryPaidClaims]').prop('checked', $('input[name=SelectSummaryPaidClaims]').prop('checked'));
        }
        function selectAllSummaryPendingClaims() {
            $('input[name=SelectSummaryPendingClaims]').prop('checked', $('input[name=SelectSummaryPendingClaims]').prop('checked'));
        }
        function selectAllSummaryClaimsRemoved() {
            $('input[name=SelectSummaryClaimsRemoved]').prop('checked', $('input[name=SelectSummaryClaimsRemoved]').prop('checked'));
        }

        function validateQuarter(qtr, name, id) {
            if (qtr == null || qtr == "")
                return;
            if (!/[0-9]{4} Q{1}([1-4]){1}$/.test(qtr)) {
                console.log(qtr);
                $("#" + id).val(null);
                alert(name + " format is incorrect");
            }
        }

        function showError(errors) {
            var errorList = JSON.parse(errors);

            var list = $('#dataError');
            list.empty();
            errorList.forEach(function (error) {
                $("<li>" + error + "</li>").appendTo(list);
            });

            $('#errorModal').modal('show');
        }

    function resetClaimRegisterData() {
        // clear Claim Register Data
        $('#ClaimRegisterDataHasRedFlag').val(null);
        $('#ClaimRegisterDataEntryNo').val(null);
        $('#ClaimRegisterDataSoaQuarter').val(null);
        $('#ClaimRegisterDataClaimId').val(null);
        $('#ClaimRegisterDataClaimTransactionType').val(null);
        $('#ClaimRegisterDataIsReferralCase').val(null);
        $('#ClaimRegisterDataRiDataId').val(null);
        $('#ClaimRegisterDataRecordType').val(null);
        $('#ClaimRegisterDataTreatyCode').val(null);
        $('#ClaimRegisterDataPolicyNumber').val(null);
        $('#ClaimRegisterDataCedingCompany').val(null);
        $('#ClaimRegisterDataInsuredName').val(null);
        $('#ClaimRegisterDataInsuredDateOfBirth').val(null);
        $('#ClaimRegisterDataLastTransaction').val(null);
        $('#ClaimRegisterDataDateOfReported').val(null);
        $('#ClaimRegisterDataCedantDateOfNotification').val(null);
        $('#ClaimRegisterDataDateOfRegister').val(null);
        $('#ClaimRegisterDataDateOfCommencement').val(null);
        $('#ClaimRegisterDataDateOfEvent').val(null);
        $('#ClaimRegisterDataSumInsured').val(null);
        $('#ClaimRegisterDataCauseOfEvent').val(null);
        $('#ClaimRegisterDataClaimStatus').val(null);
        $('#ClaimRegisterDataProvisionStatus').val(null);
        $('#ClaimRegisterDataOffsetStatus').val(null);
        $('#ClaimRegisterDataMlreEventCode').val(null);
        $('#ClaimRegisterDataCedingPlanCode').val(null);
        $('#ClaimRegisterDataCedingBenefitRiskCode').val(null);
        $('#ClaimRegisterDataCedingBenefitTypeCode').val(null);
        $('#ClaimRegisterDataClaimRecoveryAmount').val(null);
        $('#ClaimRegisterDataMlreRetainAmount').val(null);
        $('#ClaimRegisterDataOffsetClaimRegisterDataLateInterestStatus').val(null);
        $('#ClaimRegisterDataExGratia').val(null);
    }

    function resetClaimRetroData() {
        // clear Claim Retro Data
        $('#ClaimRetroDataHasRedFlag').val(null);
        $('#ClaimRetroDataEntryNo').val(null);
        $('#ClaimRetroDataSoaQuarter').val(null);
        $('#ClaimRetroDataClaimId').val(null);
        $('#ClaimRetroDataClaimTransactionType').val(null);
        $('#ClaimRetroDataIsReferralCase').val(null);
        $('#ClaimRetroDataRiDataId').val(null);
        $('#ClaimRetroDataRecordType').val(null);
        $('#ClaimRetroDataTreatyCode').val(null);
        $('#ClaimRetroDataPolicyNumber').val(null);
        $('#ClaimRetroDataCedingCompany').val(null);
        $('#ClaimRetroDataInsuredName').val(null);
        $('#ClaimRetroDataInsuredDateOfBirth').val(null);
        $('#ClaimRetroDataLastTransaction').val(null);
        $('#ClaimRetroDataDateOfReported').val(null);
        $('#ClaimRetroDataCedantDateOfNotification').val(null);
        $('#ClaimRetroDataDateOfRegister').val(null);
        $('#ClaimRetroDataDateOfCommencement').val(null);
        $('#ClaimRetroDataDateOfEvent').val(null);
        $('#ClaimRetroDataSumInsured').val(null);
        $('#ClaimRetroDataCauseOfEvent').val(null);
        $('#ClaimRetroDataClaimStatus').val(null);
        $('#ClaimRetroDataProvisionStatus').val(null);
        $('#ClaimRetroDataOffsetStatus').val(null);
        $('#ClaimRetroDataMlreEventCode').val(null);
        $('#ClaimRetroDataCedingPlanCode').val(null);
        $('#ClaimRetroDataCedingBenefitRiskCode').val(null);
        $('#ClaimRetroDataCedingBenefitTypeCode').val(null);
        $('#ClaimRetroDataClaimRecoveryAmount').val(null);
        $('#ClaimRetroDataMlreRetainAmount').val(null);
        $('#ClaimRetroDataOffsetClaimRetroDataLateInterestStatus').val(null);
        $('#ClaimRetroDataExGratia').val(null);
    }

    function resetException() {
        // clear Ri Data filter param
        $('#ExceptionHasRedFlag').val(null);
        $('#ExceptionEntryNo').val(null);
        $('#ExceptionSoaQuarter').val(null);
        $('#ExceptionClaimId').val(null);
        $('#ExceptionClaimTransactionType').val(null);
        $('#ExceptionIsReferralCase').val(null);
        $('#ExceptionRiDataId').val(null);
        $('#ExceptionRecordType').val(null);
        $('#ExceptionTreatyCode').val(null);
        $('#ExceptionPolicyNumber').val(null);
        $('#ExceptionCedingCompany').val(null);
        $('#ExceptionInsuredName').val(null);
        $('#ExceptionInsuredDateOfBirth').val(null);
        $('#ExceptionLastTransaction').val(null);
        $('#ExceptionDateOfReported').val(null);
        $('#ExceptionCedantDateOfNotification').val(null);
        $('#ExceptionDateOfRegister').val(null);
        $('#ExceptionDateOfCommencement').val(null);
        $('#ExceptionDateOfEvent').val(null);
        $('#ExceptionSumInsured').val(null);
        $('#ExceptionCauseOfEvent').val(null);
        $('#ExceptionClaimStatus').val(null);
        $('#ExceptionProvisionStatus').val(null);
        $('#ExceptionOffsetStatus').val(null);
        $('#ExceptionMlreEventCode').val(null);
        $('#ExceptionCedingPlanCode').val(null);
        $('#ExceptionCedingBenefitRiskCode').val(null);
        $('#ExceptionCedingBenefitTypeCode').val(null);
        $('#ExceptionClaimRecoveryAmount').val(null);
        $('#ExceptionMlreRetainAmount').val(null);
        $('#ExceptionOffsetExceptionLateInterestStatus').val(null);
        $('#ExceptionExGratia').val(null);
    }

        function startDownload(download) {
            loadingDiv.removeClass('hide-loading-spinner');
            var downloadToken = (new Date()).getTime();

            if (download.href.includes("downloadToken=")) {
                download.href = download.href.replace(/(downloadToken=).*?/,'$1' + downloadToken + '$2')
            } else {
                download.href += "&downloadToken=" + downloadToken;
            }

            var cookiePattern = new RegExp( ( "downloadToken=" + downloadToken ), "i" );
            var cookieTimer = setInterval(checkCookies, 500);
            var refreshSession = setInterval(
                function () {
                    $.ajax({
                        url: "@(Url.Action("RefreshUserSession", "Account"))",
                        type: "POST",
                        cache: false,
                        async: false,
                        success: function (data) {
                            if (data.logout == true) {
                                window.location.href = "@(Url.Action("Login", "Account"))";
                            }
                        },
                    });
                }, 60 * 1000
            );

            function checkCookies() {
                if (document.cookie.search(cookiePattern) >= 0) {
                    loadingDiv.addClass('hide-loading-spinner');
                    clearInterval(cookieTimer);
                    clearInterval(refreshSession);
                }
            }
        }
        function updateActiveTab() {
            $('#claimRegisterDataTab').removeClass('active');
            $('#exceptionTab').removeClass('active');
            $('#claimRetroDataTab').removeClass('active');
            $('#summaryTab').removeClass('active');
        }



    </script>
    @Scripts.Render("~/Scripts/models/PerLifeClaim.js")
}
