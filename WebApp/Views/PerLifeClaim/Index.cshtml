@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.PerLifeClaimViewModel>

@{
    ViewBag.Title = "Per Life Claims";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-8 text-right  btn-row-inline">
                <a href="@Url.Action("Create")" class="btn btn-add">
                    ADD NEW
                </a>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-40">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortSoaQuarter;
                                @Shared.Html.Sorter(ViewBag, "SOA Quarter", "SoaQuarter", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCutOffId;
                                @Shared.Html.Sorter(ViewBag, "Snapshot Version", "CutOffId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortProcessingDate;
                                @Shared.Html.Sorter(ViewBag, "Processing Date", "ProcessingDate", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-40">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortFundsAccountingTypeCode;
                                @Shared.Html.Sorter(ViewBag, "Fund Accounting Type", "FundsAccountingTypeCode", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPersonInChargeId;
                                @Shared.Html.Sorter(ViewBag, "Person In Charge", "PersonInChargeId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-40">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortStatus;
                                @Shared.Html.Sorter(ViewBag, "Status", "Status", Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>
                    <tr>
                        @using (Html.BeginForm("Index", "PerLifeClaim", FormMethod.Get))
                        {
                            string sortOrder = ViewBag.SortOrder;

                            @Html.Hidden("SortOrder", sortOrder)
                            <th>
                                @Html.TextBox("SoaQuarter", null, new { @class = "form-control", placeholder = "YYYY MM", @onchange = "validateQuarter(this.value, 'SOA Quarter')", autocomplete = "off" })
                            </th>
                            <th>
                                @Html.DropDownList("CutOffId", (List<SelectListItem>)ViewBag.DropDownCutOffs, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("ProcessingDate", null, new { id = "ProcessingDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ProcessingDate')" />
                            </th>
                            <th>
                                @Html.DropDownList("FundsAccountingTypeCode", (List<SelectListItem>)ViewBag.DropDownFundsAccountingTypeCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("PersonInChargeId", (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("Status", (List<SelectListItem>)ViewBag.DropDownPerLifeClaimStatuses, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>

                @if (Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SoaQuarter)
                </td>
                <td>
                    @if (item.CutOff.CutOffDateTime.HasValue)
                    {
                        @item.CutOff.Quarter <span> - </span> @item.CutOff.CutOffDateTime.Value.ToString(Shared.Util.GetDateFormat())
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.CutOff.Quarter)
                    }
                </td>
                <td>
                    @if (item.ProcessingDate.HasValue)
                    {
                        @item.ProcessingDate.Value.ToString(Shared.Util.GetDateFormat())
                    }
                </td>
                <td>
                    @Services.PickListDetailService.Find(item.FundsAccountingTypePickListDetailId).ToString()
                </td>
                <td>
                    @if (item.PersonInCharge != null)
                    {
                        @item.PersonInCharge.FullName
                    }
                </td>
                <td>
                    <span class="@BusinessObject.Retrocession.PerLifeClaimBo.GetStatusClass(item.Status)">
                        @BusinessObject.Retrocession.PerLifeClaimBo.GetStatusName(item.Status)
                    </span>
                </td>
                <td class="text-center">
                    <div class="btn-group">
                        <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="fas fa-ellipsis-v dropbtn" />
                        </button>
                        <div class="dropdown-menu">
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                        </div>
                    </div>
                </td>
            </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="no-data">No available data found.</td>
                    </tr>
                }
            </table>
        </div>
        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
               {
                   SoaQuarter = routeValue["SoaQuarter"],
                   CutOffId = routeValue["CutOffId"],
                   ProcessingDate = routeValue["ProcessingDate"],
                   FundsAccountingTypeCode = routeValue["FundsAccountingTypeCode"],
                   PersonInChargeId = routeValue["PersonInChargeId"],
                   Status = routeValue["Status"],
                   SortOrder = ViewBag.SortOrder,
                   Page,
               }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/Scripts/textarea-autoresize.js")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/date-quarter.js")
    <script>

        $(document).ready(function () {
            dateOffAutoComplete();

            $('#SoaQuarter').datepicker({
            format: '@BusinessObject.Mfrs17ReportingBo.DateQuarterFormatJs',
            minViewMode: 1,
            autoclose: true,
            language: "qtrs",
            forceParse: false
            }).on('show', function (e) {
                var datepickerDropDown = $('.datepicker');
                datepickerDropDown.addClass('quarterpicker');
            });

            $('#ProcessingDate').datepicker({
                format: DateFormatDatePickerJs,
            });
        });

        function validateQuarter(qtr, name) {
            if (qtr == null || qtr == "")
                return;
            if (!/[0-9]{4} Q{1}([1-4]){1}$/.test(qtr)) {
                console.log(qtr);
                $("#SoaQuarter").val(null);
                alert(name + " format is incorrect");
            }
        }
    </script>
    @Scripts.Render("~/Scripts/models/PerLifeClaim.js")=
}