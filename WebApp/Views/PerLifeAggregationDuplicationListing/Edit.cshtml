@model WebApp.Models.PerLifeAggregationDetailDataViewModel

@{
    ViewBag.Title = "Duplication Listing";
    ViewBag.Action = "Edit";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>
    <div class="card-body" id="app">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.PerLifeAggregationDetailTreatyId)
            @Html.HiddenFor(model => model.RiDataWarehouseHistoryId)
            @Html.HiddenFor(model => model.ExpectedGenderCode)
            @Html.HiddenFor(model => model.RetroBenefitCode)
            @Html.HiddenFor(model => model.ExpectedTerritoryOfIssueCode)
            @Html.HiddenFor(model => model.FlagCode)
            @Html.HiddenFor(model => model.ExceptionType)
            @Html.HiddenFor(model => model.ExceptionErrorType)
            @Html.HiddenFor(model => model.IsException)
            @Html.HiddenFor(model => model.Errors)

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.TreatyCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.TreatyCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.TreatyCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.CedingPlanCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.CedingPlanCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.CedingPlanCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.InsuredName, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.InsuredName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.InsuredName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.InsuredDateOfBirthStr, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.InsuredDateOfBirthStr, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.InsuredDateOfBirthStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.PolicyNumber, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.PolicyNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.InsuredGenderCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.InsuredGenderCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.InsuredGenderCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.MlreBenefitCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.MlreBenefitCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.MlreBenefitCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.CedingBenefitRiskCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.CedingBenefitRiskCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.CedingBenefitRiskCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.CedingBenefitTypeCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.CedingBenefitTypeCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.CedingBenefitTypeCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ReinsEffDatePolStr, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.ReinsEffDatePolStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.ReinsEffDatePolStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.FundsAccountingTypeCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.FundsAccountingTypeCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.FundsAccountingTypeCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ReinsBasisCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.ReinsBasisCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.ReinsBasisCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.TransactionTypeCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.TransactionTypeCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.TransactionTypeCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ProceedStatus, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.ProceedStatus, (List<SelectListItem>)ViewBag.DropDownProceedStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.ProceedStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.UpdatedAtStr, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.UpdatedAtStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.UpdatedAtStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @*@Html.LabelFor(model => model.ExceptionStatusPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.ExceptionStatusPickListDetailId, (List<SelectListItem>)ViewBag.DropDownExceptionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.ExceptionStatusPickListDetailId, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "col-form-label" })
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1" })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        @*@Html.ActionLink("DELETE", "Delete", new { id = Model.Id }, new { @class = "btn btn-del" })*@
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/textarea-autoresize.js")

    <script>
        $(document).ready(function () {
            dateOffAutoComplete();

            @*$('#InsuredDateOfBirth').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#ReinsuranceEffectiveDate').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#DateUpdated').datepicker({
                format: DateFormatDatePickerJs,
            });*@

            if ('@ViewBag.ReadOnly' == 'True') {
                $("input").prop("disabled", true);
                $("select").prop("disabled", true);
                $('button').prop("disabled", true);
                $('textarea').prop("disabled", true);
                $('.selectpicker').selectpicker('refresh');
            }

            $('#Remarks').autoResize();
            $('#Remarks').trigger('keyup');
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }
    </script>
}