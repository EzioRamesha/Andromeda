@model WebApp.Models.PerLifeAggregationDuplicationListingViewModel

@{
    ViewBag.Title = "Duplication Listing";
    ViewBag.Action = "Create";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>
    <div class="card-body" id="app">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.TreatyCodeStr, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.TreatyCodeStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.TreatyCodeStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.CedantPlanCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.CedantPlanCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.CedantPlanCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.InsuredName, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.InsuredName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.InsuredName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.InsuredDateOfBirth, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.EditorFor(model => model.InsuredDateOfBirthStr, new { htmlAttributes = new { id = "InsuredDateOfBirth", @class = "form-control", placeholder = "DD MM YYYY" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('InsuredDateOfBirth')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.InsuredDateOfBirthStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.PolicyNumber, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.PolicyNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.InsuredGenderCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.InsuredGenderCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownInsuredGenderCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.InsuredGenderCodePickListDetailId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.MLReBenefitCodeStr, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.MLReBenefitCodeStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.MLReBenefitCodeStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.CedingBenefitRiskCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.CedingBenefitRiskCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.CedingBenefitRiskCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.CedingBenefitTypeCode, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.CedingBenefitTypeCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.CedingBenefitTypeCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ReinsuranceEffectiveDate, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.EditorFor(model => model.ReinsuranceEffectiveDateStr, new { htmlAttributes = new { id = "ReinsuranceEffectiveDate", @class = "form-control", placeholder = "DD MM YYYY" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsuranceEffectiveDate')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.ReinsuranceEffectiveDateStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.FundsAccountingTypePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.FundsAccountingTypePickListDetailId, (List<SelectListItem>)ViewBag.DropDownFundsAccountingTypeCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.FundsAccountingTypePickListDetailId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ReinsBasisCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.ReinsBasisCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownReinsBasisCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.ReinsBasisCodePickListDetailId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.TransactionTypePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.TransactionTypePickListDetailId, (List<SelectListItem>)ViewBag.DropDownTransactionTypeCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.TransactionTypePickListDetailId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ProceedToAggregate, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.ProceedToAggregate, new List<SelectListItem> {
                                                                                    new SelectListItem { Text = "Please Select", Value = "", Selected = true},
                                                                                    new SelectListItem { Text = "Y", Value = "1" },
                                                                                    new SelectListItem { Text = "N", Value = "2" } }, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.ProceedToAggregate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.DateUpdated, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.EditorFor(model => model.DateUpdatedStr, new { htmlAttributes = new { id = "DateUpdated", @class = "form-control", placeholder = "DD MM YYYY" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateUpdated')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.DateUpdatedStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ExceptionStatusPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.ExceptionStatusPickListDetailId, (List<SelectListItem>)ViewBag.DropDownExceptionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.ExceptionStatusPickListDetailId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "col-form-label" })
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1" })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            dateOffAutoComplete();

            $('#InsuredDateOfBirth').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#ReinsuranceEffectiveDate').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#DateUpdated').datepicker({
                format: DateFormatDatePickerJs,
            });
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }
    </script>
}