@model WebApp.Models.InvoiceRegisterBatchViewModel

@{
    ViewBag.Title = "Batch";
    ViewBag.Action = "Edit";
    ViewBag.ListPageUrl = Url.Action("Index");

    var disabled = ViewBag.CanEdit || ViewBag.ReadOnly;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card" id="app">
    <div class="card-header">
        <div class="row">
            <div class="col-6"><h4>@ViewBag.Action @ViewBag.Title</h4></div>
            <div class="col-6 text-right">
                <span class="@BusinessObject.InvoiceRegisters.InvoiceRegisterBatchBo.GetStatusClass(Model.Status)">
                    @BusinessObject.InvoiceRegisters.InvoiceRegisterBatchBo.GetStatusName(Model.Status)
                </span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Status)
                @Html.HiddenFor(model => model.ModuleId)
                @Html.HiddenFor(model => model.TotalInvoice)

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.BatchNo, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.BatchNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.BatchDate, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.BatchDateStr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                @Html.Partial("_InvoiceRegisterDetails")

                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        <div class="row m-0 p-0 float-right">
                            @if (ViewBag.ShowSubmitForProcessing)
                            {
                                <button type="submit" class="btn btn-submit">SAVE</button>
                                <div class="ml-1">
                                    <button class="btn btn-submit" type="button" onclick="updateStatus(@BusinessObject.InvoiceRegisters.InvoiceRegisterBatchBo.StatusSubmitForProcessing);" :disabled="!SoaDataDetails || !SoaDataDetails.length">SUBMIT FOR PROCESSING</button>
                                </div>
                            }
                            @if (ViewBag.ShowSubmitForGenerate)
                            {
                                <div class="ml-1">
                                    <button class="btn btn-submit" type="button" onclick="updateStatus(@BusinessObject.InvoiceRegisters.InvoiceRegisterBatchBo.StatusSubmitForGenerate);">SUBMIT FOR GENERATE</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/date-quarter.js")
    @Scripts.Render("~/Scripts/textarea-autoresize.js")

    <script>
        $(document).ready(function () {
            var readOnly = @(disabled.ToString().ToLower());
            if (readOnly) {
                $("input[type='text']").prop("readonly", true);
                $("select").prop("disabled", true);
                $('button').prop("disabled", true);
            }

            $('#remarkContent').autoResize();
            $('#Remarks').trigger('keyup');
        });
    </script>
    @Scripts.Render("~/Scripts/models/InvoiceRegister.js")
}

