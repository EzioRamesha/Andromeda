@model WebApp.Models.TreatyPricingProfitCommissionViewModel
@using Shared.Forms.Helpers

<!DOCTYPE html>

<ul class="nav nav-tabs">
    <li class="nav-item"><a data-toggle="tab" href="#version" class="active underline-tab">Version</a></li>
    <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#product">Product</a></li>
    <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#remark">Remarks</a></li>
    <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#changelog">Changelog</a></li>
</ul>

<div class="tab-content underline-tab-content" id="app">
    <div class="tab-pane fade show active" id="version" role="tabpanel" aria-labelledby="version-tab">
        <div class="col-form-label col-12 p-0 font-weight-bold">Version Details</div>
        <div class="form-horizontal">
            @Html.HiddenFor(model => Model.CurrentVersionObjectId)
            @Html.HiddenFor(model => Model.ProfitCommissionDetail)
            @Html.HiddenFor(model => Model.TierProfitCommission)
            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1">
                    @Html.LabelForRequired(model => model.Version, htmlAttributes: new { @class = "col-form-label" })
                    <div class="input-group">
                        @if (ViewBag.IsHideSideBar is null || !ViewBag.IsHideSideBar)
                        {
                            @Html.DropDownListFor(model => model.CurrentVersion, (List<SelectListItem>)ViewBag.DropDownVersions, htmlAttributes: new { @class = "form-control selectpicker" })
                            <div class="input-group-prepend">
                                <button type="button" class="input-group-text" data-toggle="modal" v-on:click="" data-target="#newVersionModal">CREATE NEW VERSION</button>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.CurrentVersion)
                            @Html.DropDownListFor(model => model.CurrentVersion, (List<SelectListItem>)ViewBag.DropDownVersions, htmlAttributes: new { @class = "form-control selectpicker", @disabled = true })
                            <div class="input-group-prepend">
                                <button type="button" class="input-group-text" data-toggle="modal" v-on:click="" data-target="#newVersionModal" disabled>CREATE NEW VERSION</button>
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group col-md-6 mid-line-2">
                    @Html.LabelForRequired(model => model.PersonInChargeId, htmlAttributes: new { @class = "col-form-label" })
                    @Html.DropDownListFor(model => model.PersonInChargeId, (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker" })
                    @Html.ValidationMessageFor(model => model.PersonInChargeId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-form-label col-12 p-0 mt-3 font-weight-bold">Profit Commission Details</div>
        <div class="table-responsive">
            <table class="table table-hover" v-cloak>
                <thead>
                    <tr>
                        <th class="w-5">No</th>
                        <th class="w-5">Item</th>
                        <th class="w-25">Component</th>
                        <th class="w-25">Component Description</th>
                        <th class="w-20">Enabled</th>
                        <th class="w-10">Net/Gross</th>
                        <th class="w-10">Value</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(profitCommissionDetailRow, index) in ProfitCommissionDetailRows">
                        <td>
                            <input v-model="profitCommissionDetailRow.Id" type="hidden" class="form-control">
                            <input v-model="profitCommissionDetailRow.RowIndex" type="hidden" class="form-control">
                            <input v-model="profitCommissionDetailRow.IsComponentEditable" type="hidden" class="form-control">
                            <input v-model="profitCommissionDetailRow.IsComponentDescriptionEditable" type="hidden" class="form-control">
                            <input v-model="profitCommissionDetailRow.IsDropDown" type="hidden" class="form-control">
                            <input v-model="profitCommissionDetailRow.IsNetGrossRequired" type="hidden" class="form-control">
                            {{profitCommissionDetailRow.SortIndex}}
                        </td>
                        <td>
                            <input v-model="profitCommissionDetailRow.Item" type="hidden" class="form-control">
                            {{ItemList[profitCommissionDetailRow.Item]}}
                        </td>
                        <td v-if="!profitCommissionDetailRow.IsComponentEditable">
                            <input v-model="profitCommissionDetailRow.Componenet" type="hidden" class="form-control">
                            {{profitCommissionDetailRow.Component}}
                        </td>
                        <td v-if="profitCommissionDetailRow.IsComponentEditable">
                            <textarea v-model="profitCommissionDetailRow.Component" class="form-control" style="resize: none" :disabled="Disable" rows="2" v-on:change="updateProfitCommissionDetail()" placeholder="Type here"></textarea>
                        </td>
                        <td v-if="!profitCommissionDetailRow.IsComponentDescriptionEditable">
                            <input v-model="profitCommissionDetailRow.ComponenetDescription" type="hidden" class="form-control">
                            {{profitCommissionDetailRow.ComponentDescription}}
                        </td>
                        <td v-if="profitCommissionDetailRow.IsComponentDescriptionEditable">
                            <textarea v-model="profitCommissionDetailRow.ComponentDescription" class="form-control" style="resize: none" :disabled="Disable" rows="2" v-on:change="updateProfitCommissionDetail()" placeholder="Type here"></textarea>
                        </td>
                        <td v-if="!profitCommissionDetailRow.IsDropDown">
                            <input v-model="profitCommissionDetailRow.DropDownValue" type="hidden" class="form-control">
                            <div class="row m-0 p-0">
                                <div class="mr-2"> <p style="color: #004BA2;">No</p> </div>
                                <div class="custom-control custom-switch pl-1">
                                    <input type="checkbox" class="custom-control-input" v-model="profitCommissionDetailRow.IsEnabled" :id="'IsEnabledSwitch' + index" :disabled="Disable" v-on:change="updateProfitCommissionDetail()" onchange="changeIsEnabled(this.id)">
                                    <label class="custom-control-label" :for="'IsEnabledSwitch' + index">Yes</label>
                                </div>
                            </div>
                        </td>
                        <td v-if="profitCommissionDetailRow.IsDropDown">
                            <input v-model="profitCommissionDetailRow.IsEnabled" type="hidden" class="form-control">
                            <select v-model="profitCommissionDetailRow.DropDownValue" v-on:change="updateProfitCommissionDetail()" onchange="changeDropDown(this.value)" class="form-control" id="DropDownSelect" :disabled="Disable" data-container="body">
                                <option v-for="(dropDownDropDown, dropDownDropDownId) in DropDownDropDowns" :value="dropDownDropDown.Value">
                                    {{ dropDownDropDown.Text }}
                                </option>
                            </select>
                        </td>
                        <td v-if="!profitCommissionDetailRow.IsNetGrossRequired">
                            <input v-model="profitCommissionDetailRow.IsNetGross" type="hidden" class="form-control">
                        </td>
                        <td v-if="profitCommissionDetailRow.IsNetGrossRequired">
                            <div class="row m-0 p-0">
                                <div class="mr-2"> <p style="color: #004BA2;">Net</p> </div>
                                <div class="custom-control custom-switch pl-1">
                                    <input type="checkbox" class="custom-control-input" v-model="profitCommissionDetailRow.IsNetGross" :id="'IsNetGrossSwitch' + index" :disabled="Disable" v-on:change="updateProfitCommissionDetail()">
                                    <label class="custom-control-label" :for="'IsNetGrossSwitch' + index">Gross</label>
                                </div>
                            </div>
                        </td>
                        <td>
                            <input v-model="profitCommissionDetailRow.Value" class="form-control" placeholder="Type here" :disabled="Disable" :id="'Value' + index" v-on:change="updateProfitCommissionDetail()">
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="form-horizontal">
            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1">
                    @Html.LabelForRequired(model => model.ProfitSharing, htmlAttributes: new { @class = "col-form-label" })
                    @Html.DropDownListFor(model => model.ProfitSharing, (List<SelectListItem>)ViewBag.DropDownProfitSharings, htmlAttributes: new { @class = "form-control selectpicker", @onchange = "changeProfitSharing(this.value)" })
                    @Html.ValidationMessageFor(model => model.ProfitSharing, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6 mid-line-2">
                    @Html.LabelForRequired(model => model.ProfitDescription, htmlAttributes: new { @class = "col-form-label" })
                    @Html.TextAreaFor(model => model.ProfitDescription, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1", maxlength = @ViewBag.ProfitDescriptionMaxLength })
                    @Html.ValidationMessageFor(model => model.ProfitDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6 mid-line-1" id="NetProfitPercentageDiv">
                    @Html.LabelForRequired(model => model.NetProfitPercentageStr, htmlAttributes: new { @class = "col-form-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">%</div>
                        </div>
                        @Html.EditorFor(model => model.NetProfitPercentageStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.NetProfitPercentageStr, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-12 mid-line-1" id="TierProfitCommissionDiv">
                    @Html.LabelForRequired(model => model.TierProfitCommission, htmlAttributes: new { @class = "col-form-label" })
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr v-for="(tierProfitCommissionRow, index) in TierProfitCommissionRows" v-if="!index">
                                    <th class="w-50">
                                        <input v-model="tierProfitCommissionRow.Id" type="hidden" class="form-control">
                                        <input v-model="tierProfitCommissionRow.Col1" class="form-control" :disabled="Disable" v-on:change="updateTierProfitCommission(index)">
                                    </th>
                                    <th class="w-50">
                                        <input v-model="tierProfitCommissionRow.Col2" class="form-control" :disabled="Disable" v-on:change="updateTierProfitCommission(index)">
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(tierProfitCommissionRow, index) in TierProfitCommissionRows" v-if="index">
                                    <td>
                                        <input v-model="tierProfitCommissionRow.Id" type="hidden" class="form-control">
                                        <input v-model="tierProfitCommissionRow.Col1" class="form-control" :disabled="Disable" v-on:change="updateTierProfitCommission(index)">
                                    </td>
                                    <td>
                                        <input v-model="tierProfitCommissionRow.Col2" class="form-control" :disabled="Disable" v-on:change="updateTierProfitCommission(index)">
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    @Html.ValidationMessageFor(model => model.TierProfitCommission, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </div>

    <div class="tab-pane fade" id="product" role="tabpanel" aria-labelledby="product-tab">
        @Html.Partial("_ProductList")
    </div>

    <div class="tab-pane fade" id="remark" role="tabpanel" aria-labelledby="remark-tab">
        @Html.Partial("_Remark", new ViewDataDictionary { { "showDocuments", true }, { "showStatus", false }, { "showVersion", true }, { "showSubject", true }, { "dropdownVersions", ViewBag.DropDownVersions } })
    </div>

    <div class="tab-pane fade" id="changelog" role="tabpanel" aria-labelledby="changelog-tab">
        @Html.Partial("_Changelog")
    </div>
</div>

<div class="modal fade" id="newVersionModal" tabindex="-1" role="dialog" aria-labelledby="newVersionModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Version</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form">
                    <div class="form-group">
                        <label class="col-form-label" for="userName">Person In-Charge (Business Development)</label>
                        <input type="text" readonly class="form-control" id="userName" value="@ViewBag.AuthUserName">
                    </div>

                    <div class="form-group">
                        <label class="col-form-label" for="duplicatePreviousVersion">Duplicate Previous Version</label>
                        <div class="row m-0 p-0">
                            <div class="mr-2"> <p style="color: #004BA2;">No</p> </div>
                            <div class="custom-control custom-switch pl-2">
                                <input class="custom-control-input" id="duplicatePreviousVersion" name="duplicatePreviousVersion" type="checkbox" />
                                <label class="custom-control-label" for="duplicatePreviousVersion">Yes</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel mr-auto" data-dismiss="modal" style="width: auto;">CANCEL</button>
                <button type="button" onclick="createVersion()" class="btn btn-submit" data-dismiss="modal">CREATE</button>
            </div>
        </div>
    </div>
</div>

<script>
    var benefitCodeCount = 0;
    var entitlementCount = 0;

    // Model
    var Model = @Html.Raw(Json.Encode(Model));
    var DateTimeFormat = "@Shared.Util.GetDateTimeFormatMomentJs()";
    var SubModuleController = '@BusinessObject.ModuleBo.ModuleController.TreatyPricingProfitCommission.ToString()';

    //List
    var Products = @Html.Raw(Json.Encode(ViewBag.Products));
    var BenefitCodes = @Html.Raw(Json.Encode(ViewBag.BenefitCodes));
    var Entitlements = @Html.Raw(Json.Encode(ViewBag.Entitlements));
    var ItemList = @Html.Raw(Json.Encode(ViewBag.ItemList));
    var DropDownDropDowns = @Html.Raw(Json.Encode(ViewBag.DropDownDropDowns));

    //Url
    var CreateVersionUrl = "@(Url.Action("CreateVersion", "TreatyPricingProfitCommission"))";

    //Remark
    var Remarks = @Html.Raw(Json.Encode(ViewBag.RemarkBos));
    var RemarkSubjects = @Html.Raw(Json.Encode(ViewBag.RemarkSubjects));

    //Changelog
    var Changelogs = @Html.Raw(Json.Encode(ViewBag.ObjectVersionChangelogs));

    //Other
    var AuthUserName = '@ViewBag.AuthUserName';
    var ProfitSharingFlat = '@BusinessObject.TreatyPricing.TreatyPricingProfitCommissionVersionBo.ProfitSharingFlat';
    var ProfitSharingTier = '@BusinessObject.TreatyPricing.TreatyPricingProfitCommissionVersionBo.ProfitSharingTier';
    var DropDownString = '@BusinessObject.TreatyPricing.TreatyPricingProfitCommissionDetailBo.DropDownString';
</script>