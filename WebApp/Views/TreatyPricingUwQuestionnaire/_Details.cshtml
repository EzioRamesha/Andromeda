@model WebApp.Models.TreatyPricingUwQuestionnaireViewModel
@using Shared.Forms.Helpers

<div class="form-row mt-4" id="app">
    <div class="form-group col-md 12">
        <ul class="nav nav-tabs">
            <li class="nav-item"><a data-toggle="tab" href="#version" class="active underline-tab">Version</a></li>
            <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#product">Product</a></li>
            <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#remarks">Remarks</a></li>
            <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#changelog">Changelog</a></li>
        </ul>

        <div class="tab-content underline-tab-content">
            <div class="tab-pane fade show active" id="version" role="tabpanel" aria-labelledby="version-tab">

                <div class="form-horizontal">
                    <div class="form-row">
                        <div class="form-group col-md-12" style="padding-bottom: 0;">
                            <span class="font-weight-bold">@Html.Label("Version Details", htmlAttributes: new { @class = "col-form-label" })</span>
                            <div class="form-row">
                                <div class="form-group col-md-6 mid-line-1">
                                    @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "col-form-label" })
                                    <div class="input-group">
                                        @if (ViewBag.IsHideSideBar is null || !ViewBag.IsHideSideBar)
                                        {
                                            @Html.DropDownListFor(model => model.CurrentVersion, (List<SelectListItem>)ViewBag.DropDownVersions, htmlAttributes: new { @class = "form-control selectpicker", @onchange = "getVersionDetails(this.value)" })
                                            <div class="input-group-prepend">
                                                <button type="button" class="input-group-text" data-toggle="modal" v-on:click="" data-target="#newVersionModal">CREATE NEW VERSION</button>
                                            </div>
                                        }
                                        else
                                        {
                                            @Html.HiddenFor(model => model.CurrentVersion)
                                            @Html.DropDownListFor(model => model.CurrentVersion, (List<SelectListItem>)ViewBag.DropDownVersions, htmlAttributes: new { @class = "form-control selectpicker", @disabled = true })
                                            <div class="input-group-prepend">
                                                <button type="button" class="input-group-text" data-toggle="modal" v-on:click="" data-target="#newVersionModal" disabled>CREATE NEW VERSION</button>
                                            </div>
                                        }
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6 mid-line-2">
                                    @Html.LabelForRequired(model => model.PersonInChargeId, htmlAttributes: new { @class = "col-form-label" })
                                    @Html.DropDownListFor(model => model.PersonInChargeId, (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker" })
                                    @Html.HiddenFor(model => model.PersonInChargeId)
                                    @Html.ValidationMessageFor(model => model.PersonInChargeId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row mt-4">
                        <div class="form-group col-md-12" style="padding-bottom: 0;">
                            <span class="font-weight-bold">@Html.Label("Underwriting Questionnaire Table Details", htmlAttributes: new { @class = "col-form-label" })</span>
                            <div class="form-row">
                                <div class="form-group col-md-6 mid-line-1">
                                    @Html.LabelForRequired(model => model.EffectiveAt, htmlAttributes: new { @class = "col-form-label" })
                                    <div class="input-w-icon">
                                        @Html.TextBoxFor(model => model.EffectiveAtStr, new { id = "EffectiveAtStr", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('EffectiveAtStr')" />
                                    </div>
                                    @Html.ValidationMessageFor(model => model.EffectiveAtStr, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6 mid-line-2">
                                    @Html.LabelForRequired(model => model.Remarks, htmlAttributes: new { @class = "col-form-label" })
                                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1", maxlength = @ViewBag.DescriptionMaxLength })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6 mid-line-1">
                                    @Html.LabelForRequired(model => model.Type, htmlAttributes: new { @class = "col-form-label" })
                                    @Html.DropDownListFor(model => model.Type, (List<SelectListItem>)ViewBag.QuestionnaireTypeItems, htmlAttributes: new { @class = "form-control selectpicker" })
                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6 mid-line-2">&nbsp;</div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row mt-4">
                        <div class="form-group col-md-12">

                            <ul class="nav nav-tabs">
                                <li class="nav-item"><a data-toggle="tab" href="#questionnaire" class="active underline-tab">Questionnaire</a></li>
                                <li class="nav-item"><a class="underline-tab" data-toggle="tab" href="#uploadHistory">Upload History</a></li>
                            </ul>

                            <div class="tab-content underline-tab-content">
                                <div class="tab-pane fade show active" id="questionnaire" role="tabpanel" aria-labelledby="questionnaire-tab">

                                    <div class="table-responsive">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th class="w-5 text-center">No</th>
                                                    <th class="w-25">Category Code</th>
                                                    <th class="w-25">Category Name</th>
                                                    <th class="w-45">Question</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr v-if="!Questionnaires.length">
                                                    <td colspan="4" class="no-data">No available data found.</td>
                                                </tr>
                                                <tr v-for="(questionnaire, index) in Questionnaires">
                                                    <td class="text-center">{{ index + 1 }}</td>
                                                    <td>{{ questionnaire.UwQuestionnaireCategoryBo != null ? questionnaire.UwQuestionnaireCategoryBo.Code : null }}</td>
                                                    <td>{{ questionnaire.UwQuestionnaireCategoryBo != null ? questionnaire.UwQuestionnaireCategoryBo.Name : null }}</td>
                                                    <td>{{ questionnaire.Question }}</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>

                                </div>

                                <div class="tab-pane fade" id="uploadHistory" role="tabpanel" aria-labelledby="uploadHistory-tab">

                                    <div class="text-right mb-2">
                                        <button type="button" v-on:click="resetUploadFile" data-toggle="modal" data-target="#addUploadModal" class="btn btn-add-sub" :disabled="Disable">ADD NEW</button>
                                    </div>
                                    <div class="table-responsive mt-3">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th class="w-25">Uploaded Date & Time</th>
                                                    <th class="w-25">Uploaded By</th>
                                                    <th class="w-35">Filename</th>
                                                    <th class="w-10">Upload Status</th>
                                                    <th class="w-5 text-center">Error</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr v-if="!Uploads.length">
                                                    <td colspan="5" class="no-data">No available data found.</td>
                                                </tr>
                                                <tr v-for="(upload, index) in Uploads">
                                                    <td>{{ upload.CreatedAtStr }}</td>
                                                    <td>{{ upload.CreatedByName }}</td>
                                                    <td>{{ upload.FileName }}</td>
                                                    <td class="va-middle"><span class="status-badge">{{ upload.StatusName }}</span></td>
                                                    <td class="text-center">
                                                        <a href="#erroUploadModal" data-toggle="modal" data-target="#erroUploadModal" v-if="upload.Errors" v-on:click="getUploadFileError(index)">
                                                            <span class="fas fa-exclamation-triangle"></span>
                                                        </a>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="modal fade" id="addUploadModal" tabindex="-1" role="dialog" aria-labelledby="addUploadModal" aria-hidden="true">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Upload Underwriting Questionnaire</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="alert alert-danger" id="uploadQuestionnaireError" style="display:none;"></div>

                                                    <div class="form">
                                                        <div class="form-group">
                                                            <label class="col-form-label">File Upload</label>
                                                            <div class="file is-boxed">
                                                                <label class="file-label">
                                                                    <input class="form-control-file" type="file" id="questionnaireFiles" name="questionnaireUpload" accept=".csv, .xlsx, .xls" v-on:change="uploadFile()">
                                                                    Drag and Drop File Here or <u>Browse your file</u>
                                                                    <br />
                                                                    <span class="file-desc">
                                                                        Allowed file format: .csv .xls .xlsx
                                                                    </span>
                                                                    <br />
                                                                    <span class="file-desc">
                                                                        File size is up to 2GB
                                                                    </span>
                                                                </label>
                                                            </div>
                                                            <div id="selectedFiles" class="file-list-display questionnaire-upload"></div>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-cancel" data-dismiss="modal">CANCEL</button>
                                                    <button v-on:click="saveUploadFile()" type="button" class="btn btn-submit">UPLOAD</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal fade" id="erroUploadModal" tabindex="-1" role="dialog" aria-labelledby="erroUploadModal" aria-hidden="true">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Errors</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <ul>
                                                        <li v-for="(error, index) in UploadErrors" class="text-danger">{{ error }}</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>

            <div class="tab-pane fade" id="product" role="tabpanel" aria-labelledby="product-tab">
                @Html.Partial("_ProductList")
            </div>

            <div class="tab-pane fade" id="remarks" role="tabpanel" aria-labelledby="remarks-tab">
                @Html.Partial("_Remark", new ViewDataDictionary { { "showDocuments", true }, { "showStatus", false }, { "showVersion", true }, { "showSubject", true }, { "dropdownVersions", ViewBag.DropDownVersions } })
            </div>

            <div class="tab-pane fade" id="changelog" role="tabpanel" aria-labelledby="changelog-tab">
                @Html.Partial("_Changelog")
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newVersionModal" tabindex="-1" role="dialog" aria-labelledby="newVersionModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Version</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form">
                    <div class="form-group">
                        <label class="col-form-label" for="userName">Person In-Charge (Business Development)</label>
                        <input type="text" readonly class="form-control" id="userName" value="@ViewBag.AuthUserName">
                    </div>

                    <div class="form-group">
                        <label class="col-form-label" for="duplicatePreviousVersion">Duplicate Previous Version</label>
                        <div class="row m-0 p-0">
                            <div class="mr-2"> <p style="color: #004BA2;">No</p> </div>
                            <div class="custom-control custom-switch pl-2">
                                <input class="custom-control-input" id="duplicatePreviousVersion" name="duplicatePreviousVersion" type="checkbox" />
                                <label class="custom-control-label" for="duplicatePreviousVersion">Yes</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel mr-auto" data-dismiss="modal" style="width: auto;">CANCEL</button>
                <button type="button" onclick="createVersion(); resetVersionDetails();" class="btn btn-submit" data-dismiss="modal">CREATE</button>
            </div>
        </div>
    </div>
</div>

<script>
     // Model
    var Model = @Html.Raw(Json.Encode(Model));
    var DateTimeFormat = "@Shared.Util.GetDateTimeFormatMomentJs()";
    var SubModuleController = '@BusinessObject.ModuleBo.ModuleController.TreatyPricingUwQuestionnaire.ToString()';

    // Url
    var CreateVersionUrl = "@(Url.Action("CreateVersion", "TreatyPricingUwQuestionnaire"))";
    var GetVersionDetailUrl = "@(Url.Action("GetVersionDetails"))";
    var UploadQuestionnaireUrl = "@Url.Action("UploadQuestionnaire")";

    // List
    var Products = @Html.Raw(Json.Encode(ViewBag.Products));
    var Remarks = @Html.Raw(Json.Encode(ViewBag.RemarkBos));
    var RemarkSubjects = @Html.Raw(Json.Encode(ViewBag.RemarkSubjects));
    var Changelogs = @Html.Raw(Json.Encode(ViewBag.ObjectVersionChangelogs));

     // Other
    var AuthUserName = '@ViewBag.AuthUserName';
</script>

