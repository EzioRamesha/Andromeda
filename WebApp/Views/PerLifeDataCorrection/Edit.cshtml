@model WebApp.Models.PerLifeDataCorrectionViewModel

@{
    ViewBag.Title = "Per Life Data Correction";
    ViewBag.Action = "Edit";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>
    <div class="card-body" id="app">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.TreatyCodeId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.TreatyCodeId, (List<SelectListItem>)ViewBag.DropDownTreatyCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.TreatyCodeId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.PerLifeRetroGenderId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.PerLifeRetroGenderId, (List<SelectListItem>)ViewBag.DropDownPerLifeRetroGenders, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.PerLifeRetroGenderId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.InsuredName, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.InsuredName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", maxlength = @ViewBag.InsuredNameMaxLength } })
                        @Html.ValidationMessageFor(model => model.InsuredName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.PerLifeRetroCountryId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.PerLifeRetroCountryId, (List<SelectListItem>)ViewBag.DropDownPerLifeRetroCountries, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.PerLifeRetroCountryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.InsuredDateOfBirthStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.EditorFor(model => model.InsuredDateOfBirthStr, new { htmlAttributes = new { id = "InsuredDateOfBirth", @class = "form-control", placeholder = "DD MM YYYY" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('InsuredDateOfBirth')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.InsuredDateOfBirthStr, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.DateOfPolicyExistStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.EditorFor(model => model.DateOfPolicyExistStr, new { htmlAttributes = new { id = "DateOfPolicyExist", @class = "form-control", placeholder = "DD MM YYYY" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfPolicyExist')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.DateOfPolicyExistStr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.PolicyNumber, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.PolicyNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", maxlength = @ViewBag.PolicyNumberMaxLength } })
                        @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.IsProceedToAggregate, htmlAttributes: new { @class = "col-form-label" })
                        <div class="row m-0 p-0">
                            <div class="mr-2"> <p style="color: #004BA2;">No</p> </div>
                            <div class="custom-control custom-switch">
                                @Html.EditorFor(model => model.IsProceedToAggregate, new { htmlAttributes = new { @class = "custom-control-input", placeholder = "Type here" } })
                                <label class="custom-control-label" for="IsProceedToAggregate">Yes</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.InsuredGenderCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.InsuredGenderCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownInsuredGenderCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.InsuredGenderCodePickListDetailId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ExceptionStatusPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.ExceptionStatusPickListDetailId, (List<SelectListItem>)ViewBag.DropDownExceptionStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.ExceptionStatusPickListDetailId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.TerritoryOfIssueCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.TerritoryOfIssueCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownTerritoryOfIssueCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.TerritoryOfIssueCodePickListDetailId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "col-form-label" })
                        @Html.TextAreaFor(model => model.Remark, new { @class = "form-control textarea-auto-expand", placeholder = "Type here", rows = "1" })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.DateOfExceptionDetectedStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.EditorFor(model => model.DateOfExceptionDetectedStr, new { htmlAttributes = new { id = "DateOfExceptionDetected", @class = "form-control", placeholder = "DD MM YYYY" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfExceptionDetected')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.DateOfExceptionDetectedStr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.DateUpdatedStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.EditorFor(model => model.DateUpdatedStr, new { htmlAttributes = new { id = "DateUpdated", @class = "form-control", placeholder = "DD MM YYYY" } })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateUpdated')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.DateUpdatedStr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        @Html.ActionLink("DELETE", "Delete", new { id = Model.Id }, new { @class = "btn btn-del" })
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/textarea-autoresize.js")

    <script>
        $(document).ready(function () {
            dateOffAutoComplete();

            $('#InsuredDateOfBirth, #DateOfExceptionDetected, #DateOfPolicyExist, #DateUpdated').datepicker({
                format: DateFormatDatePickerJs,
            });

            if ('@ViewBag.ReadOnly' == 'True') {
                $("input").prop("disabled", true);
                $("select").prop("disabled", true);
                $('button').prop("disabled", true);
                $('textarea').prop("disabled", true);
            }

            if ('@ViewBag.ReadOnly' == 'True') {
                $('button').prop("disabled", true);
            } else {
                $("[name='__RequestVerificationToken']").prop("disabled", false);
            }

            $('#Remark').autoResize();
            $('#Remark').trigger('keyup');
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }
    </script>
}

