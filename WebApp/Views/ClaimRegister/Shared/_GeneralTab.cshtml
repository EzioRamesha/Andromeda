@model WebApp.Models.ClaimRegisterViewModel

<div class="tab-pane fade show active" id="generalTab" role="tabpanel" aria-labelledby="data-tab">
    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.EntryNo, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.EntryNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @v_model = "ClaimRegister.EntryNo", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.EntryNo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.ClaimId, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.ClaimId, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @v_model = "ClaimRegister.ClaimId", @readonly = true } })
            @Html.ValidationMessageFor(model => model.ClaimId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.InsuredName, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.InsuredName, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type Here", @v_model = "ClaimRegister.InsuredName" } })
            @Html.ValidationMessageFor(model => model.InsuredName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.PolicyNumber, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.PolicyNumber, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type Here", @v_model = "ClaimRegister.PolicyNumber" } })
            @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.InsuredGenderCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.InsuredGenderCode, (List<SelectListItem>)ViewBag.DropDownInsuredGenderCodes, htmlAttributes: new { @class = "form-control selectpicker is-claim", @v_model = "ClaimRegister.InsuredGenderCode" })
            @Html.ValidationMessageFor(model => model.InsuredGenderCode, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.InsuredTobaccoUse, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.InsuredTobaccoUse, (List<SelectListItem>)ViewBag.DropDownInsuredTobaccoUses, htmlAttributes: new { @class = "form-control selectpicker is-claim", @v_model = "ClaimRegister.InsuredTobaccoUse" })
            @Html.ValidationMessageFor(model => model.InsuredTobaccoUse, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.DateOfRegisterStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.DateOfRegisterStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('DateOfRegisterStr')" }, { @"v-model.lazy", @"ClaimRegister.DateOfRegisterStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfRegisterStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.DateOfRegisterStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.CedantDateOfNotificationStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.CedantDateOfNotificationStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('CedantDateOfNotificationStr')" }, { @"v-model.lazy", @"ClaimRegister.CedantDateOfNotificationStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('CedantDateOfNotificationStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.CedantDateOfNotificationStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.InsuredDateOfBirthStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.InsuredDateOfBirthStr, new Dictionary<string, object>() { { "class", "form-control is-claim" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('InsuredDateOfBirthStr')" }, { @"v-model.lazy", @"ClaimRegister.InsuredDateOfBirthStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('InsuredDateOfBirthStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.InsuredDateOfBirthStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.ReinsEffDatePolStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.ReinsEffDatePolStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('ReinsEffDatePolStr')" }, { @"v-model.lazy", @"ClaimRegister.ReinsEffDatePolStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsEffDatePolStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.ReinsEffDatePolStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.ReinsBasisCode, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.EditorFor(model => model.ReinsBasisCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @readonly = true } })
            }
            else
            {
                @Html.DropDownListFor(model => model.ReinsBasisCode, (List<SelectListItem>)ViewBag.DropDownReinsBasisCodes, htmlAttributes: new { @class = "form-control selectpicker", @v_model = "ClaimRegister.ReinsBasisCode" })
            }
            @Html.ValidationMessageFor(model => model.ReinsBasisCode, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.MlreBenefitCode, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.EditorFor(model => model.MlreBenefitCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @readonly = true } })
            }
            else
            {
                @Html.DropDownListFor(model => model.MlreBenefitCode, (List<SelectListItem>)ViewBag.DropDownBenefits, htmlAttributes: new { @class = "form-control selectpicker", @v_model = "ClaimRegister.MlreBenefitCode" })
            }
            @Html.ValidationMessageFor(model => model.MlreBenefitCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.ClaimCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.ClaimCode, (List<SelectListItem>)ViewBag.DropDownClaimCodes, htmlAttributes: new { @class = "form-control selectpicker is-claim", @v_model = "ClaimRegister.ClaimCode" })
            @Html.ValidationMessageFor(model => model.ClaimCode, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.FundsAccountingTypeCode, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.EditorFor(model => model.FundsAccountingTypeCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @readonly = true } })
            }
            else
            {
                @Html.DropDownListFor(model => model.FundsAccountingTypeCode, (List<SelectListItem>)ViewBag.DropDownFundsAccountingTypeCodes, htmlAttributes: new { @class = "form-control selectpicker", @v_model = "ClaimRegister.FundsAccountingTypeCode" })
            }
            @Html.ValidationMessageFor(model => model.FundsAccountingTypeCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.ClaimRecoveryAmtStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.ClaimRecoveryAmtStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here", @v_model = "ClaimRegister.ClaimRecoveryAmtStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.ClaimRecoveryAmtStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.AnnualRiPremStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.AnnualRiPremStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here", @v_model = "ClaimRegister.AnnualRiPremStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.AnnualRiPremStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.RiskQuarter, htmlAttributes: new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.RiskQuarter, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "YYYY MM" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('RiskQuarter')" }, { @"v-model.lazy", @"ClaimRegister.RiskQuarter" }, { @"readonly", @"readonly" } })
            @Html.ValidationMessageFor(model => model.RiskQuarter, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.LastTransactionDateStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.LastTransactionDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('LastTransactionDateStr')" }, { @"v-model.lazy", @"ClaimRegister.LastTransactionDateStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('LastTransactionDateStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.LastTransactionDateStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.RiskPeriodYear, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RiskPeriodYear, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @v_model = "ClaimRegister.RiskPeriodYear", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.RiskPeriodYear, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.RiskPeriodMonth, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RiskPeriodMonth, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @v_model = "ClaimRegister.RiskPeriodMonth", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.RiskPeriodMonth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.DateOfReportedStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.DateOfReportedStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('DateOfReportedStr')" }, { @"v-model.lazy", @"ClaimRegister.DateOfReportedStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfReportedStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.DateOfReportedStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.DateOfEventStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.DateOfEventStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('DateOfEventStr')" }, { @"v-model.lazy", @"ClaimRegister.DateOfEventStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfEventStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.DateOfEventStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.CauseOfEvent, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.CauseOfEvent, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type here", @v_model = "ClaimRegister.CauseOfEvent" } })
            @Html.ValidationMessageFor(model => model.CauseOfEvent, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.TreatyType, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.EditorFor(model => model.TreatyType, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @readonly = true } })
            }
            else
            {
                @Html.DropDownListFor(model => model.TreatyType, (List<SelectListItem>)ViewBag.DropDownTreatyTypes, htmlAttributes: new { @class = "form-control selectpicker", @v_model = "ClaimRegister.TreatyType" })
            }
            @Html.ValidationMessageFor(model => model.TreatyType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.AarPayableStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.AarPayableStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here", @v_model = "ClaimRegister.AarPayableStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.AarPayableStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.CedingTreatyCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.CedingTreatyCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.CedingTreatyCode" } })
            @Html.ValidationMessageFor(model => model.CedingTreatyCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.CampaignCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.CampaignCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.CampaignCode" } })
            @Html.ValidationMessageFor(model => model.CampaignCode, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.CedantClaimEventCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.CedantClaimEventCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.CedantClaimEventCode" } })
            @Html.ValidationMessageFor(model => model.CedantClaimEventCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.MlreReferenceNo, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.MlreReferenceNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.MlreReferenceNo" } })
            @Html.ValidationMessageFor(model => model.MlreReferenceNo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.MlreShareStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">%</div>
                </div>
                @Html.EditorFor(model => model.MlreShareStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.MlreShareStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.MlreShareStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.CurrencyRateStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">%</div>
                </div>
                @Html.EditorFor(model => model.CurrencyRateStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.CurrencyRateStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.CurrencyRateStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.CedingBenefitTypeCode, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.EditorFor(model => model.CedingBenefitTypeCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @readonly = true } })
            }
            else
            {
                @Html.DropDownListFor(model => model.CedingBenefitTypeCode, (List<SelectListItem>)ViewBag.DropDownCedingBenefitTypeCodes, htmlAttributes: new { @class = "form-control selectpicker", @v_model = "ClaimRegister.CedingBenefitTypeCode" })
            }
            @Html.ValidationMessageFor(model => model.CedingBenefitTypeCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.CedingPlanCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.CedingPlanCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.CedingPlanCode" } })
            @Html.ValidationMessageFor(model => model.CedingPlanCode, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.CedingBenefitRiskCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.CedingBenefitRiskCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.CedingBenefitRiskCode" } })
            @Html.ValidationMessageFor(model => model.CedingBenefitRiskCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.RetroParty1, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RetroParty1, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.RetroParty1" } })
            @Html.ValidationMessageFor(model => model.RetroParty1, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.RetroRecovery1Str, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RetroRecovery1Str, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.RetroRecovery1Str" } })
            @Html.ValidationMessageFor(model => model.RetroRecovery1Str, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.RetroParty2, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RetroParty2, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.RetroParty2" } })
            @Html.ValidationMessageFor(model => model.RetroParty2, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.RetroRecovery2Str, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RetroRecovery2Str, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.RetroRecovery2Str" } })
            @Html.ValidationMessageFor(model => model.RetroRecovery2Str, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.RetroParty3, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RetroParty3, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.RetroParty3" } })
            @Html.ValidationMessageFor(model => model.RetroParty3, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.RetroRecovery3Str, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.RetroRecovery3Str, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.RetroRecovery3Str" } })
            @Html.ValidationMessageFor(model => model.RetroRecovery3Str, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.MlreRetainAmountStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.MlreRetainAmountStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here", @v_model = "ClaimRegister.MlreRetainAmountStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.MlreRetainAmountStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.LateInterestStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.LateInterestStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here", @v_model = "ClaimRegister.LateInterestStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.LateInterestStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.ExGratiaStr, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.ExGratiaStr, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type here", @v_model = "ClaimRegister.ExGratiaStr" } })
            @Html.ValidationMessageFor(model => model.ExGratiaStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.Layer1SumReinStr, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.Layer1SumReinStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.Layer1SumReinStr" } })
            @Html.ValidationMessageFor(model => model.Layer1SumReinStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.TempD1Str, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.TempD1Str, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('TempD1Str')" }, { @"v-model.lazy", @"ClaimRegister.TempD1Str" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('TempD1Str')" />
            </div>
            @Html.ValidationMessageFor(model => model.TempD1Str, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.TempD2Str, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.TempD2Str, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('TempD2Str')" }, { @"v-model.lazy", @"ClaimRegister.TempD2Str" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('TempD2Str')" />
            </div>
            @Html.ValidationMessageFor(model => model.TempD2Str, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.TempS1, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.TempS1, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.TempS1" } })
            @Html.ValidationMessageFor(model => model.TempS1, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.TempS2, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.TempS2, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.TempS2" } })
            @Html.ValidationMessageFor(model => model.TempS2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.TempA1Str, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.TempA1Str, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.TempA1Str" } })
            @Html.ValidationMessageFor(model => model.TempA1Str, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.TempA2Str, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.TempA2Str, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.TempA2Str" } })
            @Html.ValidationMessageFor(model => model.TempA2Str, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.ForeignClaimRecoveryAmtStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">MYR</div>
                </div>
                @Html.EditorFor(model => model.ForeignClaimRecoveryAmtStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here", @v_model = "ClaimRegister.ForeignClaimRecoveryAmtStr" } })
            </div>
            @Html.ValidationMessageFor(model => model.ForeignClaimRecoveryAmtStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.CurrencyCode, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.EditorFor(model => model.CurrencyCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
            }
            else
            {
                @Html.DropDownListFor(model => model.CurrencyCode, (List<SelectListItem>)ViewBag.DropDownCurrencyCodes, htmlAttributes: new { @class = "form-control selectpicker", @v_model = "ClaimRegister.CurrencyCode" })
            }
            @Html.ValidationMessageFor(model => model.CurrencyCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.SaFactorStr, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.SaFactorStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here", @v_model = "ClaimRegister.SaFactorStr" } })
            @Html.ValidationMessageFor(model => model.SaFactorStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.TransactionDateWopStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.TransactionDateWopStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('TransactionDateWopStr')" }, { @"v-model.lazy", @"ClaimRegister.TransactionDateWopStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('TransactionDateWopStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.TransactionDateWopStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.Mfrs17AnnualCohort, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.Mfrs17AnnualCohort, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.Mfrs17AnnualCohort", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Mfrs17AnnualCohort, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.Mfrs17ContractCode, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.Mfrs17ContractCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.Mfrs17ContractCode" } })
            @Html.ValidationMessageFor(model => model.Mfrs17ContractCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.IssueDatePolStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.IssueDatePolStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('IssueDatePolStr')" }, { @"v-model.lazy", @"ClaimRegister.IssueDatePolStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('IssueDatePolStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.IssueDatePolStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.PolicyExpiryDateStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.PolicyExpiryDateStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('PolicyExpiryDateStr')" }, { @"v-model.lazy", @"ClaimRegister.PolicyExpiryDateStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('PolicyExpiryDateStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.PolicyExpiryDateStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.PolicyTerm, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">Month</div>
                </div>
                @Html.EditorFor(model => model.PolicyTerm, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.PolicyTerm" } })
            </div>
            @Html.ValidationMessageFor(model => model.PolicyTerm, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.ClaimReasonId, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.DropDownListFor(model => model.ClaimReasonId, (List<SelectListItem>)ViewBag.DropDownClaimReasons, htmlAttributes: new { @class = "form-control selectpicker is-claim-only", @v_model = "ClaimRegister.ClaimReasonId" })
            }
            else
            {
                @Html.EditorFor(model => model.ClaimReasonBo.Reason, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
            }
            @Html.ValidationMessageFor(model => model.ClaimReasonId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.PolicyDuration, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">Day</div>
                </div>
                @Html.EditorFor(model => model.PolicyDuration, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @v_model = "ClaimRegister.PolicyDuration" } })
            </div>
            @Html.ValidationMessageFor(model => model.PolicyDuration, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.AddInfo, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.AddInfo, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type here", @v_model = "ClaimRegister.AddInfo" } })
            @Html.ValidationMessageFor(model => model.AddInfo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.Remark1, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.Remark1, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type here", @v_model = "ClaimRegister.Remark1" } })
            @Html.ValidationMessageFor(model => model.Remark1, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.Remark2, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.Remark2, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type here", @v_model = "ClaimRegister.Remark2" } })
            @Html.ValidationMessageFor(model => model.Remark2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.ClaimAssessorId, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.DropDownListFor(model => model.ClaimAssessorId, (List<SelectListItem>)ViewBag.DropDownClaimAssessors, htmlAttributes: new { @class = "form-control selectpicker is-claim-only", @v_model = "ClaimRegister.ClaimAssessorId" })
            }
            else
            {
                @Html.EditorFor(model => model.ClaimAssessorBo.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
            }
            @Html.ValidationMessageFor(model => model.ClaimAssessorId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control is-claim", placeholder = "Type here", @v_model = "ClaimRegister.Comment" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.ClaimDecisionStatusName, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.ClaimDecisionStatusName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @v_model = "ClaimRegister.ClaimDecisionStatusName", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ClaimDecisionStatusName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.DateApprovedStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.DateApprovedStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('DateApprovedStr')" }, { @"v-model.lazy", @"ClaimRegister.DateApprovedStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateApprovedStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.DateApprovedStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.TargetDateToIssueInvoiceStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.TargetDateToIssueInvoiceStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('TargetDateToIssueInvoiceStr')" }, { @"v-model.lazy", @"ClaimRegister.TargetDateToIssueInvoiceStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('TargetDateToIssueInvoiceStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.TargetDateToIssueInvoiceStr, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.DateOfIntimationStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.DateOfIntimationStr, new Dictionary<string, object>() { { "class", "form-control" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('DateOfIntimationStr')" }, { @"v-model.lazy", @"ClaimRegister.DateOfIntimationStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateOfIntimationStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.DateOfIntimationStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.BusinessOrigin, htmlAttributes: new { @class = "col-form-label" })
            @Html.EditorFor(model => model.BusinessOrigin, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Here", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.BusinessOrigin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row mt-4">
        <div class="col-form-label col-12 pb-0 font-weight-bold">Sign Off</div>
        <div class="form-group col-md-6 mid-line-1">
            @Html.LabelFor(model => model.SignOffById, htmlAttributes: new { @class = "col-form-label" })
            @if (Model.IsClaim)
            {
                @Html.DropDownListFor(model => model.SignOffById, (List<SelectListItem>)ViewBag.DropDownSignOffUsers, htmlAttributes: new { @class = "form-control selectpicker is-claim-only", @v_model = "ClaimRegister.SignOffById" })
            }
            else
            {
                @Html.EditorFor(model => model.SignOffByBo.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", @readonly = true } })
            }
        </div>
        <div class="form-group col-md-6 mid-line-2">
            @Html.LabelFor(model => model.SignOffDateStr, htmlAttributes: new { @class = "col-form-label" })
            <div class="input-w-icon">
                @Html.TextBoxFor(model => model.SignOffDateStr, new Dictionary<string, object>() { { "class", "form-control is-claim-only" }, { "placeholder", "DD MM YYYY" }, { "autocomplete", "off" }, { @"v-on:click", @"openDatePicker('SignOffDateStr')" }, { @"v-model.lazy", @"ClaimRegister.SignOffDateStr" } })
                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('SignOffDateStr')" />
            </div>
            @Html.ValidationMessageFor(model => model.SignOffDateStr, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="modal fade" id="duplicateClaimsDataModal" tabindex="-1" role="dialog" aria-labelledby="duplicateClaimsDataTitle" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Duplication Check</h5>
                <button type="button" class="close prevent-disable" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="table-responsive mb-4">
                    <table class="table table-hover my-3">
                        <thead>
                            <tr>
                                <th>Claim ID</th>
                                <th>Insured Name</th>
                                <th>Policy No</th>
                                <th>Date of Birth</th>
                                <th>Date Registered</th>
                                <th>Claim Code</th>
                                <th>Treaty Code</th>
                                <th>Claim Amount (MYR)</th>
                                <th>Claim Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.DuplicateClaimRegisterBos != null)
                            {
                                foreach (BusinessObject.ClaimRegisterBo bo in (List<BusinessObject.ClaimRegisterBo>)ViewBag.DuplicateClaimRegisterBos)
                                {
                                    <tr>
                                        <td>@bo.ClaimId</td>
                                        <td>@bo.InsuredName</td>
                                        <td>@bo.PolicyNumber</td>
                                        <td>@bo.InsuredDateOfBirthStr</td>
                                        <td>@bo.DateOfRegisterStr</td>
                                        <td>@bo.ClaimCode</td>
                                        <td>@bo.TreatyCode</td>
                                        <td>@bo.ClaimRecoveryAmtStr</td>
                                        <td>
                                            <span class="status-badge">
                                                @BusinessObject.ClaimRegisterBo.GetStatusName(bo.ClaimStatus)
                                            </span>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel prevent-disable" data-dismiss="modal" style="width: auto;">CLOSE</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="matchClaimsDataModal" tabindex="-1" role="dialog" aria-labelledby="matchClaimsDataTitle" aria-hidden="true">
    <div class="modal-lg modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Match Claims Data</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div v-if="MatchClaimDataValidation.length > 0" class="alert alert-danger">
                    <ul>
                        <li v-for="validation in MatchClaimDataValidation">{{validation}}</li>
                    </ul>
                </div>
                <div class="form-row">
                    <div class="col-form-label col-12 pb-0 font-weight-bold">Search</div>
                    <div class="form-group col-md-6 mid-line-1">
                        <label class="col-form-label" for="MatchClaimDataPolicyNumber">Policy Number</label>
                        <input type="text" class="form-control" v-model="MatchClaimData.PolicyNumber" id="MatchClaimDataPolicyNumber" placeholder="Type Here">
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        <label class="col-form-label" for="MatchClaimDataCedingPlanCode">Ceding Plan Code</label>
                        <input type="text" class="form-control" v-model="MatchClaimData.CedingPlanCode" id="MatchClaimDataCedingPlanCode" placeholder="Type Here">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        <label class="col-form-label" for="MatchClaimDataInsuredName">Insured Name</label>
                        <input type="text" class="form-control" v-model="MatchClaimData.InsuredName" id="MatchClaimDataInsuredName" placeholder="Type Here">
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        <label class="col-form-label" for="MatchClaimDataSoaQuarter">SOA Quarter</label>
                        <input type="text" class="form-control" v-model="MatchClaimData.SoaQuarter" id="MatchClaimDataSoaQuarter" v-on:click="openDatePicker('MatchClaimDataSoaQuarter')" placeholder="Type Here" autocomplete="off">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        <label class="col-form-label" for="MatchClaimDataRiskQuarter">Risk Quarter</label>
                        <input type="text" class="form-control" v-model="MatchClaimData.RiskQuarter" id="MatchClaimDataRiskQuarter" v-on:click="openDatePicker('MatchClaimDataRiskQuarter')" placeholder="Type Here" autocomplete="off">
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        <label class="col-form-label" for="MatchClaimDataDateOfEvent">Date of Event</label>
                        <input type="text" class="form-control" v-model="MatchClaimData.DateOfEvent" id="MatchClaimDataDateOfEvent" v-on:click="openDatePicker('MatchClaimDataDateOfEvent')" placeholder="DD MM YYYY" autocomplete="off">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        <label class="col-form-label" for="MatchClaimDataClaimCode">Claim Code</label>
                        <select v-model="MatchClaimData.ClaimCode" class="form-control selectpicker" id="MatchClaimDataClaimCode">
                            <option v-for="claimCode in ClaimCodes" :value="claimCode.Value">{{ claimCode.Text }}</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        <label class="col-form-label" for="MatchClaimDataTreatyCode">Treaty Code</label>
                        <select v-model="MatchClaimData.TreatyCode" class="form-control selectpicker" id="MatchClaimDataTreatyCode">
                            <option v-for="treatyCode in TreatyCodes" :value="treatyCode.Value">{{ treatyCode.Text }}</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        <label class="col-form-label" for="MatchClaimDataDateOfBirth">Date of Birth</label>
                        <input type="text" class="form-control" v-model="MatchClaimData.DateOfBirth" id="MatchClaimDataDateOfBirth" v-on:click="openDatePicker('MatchClaimDataDateOfBirth')" placeholder="DD MM YYYY" autocomplete="off">
                    </div>
                </div>

                <div class="table-responsive mb-4">
                    <table class="table table-hover my-3">
                        <thead>
                            <tr>
                                <th class="w-10">Record Type</th>
                                <th class="w-10">Field Id</th>
                                <th class="w-10">Entry No</th>
                                <th class="w-10">Type</th>
                                <th class="w-10">MLRe Event Code</th>
                                <th class="w-10">Claim Code</th>
                                <th class="w-10">Claim ID</th>
                                <th class="w-10">Policy No</th>
                                <th class="w-10">Treaty Types</th>
                                <th class="w-10">DOR</th>
                                <th class="w-10">Family Name</th>
                                <th class="w-10">Sex</th>
                                <th class="w-10">Sum Reinsurance</th>
                                <th class="w-10">Post-Computation Status</th>
                                <th class="w-10">Post-Validation Status</th>
                                <th class="w-10">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-if="MatchedClaimDatas.length == 0">
                                <td colspan="16" class="no-data">No available data found.</td>
                            </tr>
                            <tr v-for="(claimRegister, index) in MatchedClaimDatas">
                                <td>{{ claimRegister.RecordType }}</td>
                                <td>{{ claimRegister.Id }}</td>
                                <td>{{ claimRegister.EntryNo }}</td>
                                <td>{{ claimRegister.ClaimTransactionTypeStr }}</td>
                                <td>{{ claimRegister.MlreEventCodeId }}</td>
                                <td>{{ claimRegister.ClaimCodeId }}</td>
                                <td>{{ claimRegister.ClaimId }}</td>
                                <td>{{ claimRegister.PolicyNumber }}</td>
                                <td>{{ claimRegister.TreatyType }}</td>
                                <td>{{ claimRegister.DateOfRegisterStr }}</td>
                                <td>{{ claimRegister.InsuredName }}</td>
                                <td>{{ claimRegister.InsuredGenderCode }}</td>
                                <td>{{ claimRegister.Layer1SumRein }}</td>
                                <td>{{ claimRegister.PostComputationStatusStr }}</td>
                                <td>{{ claimRegister.PostValidationStatusStr }}</td>
                                <td>
                                    <input type="radio" name="selectClaimRegister" :value="index">
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel mr-auto" data-dismiss="modal" style="width: auto;">CANCEL</button>
                <button type="button" class="btn btn-submit" v-on:click="searchClaimData()" style="width: auto;">SEARCH</button>
                <button type="button" class="btn btn-submit" v-on:click="selectClaimData()" :disabled="MatchedClaimDatas.length == 0">SELECT</button>
            </div>
        </div>
    </div>
</div>