@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.FacMasterListingViewModel>

@{
    ViewBag.Title = "FAC Master Listing";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;

    PagedList.IPagedList<WebApp.Models.FacMasterListingViewModel> ListingList = ViewBag.ListingList as PagedList.IPagedList<WebApp.Models.FacMasterListingViewModel>;
    PagedList.IPagedList<WebApp.Models.FacMasterListingUploadViewModel> UploadList = ViewBag.UploadList as PagedList.IPagedList<WebApp.Models.FacMasterListingUploadViewModel>;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-8 text-right  btn-row-inline">
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <ul class="nav nav-tabs">
            <li class="nav-item"><a data-toggle="tab" class="@(ViewBag.ActiveTab == null || ViewBag.ActiveTab == 1 ? "active" : "")  underline-tab" href="#listing">Listing</a></li>
            <li class="nav-item"><a data-toggle="tab" class="@(ViewBag.ActiveTab == 2 ? "active" : "") underline-tab" href="#upload">Upload</a></li>
        </ul>

        <div class="tab-content underline-tab-content">
            <div class="tab-pane fade @(ViewBag.ActiveTab == null || ViewBag.ActiveTab == 1 ? "show active" : "")" id="listing" role="tabpanel" aria-labelledby="listing-tab">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-2">
                        <div class="form-group row pl-3" style="margin-bottom: 50px;">
                        </div>
                    </div>
                    <div class="form-group col-md-6 mid-line-2 text-right btn-row-inline">
                        <div class="file btn btn-upload" data-loading-text="Processing...<span></span>" style="display: inline-flex;">
                            <label>UPLOAD</label>
                            @using (Html.BeginForm("Upload", "FacMasterListing", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="file" id="dataFile" name="upload" accept=".csv" onchange="this.form.submit()" />
                            }
                        </div>
                        <div class="btn-group">
                            <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                DOWNLOAD AS
                            </button>
                            <div class="dropdown-menu">
                                @Html.ActionLink("All", "Download", new { type = 1 }, new { @class = "dropdown-item" })
                                @Html.ActionLink("Filtered", "Download", new
                                {
                                    type = 2,
                                    UniqueId = routeValue["UniqueId"],
                                    EwarpNumber = routeValue["EwarpNumber"],
                                    InsuredName = routeValue["InsuredName"],
                                    InsuredDateOfBirth = routeValue["InsuredDateOfBirth"],
                                    InsuredGenderCodePickListDetailId = routeValue["InsuredGenderCodePickListDetailId"],
                                    CedantId = routeValue["CedantId"],
                                    PolicyNumber = routeValue["PolicyNumber"],
                                    FlatExtraAmountOffered = routeValue["FlatExtraAmountOffered"],
                                    FlatExtraDuration = routeValue["FlatExtraDuration"],
                                    BenefitCode = routeValue["BenefitCode"],
                                    SumAssuredOffered = routeValue["SumAssuredOffered"],
                                    EwarpActionCode = routeValue["EwarpActionCode"],
                                    UwRatingOffered = routeValue["UwRatingOffered"],
                                    OfferLetterSentDate = routeValue["OfferLetterSentDate"],
                                    UwOpinion = routeValue["UwOpinion"],
                                    Remark = routeValue["Remark"],
                                    CedingBenefitTypeCode = routeValue["CedingBenefitTypeCode"],
                                }, new { @class = "dropdown-item" })
                                @Html.ActionLink("Template", "Download", new { type = 3 }, new { @class = "dropdown-item" })
                            </div>
                        </div>
                        <a href="@Url.Action("Create")" class="btn btn-add">
                            ADD FAC MASTER LISTING
                        </a>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortUniqueId;
                                        @Shared.Html.Sorter(ViewBag, "Unique ID", "UniqueId", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortEwarpNumber;
                                        @Shared.Html.Sorter(ViewBag, "eWarp Number", "EwarpNumber", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortInsuredName;
                                        @Shared.Html.Sorter(ViewBag, "Insured Name", "InsuredName", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortInsuredDateOfBirth;
                                        @Shared.Html.Sorter(ViewBag, "Insured Date Of Birth", "InsuredDateOfBirth", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortInsuredGenderCodePickListDetailId;
                                        @Shared.Html.Sorter(ViewBag, "Insured Gender Code", "InsuredGenderCodePickListDetailId", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortCedantId;
                                        @Shared.Html.Sorter(ViewBag, "Ceding Company", "CedantId", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().PolicyNumber)
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortFlatExtraAmountOffered;
                                        @Shared.Html.Sorter(ViewBag, "Flat Extra Amount Offered", "FlatExtraAmountOffered", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortFlatExtraDuration;
                                        @Shared.Html.Sorter(ViewBag, "Flat Extra Duration", "FlatExtraDuration", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().BenefitCode)
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortSumAssuredOffered;
                                        @Shared.Html.Sorter(ViewBag, "Sum Assured Offered", "SumAssuredOffered", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortEwarpActionCode;
                                        @Shared.Html.Sorter(ViewBag, "eWarp Action Code", "EwarpActionCode", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortUwRatingOffered;
                                        @Shared.Html.Sorter(ViewBag, "UW Rating Offered", "UwRatingOffered", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @{
                                        routeValue["SortOrder"] = ViewBag.SortOfferLetterSentDate;
                                        @Shared.Html.Sorter(ViewBag, "Offer Letter Sent Date", "OfferLetterSentDate", @Url.Action("Index", routeValue))
                                    }
                                </th>
                                <th class="w-10">
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().UwOpinion)
                                </th>
                                <th class="w-10">
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().Remark)
                                </th>
                                <th class="w-10">
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().CedingBenefitTypeCode)
                                </th>
                                <th class="text-center w-5">
                                    Action
                                </th>
                            </tr>

                            <tr>
                                @using (Html.BeginForm("Index", "FacMasterListing", FormMethod.Get))
                                {
                                    string sortOrder = ViewBag.SortOrder;

                                    @Html.Hidden("SortOrder", sortOrder)
                                    <th>
                                        @Html.TextBox("UniqueId", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("EwarpNumber", null, new { @class = "form-control", placeholder = "Type here", type = "number", min = "0" })
                                    </th>
                                    <th>
                                        @Html.TextBox("InsuredName", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("InsuredDateOfBirth", null, new { id = "InsuredDateOfBirth", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('InsuredDateOfBirth')" />
                                    </th>
                                    <th>
                                        @Html.DropDownList("InsuredGenderCodePickListDetailId", (List<SelectListItem>)ViewBag.DropDownInsuredGenderCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("CedantId", (List<SelectListItem>)ViewBag.DropDownCedants, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.TextBox("PolicyNumber", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("FlatExtraAmountOffered", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("FlatExtraDuration", null, new { @class = "form-control", placeholder = "Type here", type = "number", min = "0" })
                                    </th>
                                    <th>
                                        @Html.TextBox("BenefitCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("SumAssuredOffered", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("EwarpActionCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("UwRatingOffered", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("OfferLetterSentDate", null, new { id = "OfferLetterSentDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('OfferLetterSentDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("UwOpinion", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("Remark", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("CedingBenefitTypeCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th class="text-center align-middle">
                                        <div class="btn-row-action">
                                            <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                                <span class="fas fa-backspace" />
                                            </a>
                                            <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                        </div>
                                    </th>
                                }
                            </tr>
                        </thead>

                        @if (Model.Count > 0)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UniqueId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EwarpNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.InsuredName)
                                    </td>
                                    <td>
                                        @if (item.InsuredDateOfBirth.HasValue)
                                        {
                                            @item.InsuredDateOfBirth.Value.ToString(Shared.Util.GetDateFormat())
                                        }
                                    </td>
                                    <td>
                                        @if (item.InsuredGenderCodePickListDetail != null)
                                        {
                                            @item.InsuredGenderCodePickListDetail.ToString()
                                        }
                                    </td>
                                    <td>
                                        @if (item.Cedant != null)
                                        {
                                            @item.Cedant.ToString()
                                        }
                                    </td>
                                    <td>
                                        @Shared.Util.GetTruncatedValue(item.PolicyNumber)
                                    </td>
                                    <td class="text-right">
                                        @Shared.Util.DoubleToString(item.FlatExtraAmountOffered)
                                    </td>
                                    <td class="text-right">
                                        @Html.DisplayFor(modelItem => item.FlatExtraDuration)
                                    </td>
                                    <td>
                                        @Shared.Util.GetTruncatedValue(item.BenefitCode)
                                    </td>
                                    <td class="text-right">
                                        @Shared.Util.DoubleToString(item.SumAssuredOffered)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EwarpActionCode)
                                    </td>
                                    <td class="text-right">
                                        @Shared.Util.DoubleToString(item.UwRatingOffered)
                                    </td>
                                    <td>
                                        @if (item.OfferLetterSentDate.HasValue)
                                        {
                                            @item.OfferLetterSentDate.Value.ToString(Shared.Util.GetDateFormat())
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UwOpinion)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Remark)
                                    </td>
                                    <td>
                                        @Shared.Util.GetTruncatedValue(item.CedingBenefitTypeCode)
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="fas fa-ellipsis-v dropbtn" />
                                            </button>
                                            <div class="dropdown-menu">
                                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="18" class="no-data">No available data found.</td>
                            </tr>
                        }

                    </table>
                </div>

                <div class="pagination-footer btn-row">
                    <div class="row">
                        <div class="col-md-4">
                            @Html.Partial("_PageInfo")
                        </div>
                        <div class="col-md-8">
                            @Html.PagedListPager(Model, Page => Url.Action("Index", new
                            {
                                TreatyCode = routeValue["UniqueId"],
                                EwarpNumber = routeValue["EwarpNumber"],
                                InsuredName = routeValue["InsuredName"],
                                InsuredDateOfBirth = routeValue["InsuredDateOfBirth"],
                                InsuredGenderCodePickListDetailId = routeValue["InsuredGenderCodePickListDetailId"],
                                CedantId = routeValue["CedantId"],
                                PolicyNumber = routeValue["PolicyNumber"],
                                FlatExtraAmountOffered = routeValue["FlatExtraAmountOffered"],
                                FlatExtraDuration = routeValue["FlatExtraDuration"],
                                BenefitCode = routeValue["BenefitCode"],
                                SumAssuredOffered = routeValue["SumAssuredOffered"],
                                EwarpActionCode = routeValue["EwarpActionCode"],
                                UwRatingOffered = routeValue["UwRatingOffered"],
                                OfferLetterSentDate = routeValue["OfferLetterSentDate"],
                                UwOpinion = routeValue["UwOpinion"],
                                Remark = routeValue["Remark"],
                                CedingBenefitTypeCode = routeValue["CedingBenefitTypeCode"],
                                SortOrder = ViewBag.SortOrder,
                                Page,
                            }), Shared.Html.GetPagedListRenderOptions())
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-pane fade @(ViewBag.ActiveTab == 2 ? "show active" : "")" id="upload" role="tabpanel" aria-labelledby="upload-tab">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th class="w-20">
                                    Date & Time Uploaded
                                </th>
                                <th class="w-25">
                                    File Name
                                </th>
                                <th class="w-15">
                                    Submitted By
                                </th>
                                <th class="w-10">
                                    Status
                                </th>
                                <th class="w-5 text-center">
                                    Action
                                </th>
                            </tr>
                            <tr>
                                @using (Html.BeginForm("Index", "FacMasterListing", FormMethod.Get))
                                {
                                    @Html.Hidden("UploadSortOrder", (string)ViewBag.UploadSortOrder)
                                    @Html.Hidden("ActiveTab", 2)
                                    <th>
                                        @Html.TextBox("UploadCreatedAt", null, new { @class = "form-control", placeholder = "DD MM YYYY", @onclick = "openDatePicker(this.id)" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('UploadCreatedAt')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("UploadFileName", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("UploadSubmittedBy", (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("UploadStatus", (List<SelectListItem>)ViewBag.UploadStatusItems, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th class="text-center">
                                        <div class="btn-row-action">
                                            <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                                <span class="fas fa-backspace" />
                                            </a>
                                            <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                        </div>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @if (UploadList.Count > 0)
                            {
                                foreach (var item in UploadList)
                                {
                                    <tr>
                                        <td>@(item.CreatedAt != null ? item.CreatedAt.ToString(Shared.Util.GetDateTimeFormat()) : null)</td>
                                        <td>@item.FileName</td>
                                        <td>
                                            @Services.Identity.UserService.GetNameById(item.CreatedById)
                                        </td>
                                        <td>
                                            <span class="@BusinessObject.RateTableMappingUploadBo.GetStatusClass(item.Status)">
                                                @BusinessObject.RateTableMappingUploadBo.GetStatusName(item.Status)
                                            </span>
                                        </td>
                                        <td>
                                            @if (item.Status == BusinessObject.RateTableMappingUploadBo.StatusFailed)
                                            {
                                                <span class="badge badge-failed" onclick="uploadError(@item.Id)">Download Error</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="no-data">No available data found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @{
                    ViewBag.CurrentPageNumber = UploadList.PageNumber;
                    ViewBag.CurrentPageItems = UploadList.Count;
                    ViewBag.PageSize = UploadList.PageSize;
                    ViewBag.Total = ViewBag.UploadTotal;
                }
                <div class="pagination-footer btn-row">
                    <div class="row">
                        <div class="col-md-4">
                            @Html.Partial("_PageInfo")
                        </div>
                        <div class="col-md-8">
                            @Html.PagedListPager(UploadList, Page => Url.Action("Index", new
                       {
                           UploadCreatedAt = routeValue["UploadCreatedAt"],
                           UploadFileName = routeValue["UploadFileName"],
                           UploadSubmittedBy = routeValue["UploadSubmittedBy"],
                           UploadStatus = routeValue["UploadStatus"],
                           UploadSortOrder = ViewBag.UploadSortOrder,
                           UploadPage = Page,
                           ActiveTab = 2
                       }), Shared.Html.GetPagedListRenderOptions())
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="errorModalLabel">Error</h5>
            </div>
            <div class="modal-body">
                <p id="uploadErrors"></p>
                <div class="text-right form-row-btn">
                    <button type="button" class="btn btn-cancel" data-dismiss="modal">CLOSE</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var DownloadErrorUrl = "@(Url.Action("DownloadError"))";

        $(document).ready(function () {
            dateOffAutoComplete();

            $('#InsuredDateOfBirth').datepicker({
                format: DateFormatDatePickerJs,
            });
            $('#OfferLetterSentDate').datepicker({
                format: DateFormatDatePickerJs,
            });
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }

        function uploadError(id) {
            window.location.href = DownloadErrorUrl + "?id=" + id;
        }
    </script>
}
