@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.RateTableViewModel>

@{
    ViewBag.Title = "Rate Table Mapping";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;

    PagedList.IPagedList<WebApp.Models.RateTableViewModel> ListingList = ViewBag.ListingList as PagedList.IPagedList<WebApp.Models.RateTableViewModel>;
    PagedList.IPagedList<WebApp.Models.RateTableMappingUploadViewModel> UploadList = ViewBag.UploadList as PagedList.IPagedList<WebApp.Models.RateTableMappingUploadViewModel>;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-8 text-right  btn-row-inline">
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <ul class="nav nav-tabs">
            <li class="nav-item"><a data-toggle="tab" class="@(ViewBag.ActiveTab == null || ViewBag.ActiveTab == 1 ? "active" : "")  underline-tab" href="#listing">Listing</a></li>
            <li class="nav-item"><a data-toggle="tab" class="@(ViewBag.ActiveTab == 2 ? "active" : "") underline-tab" href="#upload">Upload</a></li>
        </ul>

        <div class="tab-content underline-tab-content">
            <div class="tab-pane fade @(ViewBag.ActiveTab == null || ViewBag.ActiveTab == 1 ? "show active" : "")" id="listing" role="tabpanel" aria-labelledby="listing-tab">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-2">
                        <div class="form-group row pl-3" style="margin-bottom: 50px;">
                        </div>
                    </div>
                    <div class="form-group col-md-6 mid-line-2 text-right btn-row-inline">
                        <div class="file btn btn-upload" data-loading-text="Processing...<span></span>" style="display: inline-flex;">
                            <label>UPLOAD</label>
                            @using (Html.BeginForm("Upload", "RateTableMapping", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="file" id="dataFile" name="upload" accept=".csv" onchange="this.form.submit()" />
                            }
                        </div>
                        <div class="btn-group">
                            <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                DOWNLOAD AS
                            </button>
                            <div class="dropdown-menu">
                                @Html.ActionLink("All", "Download", new { type = 1 }, new { @class = "dropdown-item" })
                                @Html.ActionLink("Filtered", "Download", new
                                {
                                    type = 2,
                                    CedantId = routeValue["CedantId"],
                                    TreatyCode = routeValue["TreatyCode"],
                                    CedingTreatyCode = routeValue["CedingTreatyCode"],
                                    CedingPlanCode = routeValue["CedingPlanCode"],
                                    CedingPlanCode2 = routeValue["CedingPlanCode2"],
                                    CedingBenefitTypeCode = routeValue["CedingBenefitTypeCode"],
                                    CedingBenefitRiskCode = routeValue["CedingBenefitRiskCode"],
                                    PolicyTermFrom = routeValue["PolicyTermFrom"],
                                    PolicyTermTo = routeValue["PolicyTermTo"],
                                    PolicyDurationFrom = routeValue["PolicyDurationFrom"],
                                    PolicyDurationTo = routeValue["PolicyDurationTo"],
                                    GroupPolicyNumber = routeValue["GroupPolicyNumber"],
                                    BenefitId = routeValue["BenefitId"],
                                    ReinsEffDatePolStartDate = routeValue["ReinsEffDatePolStartDate"],
                                    ReinsEffDatePolEndDate = routeValue["ReinsEffDatePolEndDate"],
                                    ReportingStartDate = routeValue["ReportingStartDate"],
                                    ReportingEndDate = routeValue["ReportingEndDate"],
                                    AttainedAgeFrom = routeValue["AttainedAgeFrom"],
                                    AttainedAgeTo = routeValue["AttainedAgeTo"],
                                    PremiumFrequencyCodePickListDetailId = routeValue["PremiumFrequencyCodePickListDetailId"],
                                    PolicyAmountFrom = routeValue["PolicyAmountFrom"],
                                    PolicyAmountTo = routeValue["PolicyAmountTo"],
                                    AarFrom = routeValue["AarFrom"],
                                    AarTo = routeValue["AarTo"],
                                    ReinsBasisCodePickListDetailId = routeValue["ReinsBasisCodePickListDetailId"],
                                    RateId = routeValue["RateId"],
                                    RiDiscountCode = routeValue["RiDiscountCode"],
                                    LargeDiscountCode = routeValue["LargeDiscountCode"],
                                    GroupDiscountCode = routeValue["GroupDiscountCode"],
                                }, new { @class = "dropdown-item" })
                                @Html.ActionLink("Template", "Download", new { type = 3 }, new { @class = "dropdown-item" })
                            </div>
                        </div>
                        <a href="@Url.Action("Create")" class="btn btn-add">
                            ADD RATE TABLE MAPPING
                        </a>
                    </div>
                </div>

                @using (Html.BeginForm("Index", "RateTableMapping", FormMethod.Get))
                {
                    <div class="form-row">
                        <div class="form-group col-md-6 mid-line-2">
                            <div class="form-group row pl-3" style="margin-bottom: 50px;">
                                @Html.Label("Ceding Company", htmlAttributes: new { @class = "col-form-label font-weight-bold" })
                                <div class="col-sm-4">
                                    @Html.DropDownList("CedantId", (List<SelectListItem>)ViewBag.DropDownCedants, htmlAttributes: new { @class = "form-control selectpicker", @onchange = "getRelatedDropDown(this.value)" })
                                </div>
                                <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                            </div>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().TreatyCode)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().CedingTreatyCode)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().CedingPlanCode)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().CedingPlanCode2)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().CedingBenefitTypeCode)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().CedingBenefitRiskCode)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().PolicyTermFrom)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().PolicyTermTo)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().PolicyDurationFrom)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().PolicyDurationTo)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().GroupPolicyNumber)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().BenefitId)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().ReinsEffDatePolStartDate)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().ReinsEffDatePolEndDate)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().ReportingStartDate)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().ReportingEndDate)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().AttainedAgeFrom)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().AttainedAgeTo)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().PremiumFrequencyCodePickListDetailId)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().PolicyAmountFrom)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().PolicyAmountTo)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().AarFrom)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().AarTo)
                                    </th>
                                    <th class="w-10">
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().ReinsBasisCodePickListDetailId)
                                    </th>
                                    <th class="w-10">
                                        @{
                                            routeValue["SortOrder"] = ViewBag.SortRateId;
                                            @Shared.Html.Sorter(ViewBag, "Rate Table Code", "RateId", @Url.Action("Index", routeValue))
                                        }
                                    </th>
                                    <th class="w-10">
                                        @{
                                            routeValue["SortOrder"] = ViewBag.SortRiDiscountCode;
                                            @Shared.Html.Sorter(ViewBag, "RI Discount Code", "RiDiscountCode", @Url.Action("Index", routeValue))
                                        }
                                    </th>
                                    <th class="w-10">
                                        @{
                                            routeValue["SortOrder"] = ViewBag.SortLargeDiscountCode;
                                            @Shared.Html.Sorter(ViewBag, "Large Discount Code", "LargeDiscountCode", @Url.Action("Index", routeValue))
                                        }
                                    </th>
                                    <th class="w-10">
                                        @{
                                            routeValue["SortOrder"] = ViewBag.SortGroupDiscountCode;
                                            @Shared.Html.Sorter(ViewBag, "Group Discount Code", "GroupDiscountCode", @Url.Action("Index", routeValue))
                                        }
                                    </th>
                                    <th class="text-center w-5">
                                        Action
                                    </th>
                                </tr>

                                <tr>
                                    @Html.Hidden("SortOrder", (string)ViewBag.SortOrder)
                                    <th>
                                        @Html.TextBox("TreatyCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("CedingTreatyCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("CedingPlanCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("CedingPlanCode2", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("CedingBenefitTypeCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("CedingBenefitRiskCode", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("PolicyTermFrom", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("PolicyTermTo", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("PolicyDurationFrom", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("PolicyDurationTo", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("GroupPolicyNumber", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("BenefitId", (List<SelectListItem>)ViewBag.DropDownBenefits, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.TextBox("ReinsEffDatePolStartDate", null, new { id = "ReinsEffDatePolStartDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsEffDatePolStartDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("ReinsEffDatePolEndDate", null, new { id = "ReinsEffDatePolEndDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsEffDatePolEndDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("ReportingStartDate", null, new { id = "ReportingStartDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReportingStartDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("ReportingEndDate", null, new { id = "ReportingEndDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReportingEndDate')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("AttainedAgeFrom", null, new { @class = "form-control", placeholder = "Type here", @type = "number", @min = "0" })
                                    </th>
                                    <th>
                                        @Html.TextBox("AttainedAgeTo", null, new { @class = "form-control", placeholder = "Type here", @type = "number", @min = "0" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("PremiumFrequencyCodePickListDetailId", (List<SelectListItem>)ViewBag.DropDownPremiumFrequencyCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.TextBox("PolicyAmountFrom", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("PolicyAmountTo", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("AarFrom", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.TextBox("AarTo", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("ReinsBasisCodePickListDetailId", (List<SelectListItem>)ViewBag.DropDownReinsBasisCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("RateId", (List<SelectListItem>)ViewBag.DropDownRates, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("RiDiscountCode", (List<SelectListItem>)ViewBag.DropDownEmpty, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("LargeDiscountCode", (List<SelectListItem>)ViewBag.DropDownEmpty, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("GroupDiscountCode", (List<SelectListItem>)ViewBag.DropDownEmpty, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th class="text-center align-middle">
                                        <div class="btn-row-action">
                                            <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                                <span class="fas fa-backspace" />
                                            </a>
                                            <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                        </div>
                                    </th>
                                </tr>
                            </thead>

                            @if (ListingList.Count > 0)
                            {
                                foreach (var item in ListingList)
                                {
                                    <tr>
                                        <td>
                                            @Shared.Util.GetTruncatedValue(item.TreatyCode)
                                        </td>
                                        <td>
                                            @Shared.Util.GetTruncatedValue(item.CedingTreatyCode)
                                        </td>
                                        <td>
                                            @Shared.Util.GetTruncatedValue(item.CedingPlanCode)
                                        </td>
                                        <td>
                                            @Shared.Util.GetTruncatedValue(item.CedingPlanCode2)
                                        </td>
                                        <td>
                                            @Shared.Util.GetTruncatedValue(item.CedingBenefitTypeCode)
                                        </td>
                                        <td>
                                            @Shared.Util.GetTruncatedValue(item.CedingBenefitRiskCode)
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.PolicyTermFrom)
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.PolicyTermTo)
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.PolicyDurationFrom)
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.PolicyDurationTo)
                                        </td>
                                        <td>
                                            @Shared.Util.GetTruncatedValue(item.GroupPolicyNumber)
                                        </td>
                                        <td>
                                            @if (item.Benefit != null)
                                            {
                                                @item.Benefit.ToString()
                                            }
                                        </td>
                                        <td>
                                            @if (item.ReinsEffDatePolStartDate.HasValue)
                                            {
                                                @item.ReinsEffDatePolStartDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @if (item.ReinsEffDatePolEndDate.HasValue)
                                            {
                                                @item.ReinsEffDatePolEndDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @if (item.ReportingStartDate.HasValue)
                                            {
                                                @item.ReportingStartDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td>
                                            @if (item.ReportingEndDate.HasValue)
                                            {
                                                @item.ReportingEndDate.Value.ToString(Shared.Util.GetDateFormat())
                                            }
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.AttainedAgeFrom)
                                        </td>
                                        <td class="text-right">
                                            @Html.DisplayFor(modelItem => item.AttainedAgeTo)
                                        </td>
                                        <td>
                                            @if (item.PremiumFrequencyCodePickListDetail != null)
                                            {
                                                @item.PremiumFrequencyCodePickListDetail.ToString()
                                            }
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.PolicyAmountFrom)
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.PolicyAmountTo)
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.AarFrom)
                                        </td>
                                        <td class="text-right">
                                            @Shared.Util.DoubleToString(item.AarTo)
                                        </td>
                                        <td>
                                            @if (item.ReinsBasisCodePickListDetail != null)
                                            {
                                                @item.ReinsBasisCodePickListDetail.ToString()
                                            }
                                        </td>
                                        <td>
                                            @if (item.Rate != null)
                                            {
                                                @item.Rate.ToString()
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.RiDiscountCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.LargeDiscountCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.GroupDiscountCode)
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="fas fa-ellipsis-v dropbtn" />
                                                </button>
                                                <div class="dropdown-menu">
                                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="30" class="no-data">No available data found.</td>
                                </tr>
                            }

                        </table>
                    </div>
                }

                <div class="pagination-footer btn-row">
                    <div class="row">
                        <div class="col-md-4">
                            @Html.Partial("_PageInfo")
                        </div>
                        <div class="col-md-8">
                            @Html.PagedListPager(ListingList, Page => Url.Action("Index", new
                            {
                                CedantId = routeValue["CedantId"],
                                TreatyCode = routeValue["TreatyCode"],
                                CedingTreatyCode = routeValue["CedingTreatyCode"],
                                CedingPlanCode = routeValue["CedingPlanCode"],
                                CedingPlanCode2 = routeValue["CedingPlanCode2"],
                                CedingBenefitTypeCode = routeValue["CedingBenefitTypeCode"],
                                CedingBenefitRiskCode = routeValue["CedingBenefitRiskCode"],
                                PolicyTermFrom = routeValue["PolicyTermFrom"],
                                PolicyTermTo = routeValue["PolicyTermTo"],
                                PolicyDurationFrom = routeValue["PolicyDurationFrom"],
                                PolicyDurationTo = routeValue["PolicyDurationTo"],
                                GroupPolicyNumber = routeValue["GroupPolicyNumber"],
                                BenefitId = routeValue["BenefitId"],
                                ReinsEffDatePolStartDate = routeValue["ReinsEffDatePolStartDate"],
                                ReinsEffDatePolEndDate = routeValue["ReinsEffDatePolEndDate"],
                                ReportingStartDate = routeValue["ReportingStartDate"],
                                ReportingEndDate = routeValue["ReportingEndDate"],
                                AttainedAgeFrom = routeValue["AttainedAgeFrom"],
                                AttainedAgeTo = routeValue["AttainedAgeTo"],
                                PremiumFrequencyCodePickListDetailId = routeValue["PremiumFrequencyCodePickListDetailId"],
                                PolicyAmountFrom = routeValue["PolicyAmountFrom"],
                                PolicyAmountTo = routeValue["PolicyAmountTo"],
                                AarFrom = routeValue["AarFrom"],
                                AarTo = routeValue["AarTo"],
                                CedingOccupationCodePickListDetailId = routeValue["CedingOccupationCodePickListDetailId"],
                                InsuredGenderCodePickListDetailId = routeValue["InsuredGenderCodePickListDetailId"],
                                CedingTobaccoUsePickListDetailId = routeValue["CedingTobaccoUsePickListDetailId"],
                                ReinsBasisCodePickListDetailId = routeValue["ReinsBasisCodePickListDetailId"],
                                RateId = routeValue["RateId"],
                                RiDiscountCode = routeValue["RiDiscountCode"],
                                LargeDiscountCode = routeValue["LargeDiscountCode"],
                                GroupDiscountCode = routeValue["GroupDiscountCode"],
                                SortOrder = ViewBag.SortOrder,
                                Page,
                            }), Shared.Html.GetPagedListRenderOptions())
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-pane fade @(ViewBag.ActiveTab == 2 ? "show active" : "")" id="upload" role="tabpanel" aria-labelledby="upload-tab">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th class="w-20">
                                    Date & Time Uploaded
                                </th>
                                <th class="w-25">
                                    File Name
                                </th>
                                <th class="w-15">
                                    Submitted By
                                </th>
                                <th class="w-10">
                                    Status
                                </th>
                                <th class="w-5 text-center">
                                    Action
                                </th>
                            </tr>
                            <tr>
                                @using (Html.BeginForm("Index", "RateTableMapping", FormMethod.Get))
                                {
                                    @Html.Hidden("UploadSortOrder", (string)ViewBag.UploadSortOrder)
                                    @Html.Hidden("ActiveTab", 2)
                                    <th>
                                        @Html.TextBox("UploadCreatedAt", null, new { @class = "form-control", placeholder = "DD MM YYYY", @onclick = "openDatePicker(this.id)" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('UploadCreatedAt')" />
                                    </th>
                                    <th>
                                        @Html.TextBox("UploadFileName", null, new { @class = "form-control", placeholder = "Type here" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("UploadSubmittedBy", (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th>
                                        @Html.DropDownList("UploadStatus", (List<SelectListItem>)ViewBag.UploadStatusItems, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                                    </th>
                                    <th class="text-center">
                                        <div class="btn-row-action">
                                            <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                                <span class="fas fa-backspace" />
                                            </a>
                                            <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                        </div>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @if (UploadList.Count > 0)
                            {
                                foreach (var item in UploadList)
                                {
                                    <tr>
                                        <td>@(item.CreatedAt != null ? item.CreatedAt.ToString(Shared.Util.GetDateTimeFormat()) : null)</td>
                                        <td>@item.FileName</td>
                                        <td>
                                            @Services.Identity.UserService.GetNameById(item.CreatedById)
                                        </td>
                                        <td>
                                            <span class="@BusinessObject.RateTableMappingUploadBo.GetStatusClass(item.Status)">
                                                @BusinessObject.RateTableMappingUploadBo.GetStatusName(item.Status)
                                            </span>
                                        </td>
                                        <td>
                                            @if (item.Status == BusinessObject.RateTableMappingUploadBo.StatusFailed)
                                            {
                                                <span class="badge badge-failed" onclick="uploadError(@item.Id)">Download Error</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="no-data">No available data found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @{
                    ViewBag.CurrentPageNumber = UploadList.PageNumber;
                    ViewBag.CurrentPageItems = UploadList.Count;
                    ViewBag.PageSize = UploadList.PageSize;
                    ViewBag.Total = ViewBag.UploadTotal;
                }
                <div class="pagination-footer btn-row">
                    <div class="row">
                        <div class="col-md-4">
                            @Html.Partial("_PageInfo")
                        </div>
                        <div class="col-md-8">
                            @Html.PagedListPager(UploadList, Page => Url.Action("Index", new
                       {
                           UploadCreatedAt = routeValue["UploadCreatedAt"],
                           UploadFileName = routeValue["UploadFileName"],
                           UploadSubmittedBy = routeValue["UploadSubmittedBy"],
                           UploadStatus = routeValue["UploadStatus"],
                           UploadSortOrder = ViewBag.UploadSortOrder,
                           UploadPage = Page,
                           ActiveTab = 2
                       }), Shared.Html.GetPagedListRenderOptions())
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var TreatyCodes = null;
        var CedingBenefitTypeCodes = null;
        var DownloadErrorUrl = "@(Url.Action("DownloadError"))";

        var getTreatyCodeByCedantUrl = '@Url.Action("CodeValue", "TreatyCode")';
        var getRiDiscountByCedantUrl = '@Url.Action("Index", "RiDiscount")';
        var getLargeDiscountByCedantUrl = '@Url.Action("Index", "LargeDiscount")';
        var getGroupDiscountByCedantUrl = '@Url.Action("Index", "GroupDiscount")';
        var selectedRiDiscount = '@ViewBag.routeValue["RiDiscountCode"]';
        var selectedLargeDiscount = '@ViewBag.routeValue["LargeDiscountCode"]';
        var selectedGroupDiscount = '@ViewBag.routeValue["GroupDiscountCode"]';

        var cedantId = 0;
        if ($('#CedantId').val() != 'NULL') {
            cedantId = $('#CedantId').val();
        }

        function uploadError(id) {
            window.location.href = DownloadErrorUrl + "?id=" + id;
        }
    </script>
    @Scripts.Render("~/Scripts/models/RateTableMapping.js")
}
