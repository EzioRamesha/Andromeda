@model WebApp.Models.Mfrs17CellMappingViewModel

@{
    ViewBag.Title = "MFRS17 Cell Mapping";
    ViewBag.Action = "Edit";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>
    <div class="card-body">
        @Html.Partial("_LoadingSpinner")

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="col-md-6 mid-line-1">
                        <div class="col-form-label">
                            <span class="font-weight-bold">Parameters</span>
                        </div>

                        <div class="form-group">
                            <label class="col-form-label" for="TreatyCode">Treaty Code <span class="sub-label">(Separated by Comma)</span></label>
                            @Html.EditorFor(model => model.TreatyCode, new { htmlAttributes = new { id = "TreatyCodeTokenField", @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.TreatyCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReinsBasisCodePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.ReinsBasisCodePickListDetailId, (List<SelectListItem>)ViewBag.DropDownReinsBasisCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.ReinsBasisCodePickListDetailId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="col-form-label" for="CedingPlanCode">Ceding Plan Code <span class="sub-label">(Separated by Comma)</span></label>
                            @Html.EditorFor(model => model.CedingPlanCode, new { htmlAttributes = new { id = "CedingPlanCodeTokenField", @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.CedingPlanCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="col-form-label" for="BenefitCode">MLRe Benefit Code <span class="sub-label">(Separated by Comma)</span></label>
                            @Html.EditorFor(model => model.BenefitCode, new { htmlAttributes = new { id = "BenefitCodeTokenField", @class = "form-control", placeholder = "Type here" } })
                            @Html.ValidationMessageFor(model => model.BenefitCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReinsEffDatePolStartDateStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-w-icon">
                                @Html.EditorFor(model => model.ReinsEffDatePolStartDateStr, new { htmlAttributes = new { id = "ReinsEffDatePolStartDate", @class = "form-control", placeholder = "DD MM YYYY" } })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsEffDatePolStartDate')" />
                            </div>
                            @Html.ValidationMessageFor(model => model.ReinsEffDatePolStartDateStr, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReinsEffDatePolEndDateStr, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-w-icon">
                                @Html.EditorFor(model => model.ReinsEffDatePolEndDateStr, new { htmlAttributes = new { id = "ReinsEffDatePolEndDate", @class = "form-control", placeholder = "DD MM YYYY" } })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ReinsEffDatePolEndDate')" />
                            </div>
                            @Html.ValidationMessageFor(model => model.ReinsEffDatePolEndDateStr, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProfitCommPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.ProfitCommPickListDetailId, (List<SelectListItem>)ViewBag.DropDownProfitComms, htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.ProfitCommPickListDetailId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RateTable, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.RateTable, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", maxlength = @ViewBag.RateTableMaxLength } })
                            @Html.ValidationMessageFor(model => model.RateTable, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6 mid-line-2">
                        <div class="col-form-label">
                            <span class="font-weight-bold">Mapped Values</span>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BasicRiderPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.BasicRiderPickListDetailId, (List<SelectListItem>)ViewBag.DropDownMfrs17BasicRiders, htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.BasicRiderPickListDetailId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CellName, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.CellName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", maxlength = @ViewBag.CellNameMaxLength } })
                            @Html.ValidationMessageFor(model => model.CellName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mfrs17ContractCodeDetailId, htmlAttributes: new { @class = "col-form-label" })
                            @Html.DropDownListFor(model => model.Mfrs17ContractCodeDetailId, (List<SelectListItem>)ViewBag.DropDownMfrs17ContractCodeDetails, htmlAttributes: new { @class = "form-control chosen" })
                            @Html.ValidationMessageFor(model => model.Mfrs17ContractCodeDetailId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LoaCode, htmlAttributes: new { @class = "col-form-label" })
                            @Html.EditorFor(model => model.LoaCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", maxlength = @ViewBag.LoaCodeMaxLength } })
                            @Html.ValidationMessageFor(model => model.LoaCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        @Html.ActionLink("DELETE", "Delete", new { id = Model.Id }, new { @class = "btn btn-del" })
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var BenefitCodes = @Html.Raw(Json.Encode(ViewBag.BenefitCodes));
        var TreatyCodes = @Html.Raw(Json.Encode(ViewBag.TreatyCodes));
        var cedingPlanCodeCount = 0;
        var benefitCodeCount = 0;
        var treatyCodeCount = 0;

        var tokenfieldReady = {
            cedingPlanCode: false,
            benefitCode: false,
            treatyCode: false,
        };

        var loadingDiv = $("#loadingSpinner");

        $(document).ready(function () {
            if ('@ViewBag.ReadOnly' == 'True') {
                $("input").prop("disabled", true);
                $("select").prop("disabled", true);
                $('#CedingPlanCodeTokenField').tokenfield('disable');
                $('#BenefitCodeTokenField').tokenfield('disable');
                $('#TreatyCodeTokenField').tokenfield('disable');
                $('button').prop("disabled", true);
            }
        });
    </script>

    @Scripts.Render("~/Scripts/models/Mfrs17CellMapping.js")
}
