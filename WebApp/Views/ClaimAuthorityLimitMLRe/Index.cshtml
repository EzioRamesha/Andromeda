@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.ClaimAuthorityLimitMLReViewModel>

@{
    ViewBag.Title = "Claim Authority Limit - MLRe";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
    var claimCodes = ViewBag.DistinctClaimCode;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-6 text-right">
                <a href="@Url.Action("Create")" class="btn btn-add">
                    ADD NEW
                </a>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-20">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortUserId;
                                @Shared.Html.Sorter(ViewBag, "Name", "UserId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPosition;
                                @Shared.Html.Sorter(ViewBag, "Position", "Position", @Url.Action("Index", routeValue))
                            }
                        </th>
                        @{
                            foreach (string code in claimCodes)
                            {
                                <th class="w-10">
                                    @string.Format("{0} Amount", code)
                                </th>
                            }
                        }
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>
                    <tr>
                        @using (Html.BeginForm("Index", "ClaimAuthorityLimitMLRe", FormMethod.Get))
                        {
                            @Html.Hidden("SortOrder", (string)ViewBag.SortOrder)
                            <th>
                                @Html.DropDownList("UserId", (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("Position", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            if (claimCodes.Count > 0)
                            {
                                foreach (var i in Enumerable.Range(1, claimCodes.Count)) { <th></th> }
                            }
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Count > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Position)
                                </td>
                                @{ 
                                    foreach (string code in claimCodes)
                                    {
                                        if (item.ClaimAuthorityLimitMLReDetails != null && item.ClaimAuthorityLimitMLReDetails.Count > 0)
                                        {
                                            var calMLReDetails = item.ClaimAuthorityLimitMLReDetails;
                                            if (calMLReDetails.Any(w => w.ClaimCode.Code == code))
                                            {
                                                <td>@Shared.Util.DoubleToString(calMLReDetails.Where(w => w.ClaimCode.Code == code).Select(w => w.ClaimAuthorityLimitValue).FirstOrDefault(), 2)</td>
                                            }
                                            else
                                            {
                                                <td>-</td>
                                            }
                                        }
                                        else
                                        {
                                            <td>-</td>
                                        }
                                    }
                                }
                                <td class="text-center">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-ellipsis-v dropbtn" />
                                        </button>
                                        <div class="dropdown-menu">
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="@(claimCodes.Count + 3)" class="no-data">No available data found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
                    {
                        UserId = routeValue["UserId"],
                        Position = routeValue["Position"],
                        SortOrder = ViewBag.SortOrder,
                        Page,
                    }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>