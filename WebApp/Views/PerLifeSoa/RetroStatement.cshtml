@model WebApp.Models.PerLifeSoaRetroStatementViewModel

@{
    ViewBag.Title = "Retro Statement";
    ViewBag.Action = Model.Id == 0 ? "Create" : "View";

    ViewBag.ListPageUrl = Url.Action("Index");

    ViewBag.PrevTitle = "Per Life Retro SOA";
    ViewBag.PrevAction = "Edit";
    ViewBag.EditPageUrl = Url.Action("Edit", new { id = Model.PerLifeSoaId });

    var disabled = ViewBag.ReadOnly != null && ViewBag.ReadOnly;
    var status = Model.Status == 0 ? BusinessObject.PerLifeRetroStatementBo.StatusPending : Model.Status;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_ValidationSummary")

<div class="card" id="app">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6"><h4>@ViewBag.Action @ViewBag.Title</h4></div>
            <div class="col-md-6 text-right">
                <span class="@BusinessObject.PerLifeRetroStatementBo.GetStatusClass(Model.Status)">
                    @BusinessObject.PerLifeRetroStatementBo.GetStatusName(Model.Status)
                </span>
            </div>
        </div>
    </div>
    <div class="card-body" id="app">
        @Html.Partial("_LoadingSpinner")

        @using (Html.BeginForm("RetroStatement", "PerLifeSoa", FormMethod.Post, new { id = "RetroStatement", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.PerLifeSoaId)
            @Html.HiddenFor(model => model.Status, new { @Value = status })
            @Html.HiddenFor(model => model.MlreRef)

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.RetroPartyId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.RetroPartyId, (List<SelectListItem>)ViewBag.DropDownRetroParties, htmlAttributes: new { @class = "form-control selectpicker", @onchange = "changeRetroParty(this.value)" })
                        @Html.ValidationMessageFor(model => model.RetroPartyId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        &nbsp;
                    </div>
                </div>

                <div class="text-right mt-3">
                    @if (Model.Status == BusinessObject.PerLifeRetroStatementBo.StatusFinalised)
                    {
                        <input class="btn btn-download" id="downloadRetroStatement" type="submit" href="#" formaction="@(Url.Action("DownloadRetroStatement", new { id = Model.Id }))" value="Download" />
                    }
                    else
                    {
                        <button type="button" class="btn btn-upload" style="display: inline-flex;" onclick="calculateStatement()">
                            CALCULATE
                        </button>

                        <div class="file btn btn-upload" data-loading-text="Processing...<span></span>" style="display: inline-flex;">
                            <label>UPLOAD</label>
                            <input type="file" id="dataFile" name="upload" accept=".xls, .xlsx" onchange="uploadRetroStatement()" />
                        </div>
                    }
                </div>

                <div class="mt-3 border p-3">
                    <table class="w-100 table-hover">
                        <tbody>
                            <tr>
                                <td class="w-15"></td>
                                <td class="w-20"></td>
                                <td class="w-20"></td>
                                <td class="w-15"></td>
                                <td class="w-15"></td>
                                <td class="w-15"></td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.MlreRef, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="ml-1">
                                        @Html.EditorFor(model => model.MlreRef, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.CedingCompany, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="ml-1">
                                        @Html.EditorFor(model => model.CedingCompany, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.TreatyNo, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="ml-1">
                                        @Html.EditorFor(model => model.TreatyNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.TreatyType, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="ml-1">
                                        @Html.EditorFor(model => model.TreatyType, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6">&nbsp;</td>
                            </tr>
                            <tr style="background-color: #e8f1fb">
                                <td class="text-center col-form-label font-weight-bold" colspan="6">QUARTERLY REPORT</td>
                            </tr>
                            <tr>
                                <td colspan="6">&nbsp;</td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.FromMlreTo, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="ml-1">
                                        @Html.EditorFor(model => model.FromMlreTo, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.AccountsFor, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="ml-1">
                                        @Html.EditorFor(model => model.AccountsFor, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.DateReportCompletedStr, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="input-w-icon ml-1">
                                        @Html.TextBoxFor(model => model.DateReportCompletedStr, new { id = "DateReportCompleted", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateReportCompleted')" />
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.DateSendToRetroStr, htmlAttributes: new { @class = "col-form-label" })
                                    <span class="float-right col-form-label">:</span>
                                </td>
                                <td colspan="2" class="col-form-label">
                                    <div class="input-w-icon ml-1">
                                        @Html.TextBoxFor(model => model.DateSendToRetroStr, new { id = "DateSendToRetro", @class = "form-control", placeholder = "DD MM YYYY" })
                                        <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('DateSendToRetro')" />
                                    </div>
                                </td>
                                <td colspan="3" class="col-form-label">
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6">&nbsp;</td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label font-weight-bold">
                                    <div class="d-inline-flex">
                                        <div>Accounting Period</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AccountingPeriod, new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'AccountingPeriod')", placeholder = "YYYY MM", autocomplete = "off" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AccountingPeriod2, new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'AccountingPeriod2')", placeholder = "YYYY MM", autocomplete = "off" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AccountingPeriod3, new { htmlAttributes = new { @class = "form-control", @onchange = "validateQuarter(this.value, 'AccountingPeriod3')", placeholder = "YYYY MM", autocomplete = "off" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AccountingPeriod, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AccountingPeriod2, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AccountingPeriod3, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td class="col-form-label text-center font-weight-bold">
                                    <span>RM</span>
                                </td>
                                <td class="col-form-label text-center font-weight-bold">
                                    <span>RM</span>
                                </td>
                                <td class="col-form-label text-center font-weight-bold">
                                    <span>RM</span>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(a)</div>
                                        <div>Reserve Ceded at the begining of the Accounting Period</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ReserveCededBeginStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ReserveCededBegin2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ReserveCededBegin3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ReserveCededBeginStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ReserveCededBegin2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ReserveCededBegin3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(b)</div>
                                        <div>Reserve Ceded at the end of the Accounting Period</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ReserveCededEndStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ReserveCededEnd2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ReserveCededEnd3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ReserveCededEndStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ReserveCededEnd2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ReserveCededEnd3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(c)</div>
                                        <div>Risk Charge Ceded at the begining of the Accounting Period</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiskChargeCededBeginStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiskChargeCededBegin2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiskChargeCededBegin3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiskChargeCededBeginStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiskChargeCededBegin2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiskChargeCededBegin3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(d)</div>
                                        <div>Risk Charge Ceded at the end of the Accounting Period</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiskChargeCededEndStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiskChargeCededEnd2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiskChargeCededEnd3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiskChargeCededEndStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiskChargeCededEnd2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiskChargeCededEnd3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(e)</div>
                                        <div>Average Reserve Ceded</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AverageReserveCededStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AverageReserveCeded2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AverageReserveCeded3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AverageReserveCededStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AverageReserveCeded2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AverageReserveCeded3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(f)</div>
                                        <div class="font-weight-bold">Reinsurance Premium</div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>New Business</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumNBStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumNB2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumNB3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumNBStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumNB2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumNB3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Renewal</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumRNStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumRN2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumRN3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumRNStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumRN2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumRN3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Alteration</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumALTStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumALT2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiPremiumALT3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumALTStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumALT2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiPremiumALT3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(g)</div>
                                        <div>Quarterly Risk Premium</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.QuarterlyRiskPremiumStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.QuarterlyRiskPremium2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.QuarterlyRiskPremium3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.QuarterlyRiskPremiumStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.QuarterlyRiskPremium2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.QuarterlyRiskPremium3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(h)</div>
                                        <div>Retrocession Marketing Fee</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RetrocessionMarketingFeeStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RetrocessionMarketingFee2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RetrocessionMarketingFee3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RetrocessionMarketingFeeStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RetrocessionMarketingFee2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RetrocessionMarketingFee3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(i)</div>
                                        <div class="font-weight-bold">Reinsurance Discount</div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>New Business</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountNBStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountNB2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountNB3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountNBStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountNB2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountNB3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Renewal</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountRNStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountRN2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountRN3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountRNStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountRN2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountRN3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Alteration</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountALTStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountALT2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.RiDiscountALT3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountALTStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountALT2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.RiDiscountALT3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(j)</div>
                                        <div>Agreed Database Commission</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AgreedDatabaseCommStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AgreedDatabaseComm2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.AgreedDatabaseComm3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AgreedDatabaseCommStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AgreedDatabaseComm2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.AgreedDatabaseComm3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(k)</div>
                                        <div>GST Payable</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.GstPayableStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.GstPayable2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.GstPayable3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.GstPayableStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.GstPayable2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.GstPayable3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(l)</div>
                                        <div>No Claim Bonus</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.NoClaimBonusStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.NoClaimBonus2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.NoClaimBonus3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.NoClaimBonusStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.NoClaimBonus2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.NoClaimBonus3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(m)</div>
                                        <div>Claims</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ClaimsStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.Claims2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.Claims3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ClaimsStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.Claims2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.Claims3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(n)</div>
                                        <div>Profit Commission</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ProfitCommStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ProfitComm2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.ProfitComm3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ProfitCommStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ProfitComm2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.ProfitComm3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(o)</div>
                                        <div>Surrender Value</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.SurrenderValueStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.SurrenderValue2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.SurrenderValue3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.SurrenderValueStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.SurrenderValue2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.SurrenderValue3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(p)</div>
                                        <div class="font-weight-bold">Payment to the Reinsurer</div>
                                    </div>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.PaymentToTheReinsurerStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.PaymentToTheReinsurer2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.PaymentToTheReinsurer3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.PaymentToTheReinsurerStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.PaymentToTheReinsurer2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.PaymentToTheReinsurer3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(q)</div>
                                        <div class="font-weight-bold">Total No of Policies</div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>New Business</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyNB, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyNB2, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyNB3, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Renewal</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyRN, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyRN2, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyRN3, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Alteration</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyALT, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyALT2, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalNoOfPolicyALT3, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" class="col-form-label">
                                    <div class="d-inline-flex">
                                        <div class="index-width">(r)</div>
                                        <div class="font-weight-bold">Total Sum Reinsured</div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>New Business</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredNBStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredNB2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredNB3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredNBStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredNB2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredNB3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Renewal</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredRNStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredRN2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredRN3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredRNStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredRN2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredRN3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3" class="col-form-label pl-5">
                                    <span>Alteration</span>
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredALTStr, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredALT2Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TotalSumReinsuredALT3Str, new { htmlAttributes = new { @class = "form-control text-right", placeholder = "Type here" } })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3"></td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredALTStr, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredALT2Str, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.ValidationMessageFor(model => model.TotalSumReinsuredALT3Str, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Edit", "PerLifeSoa", new { id = Model.PerLifeSoaId }, new { @class = "btn btn-cancel" })
                        @if (Model.Status != BusinessObject.PerLifeRetroStatementBo.StatusFinalised)
                        {
                            if (Model.Id != 0)
                            {
                                @Html.ActionLink("DELETE", "DeleteRetroStatement", new { id = Model.Id, directRetroId = Model.PerLifeSoaId }, new { @class = "btn btn-del" })
                            }
                            <div class="float-right">
                                @if (Model.Id != 0)
                                {
                                    <button class="btn btn-submit ml-1" type="button" data-toggle="modal" data-target="#finalisedModal">FINALISED</button>
                                }
                                <button type="submit" class="btn btn-submit">SAVE</button>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="modal fade" id="finalisedModal" tabindex="-1" role="dialog" aria-labelledby="finalisedModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="finalisedModalLabel">Finalised Confirmation</h5>
                        </div>
                        <div class="modal-body">
                            Do you want to finalised this Retro Statement? <br />
                            <span class="font-weight-bold">Please note that this action is not reversible.</span>
                            <div class="text-right form-row-btn">
                                <button type="button" class="btn btn-cancel" data-dismiss="modal">CANCEL</button>
                                <button type="submit" onclick="finalised()" class="btn btn-submit" data-dismiss="modal">CONFIRM</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/date-quarter.js")

    <script>
        var QuarterFormat = '@BusinessObject.Mfrs17ReportingBo.DateQuarterFormatJs';
        var DropDownRetroParties = @Html.Raw(Json.Encode(ViewBag.DropDownRetroParties));
        var IsFinalised = '@(Model.Status == BusinessObject.RetroStatementBo.StatusFinalised)';
        var FinalisedStatus = '@BusinessObject.RetroStatementBo.StatusFinalised';
        var LoadingDiv = $("#loadingSpinner");
        var CalculateStatementUrl = '@Url.Action("CalculateStatement")';
        var PerLifeSoaId = @Model.PerLifeSoaId;
        var GetRetroConfigDetailUrl = '@Url.Action("GetRetroConfigDetail")';

        $(document).ready(function () {
            dateOffAutoComplete();
            LoadingDiv.addClass('hide-loading-spinner');

            $('#DateReportCompleted').datepicker({
                format: DateFormatDatePickerJs,
            });

            $('#DateSendToRetro').datepicker({
                format: DateFormatDatePickerJs,
            });

            if ('@ViewBag.ReadOnly' == 'True' || '@ViewBag.Disabled' == 'True' || IsFinalised == 'True') {
                $("input").prop("disabled", true);
                $("select").prop("disabled", true);
                $('.selectpicker').selectpicker('refresh');
            }

            if ('@ViewBag.ReadOnly' == 'True') {
                $('button').prop("disabled", true);
            } else {
                $("[name='__RequestVerificationToken']").prop("disabled", false);
            }

            if (IsFinalised == 'True') {
                $('#downloadRetroStatement').prop("disabled", false);
            }
        });

        $('#AccountingPeriod').datepicker({
            format: QuarterFormat,
            minViewMode: 1,
            autoclose: true,
            language: "qtrs",
            forceParse: false
        }).on('show', function (e) {
            var datepickerDropDown = $('.datepicker');
            datepickerDropDown.addClass('quarterpicker');
        });

        $('#AccountingPeriod2').datepicker({
            format: QuarterFormat,
            minViewMode: 1,
            autoclose: true,
            language: "qtrs",
            forceParse: false
        }).on('show', function (e) {
            var datepickerDropDown = $('.datepicker');
            datepickerDropDown.addClass('quarterpicker');
        });

        $('#AccountingPeriod3').datepicker({
            format: QuarterFormat,
            minViewMode: 1,
            autoclose: true,
            language: "qtrs",
            forceParse: false
        }).on('show', function (e) {
            var datepickerDropDown = $('.datepicker');
            datepickerDropDown.addClass('quarterpicker');
        });

        function validateQuarter(qtr, id) {
            if (qtr == null || qtr == "")
                return;

            if (!/[0-9]{4} Q{1}([1-4]){1}/.test(qtr)) {
                $("#"+id).val(null);
                alert("Accounting Period format is incorrect");
            }
        }

        function focusOnDate(val) {
            $('#' + val).focus();
        }

        function changeRetroParty(val) {
            var result = DropDownRetroParties.filter(function (element) { return element.Value == val; })
            if (result != null && result[0] != null) {
                if (result[0].Value == 0 || result[0].Value == "" || result[0].Value == null)
                    $('#FromMlreTo').val(null)
                else
                    $('#FromMlreTo').val(result[0].Text)
            }

            var retroPartyId = $('#RetroPartyId').val();
            if (retroPartyId == null || retroPartyId == 0) {
                $('#TreatyNo').val(null);
                $('#Schedule').val(null);
                return;
            }

            var configDetail = null;
            $.ajax({
                url: GetRetroConfigDetailUrl,
                type: "POST",
                data: {
                    directRetroId: DirectRetroId,
                    retroPartyId: retroPartyId
                },
                cache: false,
                async: false,
                success: function (data) {
                    configDetail = data.ConfigDetail;
                }
            });

            if (configDetail) {
                if (configDetail.TreatyNo)
                    $('#TreatyNo').val(configDetail.TreatyNo);
                if (configDetail.Schedule)
                    $('#Schedule').val(configDetail.Schedule);
            }
        }

        function uploadRetroStatement() {
            $('#RetroStatement').attr('action', '/PerLifeSoa/UploadRetroStatement');
            $('#RetroStatement').submit();
        }

        function finalised() {
            $('#Status').val(FinalisedStatus);
            $('form').submit();
        }

        function calculateStatement() {
            var retroPartyId = $('#RetroPartyId').val();
            if (!retroPartyId) {
                alert("Please select Retro Party before proceed to calulation")
                return;
            }
            var accountingPeriod1 = $('#AccountingPeriod').val();
            var accountingPeriod2 = $('#AccountingPeriod2').val();
            var accountingPeriod3 = $('#AccountingPeriod3').val();
            LoadingDiv.removeClass('hide-loading-spinner');
            $.ajax({
                url: CalculateStatementUrl ? CalculateStatementUrl : null,
                type: "POST",
                data: {
                    perLifeSoaId: PerLifeSoaId,
                    retroPartyId: retroPartyId,
                    accountingPeriod1: accountingPeriod1,
                    accountingPeriod2: accountingPeriod2,
                    accountingPeriod3: accountingPeriod3,
                },
                cache: false,
                async: true,
                success: function (data) {
                    if (data.Error != null) {
                        LoadingDiv.addClass('hide-loading-spinner');
                        alert(data.Error);
                    } else {
                        var retroStatement = data.RetroStatement;

                        // Data Set 1
                        $('#RiPremiumNBStr').val(retroStatement.RiPremiumNBStr);
                        $('#RiPremiumRNStr').val(retroStatement.RiPremiumRNStr);
                        $('#RiPremiumALTStr').val(retroStatement.RiPremiumALTStr);
                        $('#RiDiscountNBStr').val(retroStatement.RiDiscountNBStr);
                        $('#RiDiscountRNStr').val(retroStatement.RiDiscountRNStr);
                        $('#RiDiscountALTStr').val(retroStatement.RiDiscountALTStr);
                        $('#ClaimsStr').val(retroStatement.ClaimsStr);
                        $('#TotalNoOfPolicyNB').val(retroStatement.TotalNoOfPolicyNB);
                        $('#TotalNoOfPolicyRN').val(retroStatement.TotalNoOfPolicyRN);
                        $('#TotalNoOfPolicyALT').val(retroStatement.TotalNoOfPolicyALT);
                        $('#TotalSumReinsuredNBStr').val(retroStatement.TotalSumReinsuredNBStr);
                        $('#TotalSumReinsuredRNStr').val(retroStatement.TotalSumReinsuredRNStr);
                        $('#TotalSumReinsuredALTStr').val(retroStatement.TotalSumReinsuredALTStr);
                        $('#NoClaimBonusStr').val(retroStatement.NoClaimBonusStr);
                        $('#AgreedDatabaseCommStr').val(retroStatement.AgreedDatabaseCommStr);

                        // Data Set 2
                        $('#RiPremiumNB2Str').val(retroStatement.RiPremiumNB2Str);
                        $('#RiPremiumRN2Str').val(retroStatement.RiPremiumRN2Str);
                        $('#RiPremiumALT2Str').val(retroStatement.RiPremiumALT2Str);
                        $('#RiDiscountNB2Str').val(retroStatement.RiDiscountNB2Str);
                        $('#RiDiscountRN2Str').val(retroStatement.RiDiscountRN2Str);
                        $('#RiDiscountALT2Str').val(retroStatement.RiDiscountALT2Str);
                        $('#Claims2Str').val(retroStatement.Claims2Str);
                        $('#TotalNoOfPolicyNB2').val(retroStatement.TotalNoOfPolicyNB2);
                        $('#TotalNoOfPolicyRN2').val(retroStatement.TotalNoOfPolicyRN2);
                        $('#TotalNoOfPolicyALT2').val(retroStatement.TotalNoOfPolicyALT2);
                        $('#TotalSumReinsuredNB2Str').val(retroStatement.TotalSumReinsuredNB2Str);
                        $('#TotalSumReinsuredRN2Str').val(retroStatement.TotalSumReinsuredRN2Str);
                        $('#TotalSumReinsuredALT2Str').val(retroStatement.TotalSumReinsuredALT2Str);
                        $('#NoClaimBonus2Str').val(retroStatement.NoClaimBonus2Str);
                        $('#AgreedDatabaseComm2Str').val(retroStatement.AgreedDatabaseComm2Str);

                        // Data Set 3
                        $('#RiPremiumNB3Str').val(retroStatement.RiPremiumNB3Str);
                        $('#RiPremiumRN3Str').val(retroStatement.RiPremiumRN3Str);
                        $('#RiPremiumALT3Str').val(retroStatement.RiPremiumALT3Str);
                        $('#RiDiscountNB3Str').val(retroStatement.RiDiscountNB3Str);
                        $('#RiDiscountRN3Str').val(retroStatement.RiDiscountRN3Str);
                        $('#RiDiscountALT3Str').val(retroStatement.RiDiscountALT3Str);
                        $('#Claims3Str').val(retroStatement.Claims3Str);
                        $('#TotalNoOfPolicyNB3').val(retroStatement.TotalNoOfPolicyNB3);
                        $('#TotalNoOfPolicyRN3').val(retroStatement.TotalNoOfPolicyRN3);
                        $('#TotalNoOfPolicyALT3').val(retroStatement.TotalNoOfPolicyALT3);
                        $('#TotalSumReinsuredNB3Str').val(retroStatement.TotalSumReinsuredNB3Str);
                        $('#TotalSumReinsuredRN3Str').val(retroStatement.TotalSumReinsuredRN3Str);
                        $('#TotalSumReinsuredALT3Str').val(retroStatement.TotalSumReinsuredALT3Str);
                        $('#NoClaimBonus3Str').val(retroStatement.NoClaimBonus3Str);
                        $('#AgreedDatabaseComm3Str').val(retroStatement.AgreedDatabaseComm3Str);

                        LoadingDiv.addClass('hide-loading-spinner');
                    }
                },
                error: function () {
                    LoadingDiv.addClass('hide-loading-spinner');
                    alert("Error occured during calculation");
                }
            });
        }
    </script>
}
