@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.PerLifeSoaViewModel>

@{
    ViewBag.Title = "Per Life Retro SOA";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-8 text-right  btn-row-inline">
                <a href="@Url.Action("Create")" class="btn btn-add">
                    ADD NEW
                </a>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-10">
                            No
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRetroParty;
                                @Shared.Html.Sorter(ViewBag, "Retro Party", "RetroPartyId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRetroTreaty;
                                @Shared.Html.Sorter(ViewBag, "Retro Treaty Code", "RetroTreatyId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortQuarter;
                                @Shared.Html.Sorter(ViewBag, "Quarter", "SoaQuarter", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortProcessingDate;
                                @Shared.Html.Sorter(ViewBag, "Processing Date", "ProcessingDate", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortPersonInChargeId;
                                @Shared.Html.Sorter(ViewBag, "Person In Charge", "PersonInChargeId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortHasPerLifeProfitComm;
                                @Shared.Html.Sorter(ViewBag, "Per Life Profit Comission", "HasPerLifeProfitComm", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortInvoiceStatus;
                                @Shared.Html.Sorter(ViewBag, "Invoice Status", "InvoiceStatus", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortStatus;
                                @Shared.Html.Sorter(ViewBag, "Status", "Status", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>

                    <tr>
                        @using (Html.BeginForm("Index", "PerLifeSoa", FormMethod.Get))
                        {
                            string sortOrder = ViewBag.SortOrder;

                            @Html.Hidden("SortOrder", sortOrder)
                            <th>
                                &nbsp;
                            </th>
                            <th>
                                @Html.DropDownList("RetroPartyId", (List<SelectListItem>)ViewBag.DropDownRetroParties, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("RetroTreatyId", (List<SelectListItem>)ViewBag.DropDownRetroTreaties, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("SoaQuarter", null, new { id = "Quarter", @class = "form-control", placeholder = "YYYY MM", autocomplete = "off" })
                            </th>
                            <th>
                                @Html.TextBox("ProcessingDate", null, new { id = "ProcessingDate", @class = "form-control", placeholder = "DD MM YYYY" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnDate('ProcessingDate')" />
                            </th>
                            <th>
                                @Html.DropDownList("PersonInChargeId", (List<SelectListItem>)ViewBag.DropDownUsers, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("HasPerLifeProfitComm", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("InvoiceStatus", (List<SelectListItem>)ViewBag.InvoiceStatuses, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("Status", (List<SelectListItem>)ViewBag.StatusList, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>

                @if (Model.Count > 0)
                {
                    int i = 0;
                    foreach (var item in Model)
                    {
                        i++;
                        <tr>
                            <td class="text-center">
                                @(i)
                            </td>
                            <td>
                                @if (item.RetroParty != null)
                                {
                                    @(string.Format("{0} - {1}", item.RetroParty.Code, item.RetroParty.Name))
                                }
                            </td>
                            <td>
                                @if (item.RetroTreaty != null)
                                {
                                    @(item.RetroTreaty.Code)
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SoaQuarter)
                            </td>
                            <td>
                                @if (item.ProcessingDate.HasValue)
                                {
                                    @item.ProcessingDate.Value.ToString(Shared.Util.GetDateFormat())
                                }
                            </td>
                            <td>
                                @if (item.PersonInCharge != null)
                                {
                                    @item.PersonInCharge.FullName
                                }
                            </td>
                            <td>
                                @(item.IsProfitCommissionData ? "Yes" : "No")
                            </td>
                            <td class="va-middle">
                                <span class="@BusinessObject.Retrocession.PerLifeSoaBo.GetInvoiceStatusClass(item.InvoiceStatus)">
                                    @BusinessObject.Retrocession.PerLifeSoaBo.GetInvoiceStatusName(item.InvoiceStatus)
                                </span>
                            </td>
                            <td class="va-middle">
                                <span class="@BusinessObject.Retrocession.PerLifeSoaBo.GetStatusClass(item.Status)">
                                    @BusinessObject.Retrocession.PerLifeSoaBo.GetStatusName(item.Status)
                                </span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fas fa-ellipsis-v dropbtn" />
                                    </button>
                                    <div class="dropdown-menu">
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9" class="no-data">No available data found.</td>
                    </tr>
                }

            </table>
        </div>

        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
                    {
                        RetroPartyId = routeValue["RetroPartyId"],
                        RetroTreatyId = routeValue["RetroTreatyId"],
                        SoaQuarter = routeValue["SoaQuarter"],
                        ProcessingDate = routeValue["ProcessingDate"],
                        PersonInChargeId = routeValue["PersonInChargeId"],
                        InvoiceStatus = routeValue["InvoiceStatus"],
                        Status = routeValue["Status"],
                        SortOrder = ViewBag.SortOrder,
                        Page,
                    }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/date-quarter.js")
    <script>
        $(document).ready(function () {
            dateOffAutoComplete();

            $('#Quarter').datepicker({
            format: '@BusinessObject.Mfrs17ReportingBo.DateQuarterFormatJs',
            minViewMode: 1,
            autoclose: true,
            language: "qtrs",
            forceParse: false
            }).on('show', function (e) {
                var datepickerDropDown = $('.datepicker');
                datepickerDropDown.addClass('quarterpicker');
            });

            $('#ProcessingDate').datepicker({
                format: DateFormatDatePickerJs,
            });
        });

        function focusOnDate(val) {
            $('#' + val).focus();
        }
    </script>
}