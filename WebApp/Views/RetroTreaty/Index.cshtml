@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.RetroTreatyViewModel>

@{
    ViewBag.Title = "Retro Treaty";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-8 text-right btn-row-inline">
                <div class="file btn btn-upload" data-loading-text="Processing...<span></span>" style="display: inline-flex;">
                    <label>UPLOAD</label>
                    @using (Html.BeginForm("Upload", "RetroTreaty", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="file" id="dataFile" name="upload" accept=".csv" onchange="this.form.submit()" />
                    }
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        DOWNLOAD AS
                    </button>
                    <div class="dropdown-menu">
                        @Html.ActionLink("All", "Download", new { type = 1 }, new { @class = "dropdown-item" })
                        @Html.ActionLink("Filtered", "Download", new
                        {
                            type = 2,
                            RetroPartyId = routeValue["RetroPartyId"],
                            Code = routeValue["Code"],
                            TreatyTypePickListDetailId = routeValue["TreatyTypePickListDetailId"],
                            LineOfBusiness = routeValue["LineOfBusiness"],
                            RetroShare = routeValue["RetroShare"],
                            TreatyDiscountTableId = routeValue["TreatyDiscountTableId"],
                            EffectiveStartDate = routeValue["EffectiveStartDate"],
                            EffectiveEndDate = routeValue["EffectiveEndDate"],
                            Status = routeValue["Status"],
                        }, new { @class = "dropdown-item" })
                        @Html.ActionLink("Template", "Download", new { type = 3 }, new { @class = "dropdown-item" })
                    </div>
                </div>
                <a href="@Url.Action("Create")" class="btn btn-add">
                    ADD NEW
                </a>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRetroPartyId;
                                @Shared.Html.Sorter(ViewBag, "Retro Party", "RetroPartyId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortCode;
                                @Shared.Html.Sorter(ViewBag, "Retro Treaty Code", "Code", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortTreatyTypePickListDetailId;
                                @Shared.Html.Sorter(ViewBag, "Retro Treaty Type", "TreatyTypePickListDetailId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            Line of Business
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortRetroShare;
                                @Shared.Html.Sorter(ViewBag, "Retro Share", "RetroShare", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortTreatyDiscountTableId;
                                @Shared.Html.Sorter(ViewBag, "Retro Discount Table", "TreatyDiscountTableId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortEffectiveStartDate;
                                @Shared.Html.Sorter(ViewBag, "Retro Treaty Effective Start Date", "EffectiveStartDate", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortEffectiveEndDate;
                                @Shared.Html.Sorter(ViewBag, "Retro Treaty Effective End Date", "EffectiveEndDate", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortStatus;
                                @Shared.Html.Sorter(ViewBag, "Status", "Status", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>

                    <tr>
                        @using (Html.BeginForm("Index", "RetroTreaty", FormMethod.Get))
                        {
                            string sortOrder = ViewBag.SortOrder;

                            @Html.Hidden("SortOrder", sortOrder)
                            <th>
                                @Html.DropDownList("RetroPartyId", (List<SelectListItem>)ViewBag.DropDownRetroParties, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("Code", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("TreatyTypePickListDetailId", (List<SelectListItem>)ViewBag.DropDownTreatyTypes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @*@Html.DropDownList("LineOfBusiness", (List<SelectListItem>)ViewBag.DropDownYesNoWithSelect, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })*@
                            </th>
                            <th>
                                @Html.TextBox("RetroShare", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("TreatyDiscountTableId", (List<SelectListItem>)ViewBag.DropDownTreatyDiscountTables, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("EffectiveStartDate", null, new { @class = "form-control", placeholder = "DD MM YYYY", @onclick = "openDatePicker(this.id)" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('EffectiveStartDate')" />
                            </th>
                            <th>
                                @Html.TextBox("EffectiveEndDate", null, new { @class = "form-control", placeholder = "DD MM YYYY", @onclick = "openDatePicker(this.id)" })
                                <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('EffectiveEndDate')" />
                            </th>
                            <th>
                                @Html.DropDownList("Status", (List<SelectListItem>)ViewBag.DropDownStatuses, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>

                @if (Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.RetroParty.Party)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                            <td>
                                @if (item.TreatyTypePickListDetail != null)
                                {
                                    @Html.DisplayFor(modelItem => item.TreatyTypePickListDetail.Code)
                                }
                            </td>
                            <td>
                                @BusinessObject.Retrocession.RetroTreatyBo.GetLineOfBusiness(item.IsLobAutomatic, item.IsLobFacultative, item.IsLobAdvantageProgram)
                            </td>
                            <td>
                                @Shared.Util.DoubleToString(item.RetroShare)
                            </td>
                            <td>
                                @if (item.TreatyDiscountTable != null)
                                {
                                    @Html.DisplayFor(modelItem => item.TreatyDiscountTable.Rule)
                                }
                            </td>
                            <td>
                                @if (item.EffectiveStartDate.HasValue)
                                {
                                    @item.EffectiveStartDate.Value.ToString(Shared.Util.GetDateFormat())
                                }
                            </td>
                            <td>
                                @if (item.EffectiveEndDate.HasValue)
                                {
                                    @item.EffectiveEndDate.Value.ToString(Shared.Util.GetDateFormat())
                                }
                            </td>
                            <td class="va-middle">
                                <span class="@BusinessObject.Retrocession.RetroTreatyBo.GetStatusClass(item.Status)">
                                    @BusinessObject.Retrocession.RetroTreatyBo.GetStatusName(item.Status)
                                </span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fas fa-ellipsis-v dropbtn" />
                                    </button>
                                    <div class="dropdown-menu">
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="10" class="no-data">No available data found.</td>
                    </tr>
                }

            </table>
        </div>

        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
                   {
                       RetroPartyId = routeValue["RetroPartyId"],
                       Code = routeValue["Code"],
                       TreatyTypePickListDetailId = routeValue["TreatyTypePickListDetailId"],
                       LineOfBusiness = routeValue["LineOfBusiness"],
                       RetroShare = routeValue["RetroShare"],
                       TreatyDiscountTableId = routeValue["TreatyDiscountTableId"],
                       EffectiveStartDate = routeValue["EffectiveStartDate"],
                       EffectiveEndDate = routeValue["EffectiveEndDate"],
                       Status = routeValue["Status"],
                       SortOrder = ViewBag.SortOrder,
                       Page,
                   }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>
