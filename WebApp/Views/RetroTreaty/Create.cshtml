@model WebApp.Models.RetroTreatyViewModel

@{
    ViewBag.Title = "Retro Treaty";
    ViewBag.Action = "Create";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.RetroPartyId, htmlAttributes: new { @class = "col-form-label" })
                        @*@Html.EditorFor(model => model.Party, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", maxlength = ViewBag.PartyMaxLength } })*@
                        @Html.DropDownListFor(model => model.RetroPartyId, (List<SelectListItem>)ViewBag.DropDownRetroParties, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.RetroPartyId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here", maxlength = ViewBag.CodeMaxLength } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.TreatyTypePickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.TreatyTypePickListDetailId, (List<SelectListItem>)ViewBag.DropDownTreatyTypes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.TreatyTypePickListDetailId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.Label("Line Of Business", htmlAttributes: new { @class = "col-form-label" })

                        <div class="row">
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.IsLobAutomatic)
                                @Html.LabelFor(model => model.IsLobAutomatic, htmlAttributes: new { @class = "col-form-label mr-5" })
                            </div>

                            <div class="col-md-4">
                                @Html.EditorFor(model => model.IsLobFacultative)
                                @Html.LabelFor(model => model.IsLobFacultative, htmlAttributes: new { @class = "col-form-label mr-5" })
                            </div>

                            <div class="col-md-4">
                                @Html.EditorFor(model => model.IsLobAdvantageProgram)
                                @Html.LabelFor(model => model.IsLobAdvantageProgram, htmlAttributes: new { @class = "col-form-label" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.RetroShareStr, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.RetroShareStr, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.RetroShareStr, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.TreatyDiscountTableId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.TreatyDiscountTableId, (List<SelectListItem>)ViewBag.DropDownTreatyDiscountTables, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.TreatyDiscountTableId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.Status, (List<SelectListItem>)ViewBag.DropDownStatuses, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row mt-4">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.EffectiveStartDateStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.EffectiveStartDateStr, new { @class = "form-control", placeholder = "DD MM YYYY", @onclick = "openDatePicker(this.id)" })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('EffectiveStartDateStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.EffectiveStartDateStr, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.EffectiveEndDateStr, htmlAttributes: new { @class = "col-form-label" })
                        <div class="input-w-icon">
                            @Html.TextBoxFor(model => model.EffectiveEndDateStr, new { @class = "form-control", placeholder = "DD MM YYYY", @onclick = "openDatePicker(this.id)" })
                            <span class="fa fa-calendar-alt field-icon" aria-hidden="true" onclick="focusOnElement('EffectiveEndDateStr')" />
                        </div>
                        @Html.ValidationMessageFor(model => model.EffectiveEndDateStr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/textarea-autoresize.js")

    <script>
    </script>
}
