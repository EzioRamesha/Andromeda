@using PagedList.Mvc

@using BusinessObject.Identity

@using System.Dynamic

@model PagedList.IPagedList<WebApp.Models.UserViewModel>

@{
    ViewBag.Title = "User";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6"><h4>@ViewBag.Title</h4></div>
            <div class="col-md-6 text-right">
                <a href="@Url.Action("Create")" class="btn btn-add">
                    ADD USER
                </a>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-20">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortFullName;
                                @Shared.Html.Sorter(ViewBag, "Employee Name", "FullName", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortUserName;
                                @Shared.Html.Sorter(ViewBag, "Username", "UserName", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-20">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortDepartmentId;
                                @Shared.Html.Sorter(ViewBag, "Department", "DepartmentId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortAccessGroupId;
                                @Shared.Html.Sorter(ViewBag, "Access Group", "AccessGroupId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-20">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortEmail;
                                @Shared.Html.Sorter(ViewBag, "Email", "Email", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>

                    <tr>
                        @using (Html.BeginForm("Index", "User", FormMethod.Get))
                        {
                            @Html.Hidden("SortOrder", (string)ViewBag.SortOrder)
                            <th>
                                @Html.TextBox("FullName", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("UserName", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("DepartmentId", (List<SelectListItem>)ViewBag.DropDownDepartments, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("AccessGroupId", (List<SelectListItem>)ViewBag.DropDownAccessGroups, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("Email", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("Status", (List<SelectListItem>)ViewBag.DropDownStatus, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>

                @if (Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @if (item.Department != null)
                                {
                                    @item.Department.Name
                                }
                            </td>
                            <td>
                                @if (item.UserAccessGroups != null && item.UserAccessGroups.Count > 0)
                                {
                                    var i = 0;
                                    foreach (var uag in item.UserAccessGroups)
                                    {
                                        string accessGroupName = (i != 0 ? ", " : "") + uag.AccessGroup.Name;
                                        i++;

                                        @(accessGroupName)
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td class="va-middle">
                                <span class="@UserBo.GetStatusClass(item.Status)">
                                    @UserBo.GetStatusName(item.Status)
                                </span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fas fa-ellipsis-v dropbtn" />
                                    </button>
                                    <div class="dropdown-menu">
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="no-data">No available data found.</td>
                    </tr>
                }
            </table>
        </div>

        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
                    {
                       DepartmentId = routeValue["DepartmentId"],
                       AccessGroupId = routeValue["AccessGroupId"],
                       UserName = routeValue["UserName"],
                       FullName = routeValue["FullName"],
                       Email = routeValue["Email"],
                       Status = routeValue["Status"],
                       SortOrder = ViewBag.SortOrder,
                       Page,
                   }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>