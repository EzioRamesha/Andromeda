@model WebApp.Models.ItemCodeMappingViewModel

@{
    ViewBag.Title = "Item Code Mapping";
    ViewBag.Action = "Create";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>
    <div class="card-body">
        @Html.Partial("_LoadingSpinner")

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.InvoiceFieldPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.InvoiceFieldPickListDetailId, (List<SelectListItem>)ViewBag.DropDownInvoiceFields, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.InvoiceFieldPickListDetailId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.ItemCodeId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.ItemCodeId, (List<SelectListItem>)ViewBag.ItemCodes, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.ItemCodeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        <label class="col-form-label" for="TreatyType">Treaty Type <span class="sub-label">(Separated by Comma)</span></label>
                        @Html.EditorFor(model => model.TreatyType, new { htmlAttributes = new { id = "TreatyTypeTokenField", @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.TreatyType, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">&nbsp;</div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        <label class="col-form-label" for="TreatyCode">Treaty Code <span class="sub-label">(Separated by Comma)</span></label>
                        @Html.EditorFor(model => model.TreatyCode, new { htmlAttributes = new { id = "TreatyCodeTokenField", @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.TreatyCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">&nbsp;</div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.BusinessOriginPickListDetailId, htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.BusinessOriginPickListDetailId, (List<SelectListItem>)ViewBag.DropDownBusinessOrigins, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.BusinessOriginPickListDetailId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6 mid-line-2">&nbsp;</div>
                </div>
                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var TreatyTypes = @Html.Raw(Json.Encode(ViewBag.TreatyTypes));
        var TreatyCodes = @Html.Raw(Json.Encode(ViewBag.TreatyCodes));
        var treatyTypeCount = 0;
        var treatyCodeCount = 0;

        var tokenfieldReady = {
            treatyType: false,
            treatyCode: false,
        };

        var loadingDiv = $("#loadingSpinner");
    </script>

    @Scripts.Render("~/Scripts/models/ItemCodeMapping.js")
}