@using PagedList.Mvc

@model PagedList.IPagedList<WebApp.Models.ItemCodeMappingViewModel>

@{
    ViewBag.Title = "Item Code Mapping";
    var routeValue = (RouteValueDictionary)ViewBag.RouteValue;
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-4"><h4>@ViewBag.Title Maintenance</h4></div>
            <div class="col-md-8 text-right btn-row-inline">
                <div class="file btn btn-upload" data-loading-text="Processing...<span></span>" style="display: inline-flex;">
                    <label>UPLOAD</label>
                    @using (Html.BeginForm("Upload", "ItemCodeMapping", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="file" id="dataFile" name="upload" accept=".csv" onchange="this.form.submit()" />
                    }
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-download dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        DOWNLOAD AS
                    </button>
                    <div class="dropdown-menu">
                        @Html.ActionLink("All", "Download", new { type = 1 }, new { @class = "dropdown-item" })
                        @Html.ActionLink("Filtered", "Download", new
                        {
                            type = 2,
                            InvoiceFieldPickListDetailId = routeValue["InvoiceFieldPickListDetailId"],
                            TreatyType = routeValue["TreatyType"],
                            TreatyCode = routeValue["TreatyCode"],
                            BusinessOriginPickListDetailId = routeValue["BusinessOriginPickListDetailId"],
                            ItemCodeId = routeValue["ItemCodeId"],
                            ReportingType = routeValue["ReportingType"]
                        }, new { @class = "dropdown-item" })
                        @Html.ActionLink("Template", "Download", new { type = 3 }, new { @class = "dropdown-item" })
                    </div>
                </div>
                <a href="@Url.Action("Create")" class="btn btn-add">
                    ADD NEW
                </a>
            </div>
        </div>
    </div>
    <div class="card-body card-listing">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortInvoiceFieldPickListDetailId;
                                @Shared.Html.Sorter(ViewBag, "Invoice Field", "InvoiceFieldPickListDetailId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-25">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().TreatyType)
                        </th>
                        <th class="w-25">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().TreatyCode)
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortBusinessOriginPickListDetailId;
                                @Shared.Html.Sorter(ViewBag, "Business Origin", "BusinessOriginPickListDetailId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-15">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortItemCodeId;
                                @Shared.Html.Sorter(ViewBag, "Item Code", "ItemCodeId", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="w-10">
                            @{
                                routeValue["SortOrder"] = ViewBag.SortReportingType;
                                @Shared.Html.Sorter(ViewBag, "Reporting Type", "ReportingType", @Url.Action("Index", routeValue))
                            }
                        </th>
                        <th class="text-center w-5">
                            Action
                        </th>
                    </tr>
                    <tr>
                        @using (Html.BeginForm("Index", "ItemCodeMapping", FormMethod.Get))
                        {
                            @Html.Hidden("SortOrder", (string)ViewBag.SortOrder)
                            <th>
                                @Html.DropDownList("InvoiceFieldPickListDetailId", (List<SelectListItem>)ViewBag.DropDownInvoiceFields, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.TextBox("TreatyType", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.TextBox("TreatyCode", null, new { @class = "form-control", placeholder = "Type here" })
                            </th>
                            <th>
                                @Html.DropDownList("BusinessOriginPickListDetailId", (List<SelectListItem>)ViewBag.DropDownBusinessOrigins, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("ItemCodeId", (List<SelectListItem>)ViewBag.ItemCodes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th>
                                @Html.DropDownList("ReportingType", (List<SelectListItem>)ViewBag.ReportingTypes, htmlAttributes: new { @class = "form-control selectpicker", @data_container = "body" })
                            </th>
                            <th class="text-center align-middle">
                                <div class="btn-row-action">
                                    <a href="@Url.Action("Index")" class="btn btn-circle" title="Clear">
                                        <span class="fas fa-backspace" />
                                    </a>
                                    <button type="submit" title="Search" class="btn-circle"><span class="fas fa-search" /></button>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Count > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @if (item.InvoiceFieldPickListDetail != null)
                                    {
                                        @item.InvoiceFieldPickListDetail.ToString()
                                    }
                                </td>
                                <td>
                                    @Shared.Util.GetTruncatedValue(item.TreatyType)
                                </td>
                                <td>
                                    @Shared.Util.GetTruncatedValue(item.TreatyCode)
                                </td>
                                <td>
                                    @if (item.BusinessOriginPickListDetail != null)
                                    {
                                        @item.BusinessOriginPickListDetail.ToString()
                                    }
                                </td>
                                <td>
                                    @if (item.ItemCode != null)
                                    {
                                        @item.ItemCode.ToString()
                                    }
                                </td>
                                <td>
                                    @if (item.ItemCode != null)
                                    {
                                        @BusinessObject.ItemCodeBo.GetReportingTypeName(item.ItemCode.ReportingType)
                                    }
                                </td>
                                <td class="text-center">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-action" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fas fa-ellipsis-v dropbtn" />
                                        </button>
                                        <div class="dropdown-menu">
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "dropdown-item" })
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "dropdown-item" })
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="no-data">No available data found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="pagination-footer">
            <div class="row">
                <div class="col-md-4">
                    @Html.Partial("_PageInfo")
                </div>
                <div class="col-md-8">
                    @Html.PagedListPager(Model, Page => Url.Action("Index", new
                    {
                        InvoiceFieldPickListDetailId = routeValue["InvoiceFieldPickListDetailId"],
                        TreatyType = routeValue["TreatyType"],
                        TreatyCode = routeValue["TreatyCode"],
                        BusinessOriginPickListDetailId = routeValue["BusinessOriginPickListDetailId"],
                        ItemCodeId = routeValue["ItemCodeId"],
                        ReportingType = routeValue["ReportingType"],
                        SortOrder = ViewBag.SortOrder,
                        Page,
                    }), Shared.Html.GetPagedListRenderOptions())
                </div>
            </div>
        </div>
    </div>
</div>