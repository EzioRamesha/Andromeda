@model WebApp.Models.PickListViewModel

@{
    ViewBag.Title = "Pick List";
    ViewBag.Action = "Create";
    ViewBag.ListPageUrl = Url.Action("Index");
}

@section breadcrumb
{
    @Html.Partial("_Breadcrumb")
}

@Html.Partial("_BackToList")

@Html.Partial("_ValidationSummary")

<div class="card" id="app">
    <div class="card-header">
        <h4>@ViewBag.Action @ViewBag.Title</h4>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>@ViewBag.Title</h4>
                <hr />

                <div class="form-row">
                    <div class="form-group col-md-6 mid-line-1">
                        @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "col-form-label" })
                        @Html.DropDownListFor(model => model.DepartmentId, (List<SelectListItem>)ViewBag.DropDownDepartments, htmlAttributes: new { @class = "form-control selectpicker" })
                        @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 mid-line-2">
                        @Html.LabelFor(model => model.FieldName, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.FieldName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type here" } })
                        @Html.ValidationMessageFor(model => model.FieldName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group cl-md-12">
                        <div class="text-right">
                            <button type="button" v-on:click="addNewDetail" class="btn btn-add-sub mt-4">ADD NEW</button>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover table-sm my-3">
                                <thead>
                                    <tr>
                                        <th>Code</th>
                                        <th>Description</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-if="!details.length">
                                        <td colspan="2" class="no-data">No available data found.</td>
                                    </tr>
                                    <tr v-for="(detail, index) in details">
                                        <td><input v-model="detail.Code" class="form-control form-control-sm" :name="'code[' + index + ']'" placeholder="Type here" /></td>
                                        <td><input v-model="detail.Description" class="form-control form-control-sm" :name="'description[' + index + ']'" placeholder="Type here" /></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="form-row form-row-btn">
                    <div class="form-group col-md-12 btn-row">
                        @Html.ActionLink("CANCEL", "Index", null, new { @class = "btn btn-cancel" })
                        <button type="submit" class="btn btn-submit float-right">SAVE</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@Html.Partial("_BackToList")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var app = new Vue({
            el: '#app',
            data: {
                details: [
                    {
                        SortIndex: 1,
                        Code: '',
                        Description: '',
                    },
                ],
                SortIndex: 1,
            },
            methods: {
                addNewDetail: function () {
                    this.details.push({ SortIndex: this.SortIndex + 1 });
                    this.SortIndex++;
                }
            },
        });
    </script>
}
